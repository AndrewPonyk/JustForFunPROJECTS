<?xml version="1.0" encoding="UTF-8"?>
<questions id="1_0_0_13_5_0" name="JNI_helloworlds" nofquestions="1" nofsubcategories="0" filename="jni_helloworlds1_0_0_13_5_0.xml">
  <question id="1_0_0_13_5_0:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Create&amp;nbsp;native&amp;nbsp;method,&amp;nbsp;which&amp;nbsp;will&amp;nbsp;write&amp;nbsp;some&amp;nbsp;text&amp;nbsp;to&amp;nbsp;console&amp;nbsp;and&amp;nbsp;to&amp;nbsp;file,&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;describe.&amp;nbsp;(What&amp;nbsp;is&amp;nbsp;javah&amp;nbsp;tool&amp;nbsp;in&amp;nbsp;jdk&amp;nbsp;?)&lt;br&gt;
Java&amp;nbsp;code&amp;nbsp;:&amp;nbsp;&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;JNIFoo&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;native&amp;nbsp;void&amp;nbsp;nativeFoo();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
.....&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Using&amp;nbsp;JNI:&lt;br&gt;
1)&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;java&amp;nbsp;class&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;JNIFoo&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;native&amp;nbsp;void&amp;nbsp;nativeFoo();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.loadLibrary("foo");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;print&amp;nbsp;()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;nativeFoo();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(new&amp;nbsp;JNIFoo()).print();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;Compile&amp;nbsp;java&amp;nbsp;code&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;javac&amp;nbsp;JNIFoo.java&lt;br&gt;
&lt;br&gt;
3)&amp;nbsp;Create&amp;nbsp;Header&amp;nbsp;file&amp;nbsp;with&amp;nbsp;javah&amp;nbsp;tool&amp;nbsp;&lt;br&gt;
&amp;nbsp;javah&amp;nbsp;-jni&amp;nbsp;JNIFoo&lt;br&gt;
&lt;br&gt;
This&amp;nbsp;command&amp;nbsp;will&amp;nbsp;create&amp;nbsp;header&amp;nbsp;file&amp;nbsp;with&amp;nbsp;method&amp;nbsp;signature&amp;nbsp;:&lt;br&gt;
/*&amp;nbsp;DO&amp;nbsp;NOT&amp;nbsp;EDIT&amp;nbsp;THIS&amp;nbsp;FILE&amp;nbsp;-&amp;nbsp;it&amp;nbsp;is&amp;nbsp;machine&amp;nbsp;generated&amp;nbsp;*/&lt;br&gt;
#include&amp;nbsp;&lt;jni.h&gt;&lt;br&gt;
/*&amp;nbsp;Header&amp;nbsp;for&amp;nbsp;class&amp;nbsp;JNIFoo&amp;nbsp;*/&lt;br&gt;
&lt;br&gt;
#ifndef&amp;nbsp;_Included_JNIFoo&lt;br&gt;
#define&amp;nbsp;_Included_JNIFoo&lt;br&gt;
#ifdef&amp;nbsp;__cplusplus&lt;br&gt;
extern&amp;nbsp;"C"&amp;nbsp;{&lt;br&gt;
#endif&lt;br&gt;
/*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Class:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JNIFoo&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Method:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;nativeFoo&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Signature:&amp;nbsp;()V&lt;br&gt;
&amp;nbsp;*/&lt;br&gt;
JNIEXPORT&amp;nbsp;void&amp;nbsp;JNICALL&amp;nbsp;Java_JNIFoo_nativeFoo&lt;br&gt;
&amp;nbsp;&amp;nbsp;(JNIEnv&amp;nbsp;*,&amp;nbsp;jobject);&lt;br&gt;
&lt;br&gt;
#ifdef&amp;nbsp;__cplusplus&lt;br&gt;
}&lt;br&gt;
#endif&lt;br&gt;
#endif&lt;br&gt;
&lt;br&gt;
4)&amp;nbsp;Create&amp;nbsp;foo.c&amp;nbsp;-&amp;nbsp;file&amp;nbsp;with&amp;nbsp;method&amp;nbsp;Java_JNIFoo_nativeFoo&amp;nbsp;implementation&lt;br&gt;
&lt;br&gt;
#include&amp;nbsp;&lt;stdio.h&gt;&lt;br&gt;
#include&amp;nbsp;&lt;stdlib.h&gt;&lt;br&gt;
#include&amp;nbsp;&lt;string.h&gt;&lt;br&gt;
#include&amp;nbsp;&lt;jni.h&gt;&lt;br&gt;
#include&amp;nbsp;"JNIFoo.h"&lt;br&gt;
&lt;br&gt;
JNIEXPORT&amp;nbsp;void&amp;nbsp;JNICALL&amp;nbsp;Java_JNIFoo_nativeFoo&lt;br&gt;
&amp;nbsp;&amp;nbsp;(JNIEnv&amp;nbsp;*env,&amp;nbsp;jobject&amp;nbsp;obj)&lt;br&gt;
{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf("Code&amp;nbsp;from&amp;nbsp;C&amp;nbsp;executed&amp;nbsp;in&amp;nbsp;Java");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FILE&amp;nbsp;*f&amp;nbsp;=&amp;nbsp;fopen("/home/andrii/temp/file.txt",&amp;nbsp;"w");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const&amp;nbsp;char&amp;nbsp;*text&amp;nbsp;=&amp;nbsp;"Write&amp;nbsp;this&amp;nbsp;to&amp;nbsp;the&amp;nbsp;file";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fprintf(f,&amp;nbsp;"Some&amp;nbsp;text:&amp;nbsp;%s\n",&amp;nbsp;text);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fclose(f);&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
5)&amp;nbsp;Compile&amp;nbsp;C&amp;nbsp;code&lt;br&gt;
&amp;nbsp;gcc&amp;nbsp;-shared&amp;nbsp;-fpic&amp;nbsp;-o&amp;nbsp;libfoo.so&amp;nbsp;-I/usr/lib/jvm/java-8-oracle/include&amp;nbsp;-I/usr/lib/jvm/java-8-oracle/include/linux&amp;nbsp;foo.c&amp;nbsp;&lt;br&gt;
&lt;br&gt;
6)&amp;nbsp;Execute&amp;nbsp;java&amp;nbsp;code&amp;nbsp;(which&amp;nbsp;will&amp;nbsp;execute&amp;nbsp;native&amp;nbsp;C&amp;nbsp;code)&lt;br&gt;
java&amp;nbsp;-Djava.library.path=/home/andrii/git/JavaRelated/JavaCore/AdvancedTopics/JNI/JniHelloWorld/&amp;nbsp;JNIFoo&lt;br&gt;</questionanswer>
  </question>
</questions>
