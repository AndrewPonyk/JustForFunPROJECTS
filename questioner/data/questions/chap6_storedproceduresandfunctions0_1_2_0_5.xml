<?xml version="1.0" encoding="UTF-8"?>
<questions id="0_1_2_0_5" name="chap6_StoredProceduresAndFunctions" nofquestions="4" nofsubcategories="0" filename="chap6_storedproceduresandfunctions0_1_2_0_5.xml">
  <question id="0_1_2_0_5:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mysql&amp;nbsp;stored&amp;nbsp;procedures&amp;nbsp;,&amp;nbsp;describe.&amp;nbsp;Provide&amp;nbsp;simpe&amp;nbsp;example.&lt;br&gt;
What&amp;nbsp;is&amp;nbsp;'Delimiter'&amp;nbsp;keyword&amp;nbsp;,&amp;nbsp;what&amp;nbsp;is&amp;nbsp;it&amp;nbsp;used&amp;nbsp;for&amp;nbsp;?&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Most&amp;nbsp;programmers&amp;nbsp;will&amp;nbsp;be&amp;nbsp;familiar&amp;nbsp;with&amp;nbsp;the&amp;nbsp;concept&amp;nbsp;of&amp;nbsp;functions—reusable,&lt;br&gt;
independent&amp;nbsp;code&amp;nbsp;segments&amp;nbsp;that&amp;nbsp;encapsulate&amp;nbsp;specific&amp;nbsp;tasks&amp;nbsp;and&amp;nbsp;can&amp;nbsp;be&amp;nbsp;“called&lt;br&gt;
upon”&amp;nbsp;as&amp;nbsp;needed&amp;nbsp;from&amp;nbsp;different&amp;nbsp;applications.&amp;nbsp;However,&amp;nbsp;this&amp;nbsp;construct&amp;nbsp;isn’t&amp;nbsp;limited&lt;br&gt;
only&amp;nbsp;to&amp;nbsp;programming&amp;nbsp;languages:&amp;nbsp;one&amp;nbsp;of&amp;nbsp;the&amp;nbsp;key&amp;nbsp;new&amp;nbsp;features&amp;nbsp;introduced&amp;nbsp;in&amp;nbsp;MySQL&amp;nbsp;5.0&lt;br&gt;
was&amp;nbsp;its&amp;nbsp;support&amp;nbsp;for&amp;nbsp;stored&amp;nbsp;routines,&amp;nbsp;which&amp;nbsp;bring&amp;nbsp;similar&amp;nbsp;reusability&amp;nbsp;to&amp;nbsp;SQL&amp;nbsp;statements.&lt;br&gt;
&lt;br&gt;
As&amp;nbsp;your&amp;nbsp;SQL&amp;nbsp;business&amp;nbsp;logic&amp;nbsp;becomes&amp;nbsp;more&amp;nbsp;complex,&amp;nbsp;you&amp;nbsp;might&amp;nbsp;find&amp;nbsp;yourself&amp;nbsp;repeatedly&lt;br&gt;
writing&amp;nbsp;blocks&amp;nbsp;of&amp;nbsp;SQL&amp;nbsp;statements&amp;nbsp;to&amp;nbsp;perform&amp;nbsp;the&amp;nbsp;same&amp;nbsp;database&amp;nbsp;operation&amp;nbsp;at&amp;nbsp;the&lt;br&gt;
application&amp;nbsp;level—for&amp;nbsp;example,&amp;nbsp;inserting&amp;nbsp;a&amp;nbsp;set&amp;nbsp;of&amp;nbsp;linked&amp;nbsp;records&amp;nbsp;or&amp;nbsp;performing&lt;br&gt;
calculations&amp;nbsp;on&amp;nbsp;a&amp;nbsp;particular&amp;nbsp;result&amp;nbsp;set.&amp;nbsp;In&amp;nbsp;these&amp;nbsp;situations,&amp;nbsp;it&amp;nbsp;usually&amp;nbsp;makes&amp;nbsp;sense&amp;nbsp;to&amp;nbsp;turn&lt;br&gt;
this&amp;nbsp;block&amp;nbsp;of&amp;nbsp;SQL&amp;nbsp;code&amp;nbsp;into&amp;nbsp;a&amp;nbsp;reusable&amp;nbsp;routine,&amp;nbsp;which&amp;nbsp;resides&amp;nbsp;on&amp;nbsp;the&amp;nbsp;database&amp;nbsp;server&lt;br&gt;
(rather&amp;nbsp;than&amp;nbsp;in&amp;nbsp;the&amp;nbsp;application)&amp;nbsp;so&amp;nbsp;that&amp;nbsp;it&amp;nbsp;can&amp;nbsp;be&amp;nbsp;managed&amp;nbsp;independently&amp;nbsp;and&amp;nbsp;invoked&lt;br&gt;
as&amp;nbsp;needed&amp;nbsp;from&amp;nbsp;different&amp;nbsp;modules&amp;nbsp;in&amp;nbsp;your&amp;nbsp;application.&lt;br&gt;
Packaging&amp;nbsp;SQL&amp;nbsp;statements&amp;nbsp;into&amp;nbsp;server-side&amp;nbsp;routines&amp;nbsp;has&amp;nbsp;four&amp;nbsp;important&amp;nbsp;advantages.&lt;br&gt;
&lt;br&gt;
-&amp;nbsp;A&amp;nbsp;stored&amp;nbsp;routine&amp;nbsp;is&amp;nbsp;held&amp;nbsp;on&amp;nbsp;the&amp;nbsp;database&amp;nbsp;server,&amp;nbsp;rather&amp;nbsp;than&amp;nbsp;in&amp;nbsp;the&amp;nbsp;application.&lt;br&gt;
For&amp;nbsp;applications&amp;nbsp;based&amp;nbsp;on&amp;nbsp;a&amp;nbsp;client-server&amp;nbsp;architecture,&amp;nbsp;calling&amp;nbsp;a&amp;nbsp;stored&amp;nbsp;routine&amp;nbsp;is&lt;br&gt;
faster&amp;nbsp;and&amp;nbsp;requires&amp;nbsp;less&amp;nbsp;network&amp;nbsp;bandwidth&amp;nbsp;than&amp;nbsp;transmitting&amp;nbsp;an&amp;nbsp;entire&amp;nbsp;series&amp;nbsp;of&lt;br&gt;
SQL&amp;nbsp;statements&amp;nbsp;and&amp;nbsp;taking&amp;nbsp;decisions&amp;nbsp;on&amp;nbsp;the&amp;nbsp;result&amp;nbsp;sets.&amp;nbsp;Stored&amp;nbsp;routines&amp;nbsp;also&lt;br&gt;
reduce&amp;nbsp;code&amp;nbsp;duplication&amp;nbsp;by&amp;nbsp;allowing&amp;nbsp;developers&amp;nbsp;to&amp;nbsp;extract&amp;nbsp;commonly&amp;nbsp;used&amp;nbsp;SQL&lt;br&gt;
operations&amp;nbsp;into&amp;nbsp;a&amp;nbsp;single&amp;nbsp;component.&amp;nbsp;The&amp;nbsp;end&amp;nbsp;result&amp;nbsp;is&amp;nbsp;that&amp;nbsp;application&amp;nbsp;code&lt;br&gt;
becomes&amp;nbsp;smaller,&amp;nbsp;more&amp;nbsp;efficient,&amp;nbsp;and&amp;nbsp;easier&amp;nbsp;to&amp;nbsp;read.&lt;br&gt;
&lt;br&gt;
-&amp;nbsp;A&amp;nbsp;stored&amp;nbsp;routine&amp;nbsp;is&amp;nbsp;created&amp;nbsp;once&amp;nbsp;but&amp;nbsp;used&amp;nbsp;many&amp;nbsp;times,&amp;nbsp;often&amp;nbsp;from&amp;nbsp;more&amp;nbsp;than&amp;nbsp;one&lt;br&gt;
program.&amp;nbsp;If&amp;nbsp;the&amp;nbsp;routine&amp;nbsp;changes,&amp;nbsp;the&amp;nbsp;changes&amp;nbsp;are&amp;nbsp;implemented&amp;nbsp;in&amp;nbsp;one&amp;nbsp;spot&amp;nbsp;(the&lt;br&gt;
routine&amp;nbsp;definition)&amp;nbsp;while&amp;nbsp;the&amp;nbsp;routine&amp;nbsp;invocations&amp;nbsp;remain&amp;nbsp;untouched.&amp;nbsp;This&amp;nbsp;fact&lt;br&gt;
can&amp;nbsp;significantly&amp;nbsp;simplify&amp;nbsp;code&amp;nbsp;maintenance&amp;nbsp;and&amp;nbsp;upgrades.&amp;nbsp;Debugging&amp;nbsp;and&lt;br&gt;
testing&amp;nbsp;an&amp;nbsp;application&amp;nbsp;also&amp;nbsp;becomes&amp;nbsp;easier,&amp;nbsp;as&amp;nbsp;errors&amp;nbsp;can&amp;nbsp;be&amp;nbsp;traced&amp;nbsp;and&amp;nbsp;corrected&lt;br&gt;
with&amp;nbsp;minimal&amp;nbsp;impact&amp;nbsp;to&amp;nbsp;the&amp;nbsp;application&amp;nbsp;code.&lt;br&gt;
&lt;br&gt;
-&amp;nbsp;Implementing&amp;nbsp;database&amp;nbsp;operations&amp;nbsp;as&amp;nbsp;stored&amp;nbsp;routines&amp;nbsp;can&amp;nbsp;improve&amp;nbsp;application&lt;br&gt;
security,&amp;nbsp;because&amp;nbsp;application&amp;nbsp;modules&amp;nbsp;can&amp;nbsp;be&amp;nbsp;denied&amp;nbsp;access&amp;nbsp;to&amp;nbsp;particular&amp;nbsp;tables&lt;br&gt;
and&amp;nbsp;only&amp;nbsp;granted&amp;nbsp;access&amp;nbsp;to&amp;nbsp;the&amp;nbsp;routines&amp;nbsp;that&amp;nbsp;manipulate&amp;nbsp;those&amp;nbsp;tables.&amp;nbsp;This&amp;nbsp;not&lt;br&gt;
only&amp;nbsp;ensures&amp;nbsp;that&amp;nbsp;an&amp;nbsp;application&amp;nbsp;only&amp;nbsp;sees&amp;nbsp;the&amp;nbsp;data&amp;nbsp;it&amp;nbsp;needs,&amp;nbsp;but&amp;nbsp;also&amp;nbsp;ensures&lt;br&gt;
consistent&amp;nbsp;implementation&amp;nbsp;of&amp;nbsp;specific&amp;nbsp;tasks&amp;nbsp;or&amp;nbsp;submodules&amp;nbsp;across&amp;nbsp;the&amp;nbsp;application&lt;br&gt;
(because&amp;nbsp;all&amp;nbsp;application&amp;nbsp;modules&amp;nbsp;will&amp;nbsp;make&amp;nbsp;use&amp;nbsp;of&amp;nbsp;the&amp;nbsp;same&amp;nbsp;stored&amp;nbsp;routines&lt;br&gt;
rather&amp;nbsp;than&amp;nbsp;attempting&amp;nbsp;to&amp;nbsp;directly&amp;nbsp;manipulate&amp;nbsp;the&amp;nbsp;base&amp;nbsp;tables).&lt;br&gt;
---------------&lt;br&gt;
&lt;br&gt;
&amp;nbsp;It’s&amp;nbsp;worth&amp;nbsp;noting&amp;nbsp;also&amp;nbsp;that&amp;nbsp;in&amp;nbsp;the&amp;nbsp;MySQL&amp;nbsp;world,&amp;nbsp;the&amp;nbsp;term&amp;nbsp;“stored&amp;nbsp;routines”&amp;nbsp;is&amp;nbsp;used&lt;br&gt;
generically&amp;nbsp;to&amp;nbsp;refer&amp;nbsp;to&amp;nbsp;two&amp;nbsp;different&amp;nbsp;animals:&amp;nbsp;stored&amp;nbsp;procedures&amp;nbsp;and&amp;nbsp;stored&amp;nbsp;functions.&lt;br&gt;
&lt;br&gt;
While&amp;nbsp;both&amp;nbsp;types&amp;nbsp;of&amp;nbsp;routines&amp;nbsp;contain&amp;nbsp;SQL&amp;nbsp;statements,&amp;nbsp;MySQL&amp;nbsp;imposes&amp;nbsp;several&amp;nbsp;key&lt;br&gt;
restrictions&amp;nbsp;on&amp;nbsp;stored&amp;nbsp;functions&amp;nbsp;that&amp;nbsp;are&amp;nbsp;not&amp;nbsp;applicable&amp;nbsp;to&amp;nbsp;stored&amp;nbsp;procedures,&amp;nbsp;as&amp;nbsp;follows:&lt;br&gt;
*&amp;nbsp;Stored&amp;nbsp;functions&amp;nbsp;cannot&amp;nbsp;use&amp;nbsp;SQL&amp;nbsp;statements&amp;nbsp;that&amp;nbsp;return&amp;nbsp;result&amp;nbsp;sets.&lt;br&gt;
*&amp;nbsp;Stored&amp;nbsp;functions&amp;nbsp;cannot&amp;nbsp;use&amp;nbsp;SQL&amp;nbsp;statements&amp;nbsp;that&amp;nbsp;perform&amp;nbsp;transactional&amp;nbsp;commits&lt;br&gt;
or&amp;nbsp;rollbacks.&lt;br&gt;
*&amp;nbsp;Stored&amp;nbsp;functions&amp;nbsp;cannot&amp;nbsp;call&amp;nbsp;themselves&amp;nbsp;recursively.&lt;br&gt;
*&amp;nbsp;Stored&amp;nbsp;functions&amp;nbsp;must&amp;nbsp;produce&amp;nbsp;a&amp;nbsp;return&amp;nbsp;value.&lt;br&gt;
&lt;br&gt;
==================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Creating&amp;nbsp;and&amp;nbsp;Using&amp;nbsp;Stored&amp;nbsp;Procedures&lt;br&gt;
&lt;br&gt;
There&amp;nbsp;are&amp;nbsp;three&amp;nbsp;components&amp;nbsp;to&amp;nbsp;every&amp;nbsp;stored&amp;nbsp;routine&amp;nbsp;(function&amp;nbsp;or&amp;nbsp;procedure).&lt;br&gt;
-&amp;nbsp;Input&amp;nbsp;parameters,&amp;nbsp;or&amp;nbsp;arguments,&amp;nbsp;which&amp;nbsp;serve&amp;nbsp;as&amp;nbsp;inputs&amp;nbsp;to&amp;nbsp;the&amp;nbsp;routine&lt;br&gt;
-&amp;nbsp;Output&amp;nbsp;parameters,&amp;nbsp;or&amp;nbsp;return&amp;nbsp;values,&amp;nbsp;which&amp;nbsp;are&amp;nbsp;the&amp;nbsp;outputs&amp;nbsp;returned&amp;nbsp;by&amp;nbsp;the&amp;nbsp;routine&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;body,&amp;nbsp;which&amp;nbsp;contains&amp;nbsp;the&amp;nbsp;SQL&amp;nbsp;statements&amp;nbsp;to&amp;nbsp;be&amp;nbsp;executed&lt;br&gt;
&lt;br&gt;
!!!&amp;nbsp;Note&amp;nbsp;To&amp;nbsp;create&amp;nbsp;a&amp;nbsp;stored&amp;nbsp;routine,&amp;nbsp;a&amp;nbsp;user&amp;nbsp;must&amp;nbsp;have&amp;nbsp;the&amp;nbsp;CREATE&amp;nbsp;ROUTINE&amp;nbsp;privilege.&amp;nbsp;To&amp;nbsp;execute&lt;br&gt;
a&amp;nbsp;stored&amp;nbsp;routine,&amp;nbsp;a&amp;nbsp;user&amp;nbsp;must&amp;nbsp;have&amp;nbsp;the&amp;nbsp;EXECUTE&amp;nbsp;privilege&lt;br&gt;
&lt;br&gt;
To&amp;nbsp;begin&amp;nbsp;with,&amp;nbsp;let’s&amp;nbsp;see&amp;nbsp;a&amp;nbsp;simple&amp;nbsp;example&amp;nbsp;of&amp;nbsp;a&amp;nbsp;stored&amp;nbsp;procedure,&amp;nbsp;one&amp;nbsp;that&amp;nbsp;doesn’t&amp;nbsp;use&lt;br&gt;
either&amp;nbsp;arguments&amp;nbsp;or&amp;nbsp;return&amp;nbsp;values.&lt;br&gt;
&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&amp;nbsp;count_airports()&lt;br&gt;
BEGIN&lt;br&gt;
SELECT&amp;nbsp;COUNT(AirportID)&amp;nbsp;FROM&amp;nbsp;airport;&lt;br&gt;
&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.62&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
!!!!&amp;nbsp;Notice&amp;nbsp;also&amp;nbsp;in&amp;nbsp;the&amp;nbsp;previous&amp;nbsp;example&amp;nbsp;that&amp;nbsp;the&amp;nbsp;DELIMITER&amp;nbsp;command&amp;nbsp;is&amp;nbsp;used&amp;nbsp;to&lt;br&gt;
change&amp;nbsp;the&amp;nbsp;statement&amp;nbsp;delimiter&amp;nbsp;used&amp;nbsp;by&amp;nbsp;MySQL&amp;nbsp;from&amp;nbsp;;&amp;nbsp;to&amp;nbsp;//.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;to&amp;nbsp;ensure&amp;nbsp;that&amp;nbsp;the&amp;nbsp;;&lt;br&gt;
used&amp;nbsp;to&amp;nbsp;terminate&amp;nbsp;statements&amp;nbsp;within&amp;nbsp;the&amp;nbsp;procedure&amp;nbsp;body&amp;nbsp;does&amp;nbsp;not&amp;nbsp;prematurely&amp;nbsp;end&amp;nbsp;the&lt;br&gt;
procedure&amp;nbsp;definition.&amp;nbsp;The&amp;nbsp;delimiter&amp;nbsp;is&amp;nbsp;changed&amp;nbsp;back&amp;nbsp;to&amp;nbsp;normal&amp;nbsp;once&amp;nbsp;the&amp;nbsp;fully&amp;nbsp;defined&lt;br&gt;
procedure&amp;nbsp;has&amp;nbsp;been&amp;nbsp;accepted&amp;nbsp;by&amp;nbsp;the&amp;nbsp;server.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
!!!&amp;nbsp;Can&amp;nbsp;I&amp;nbsp;Override&amp;nbsp;MySQL’s&amp;nbsp;Built-in&amp;nbsp;Functions&amp;nbsp;by&amp;nbsp;Creating&amp;nbsp;New&lt;br&gt;
Ones&amp;nbsp;with&amp;nbsp;the&amp;nbsp;Same&amp;nbsp;Name?&lt;br&gt;
No.&amp;nbsp;In&amp;nbsp;fact,&amp;nbsp;as&amp;nbsp;a&amp;nbsp;general&amp;nbsp;rule,&amp;nbsp;you&amp;nbsp;should&amp;nbsp;avoid&amp;nbsp;using&amp;nbsp;existing&amp;nbsp;built-in&amp;nbsp;function&lt;br&gt;
names&amp;nbsp;as&amp;nbsp;the&amp;nbsp;names&amp;nbsp;for&amp;nbsp;your&amp;nbsp;stored&amp;nbsp;routines;&amp;nbsp;however,&amp;nbsp;if&amp;nbsp;you&amp;nbsp;must&amp;nbsp;do&amp;nbsp;this,&amp;nbsp;MySQL&lt;br&gt;
permits&amp;nbsp;it&amp;nbsp;as&amp;nbsp;long&amp;nbsp;as&amp;nbsp;there&amp;nbsp;is&amp;nbsp;an&amp;nbsp;additional&amp;nbsp;space&amp;nbsp;between&amp;nbsp;the&amp;nbsp;procedure&amp;nbsp;or&amp;nbsp;function&lt;br&gt;
name&amp;nbsp;and&amp;nbsp;the&amp;nbsp;parentheses&amp;nbsp;that&amp;nbsp;follow&amp;nbsp;it.&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CALL&amp;nbsp;!!!&lt;br&gt;
Of&amp;nbsp;course,&amp;nbsp;defining&amp;nbsp;a&amp;nbsp;stored&amp;nbsp;procedure&amp;nbsp;is&amp;nbsp;only&amp;nbsp;half&amp;nbsp;the&amp;nbsp;battle—the&amp;nbsp;other&amp;nbsp;half&amp;nbsp;is&amp;nbsp;using&lt;br&gt;
it.&amp;nbsp;MySQL&amp;nbsp;offers&amp;nbsp;the&amp;nbsp;CALL&amp;nbsp;command&amp;nbsp;to&amp;nbsp;invoke&amp;nbsp;a&amp;nbsp;stored&amp;nbsp;procedure;&amp;nbsp;this&amp;nbsp;command&amp;nbsp;must&lt;br&gt;
be&amp;nbsp;followed&amp;nbsp;with&amp;nbsp;the&amp;nbsp;name&amp;nbsp;of&amp;nbsp;the&amp;nbsp;procedure&amp;nbsp;(and&amp;nbsp;arguments,&amp;nbsp;if&amp;nbsp;any).&amp;nbsp;Here’s&amp;nbsp;how:&lt;br&gt;
mysql&gt;&amp;nbsp;CALL&amp;nbsp;count_airports();&lt;br&gt;
+------------------+&lt;br&gt;
|&amp;nbsp;COUNT(AirportID)&amp;nbsp;|&lt;br&gt;
+------------------+&lt;br&gt;
|&amp;nbsp;15&amp;nbsp;|&lt;br&gt;
+------------------+&lt;br&gt;
1&amp;nbsp;row&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.12&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Here’s&amp;nbsp;another&amp;nbsp;example,&amp;nbsp;this&amp;nbsp;one&amp;nbsp;using&amp;nbsp;stored&amp;nbsp;procedures&amp;nbsp;to&amp;nbsp;create&amp;nbsp;and&amp;nbsp;drop&amp;nbsp;a&amp;nbsp;table:&lt;br&gt;
&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&amp;nbsp;create_log_table()&lt;br&gt;
&amp;nbsp;BEGIN&lt;br&gt;
&amp;nbsp;CREATE&amp;nbsp;TABLE&amp;nbsp;log(RecordID&amp;nbsp;INT&amp;nbsp;NOT&amp;nbsp;NULL&lt;br&gt;
&amp;nbsp;AUTO_INCREMENT&amp;nbsp;PRIMARY&amp;nbsp;KEY,&amp;nbsp;Message&amp;nbsp;TEXT);&lt;br&gt;
&amp;nbsp;END//&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
!!!&amp;nbsp;&amp;nbsp;Can&amp;nbsp;I&amp;nbsp;Alter&amp;nbsp;the&amp;nbsp;Body&amp;nbsp;of&amp;nbsp;a&amp;nbsp;Procedure&amp;nbsp;After&amp;nbsp;It’s&amp;nbsp;Been&amp;nbsp;Created?&lt;br&gt;
No.&amp;nbsp;MySQL&amp;nbsp;does&amp;nbsp;offer&amp;nbsp;an&amp;nbsp;ALTER&amp;nbsp;PROCEDURE&amp;nbsp;command,&amp;nbsp;but&amp;nbsp;this&amp;nbsp;currently&amp;nbsp;only&lt;br&gt;
permits&amp;nbsp;changes&amp;nbsp;to&amp;nbsp;the&amp;nbsp;characteristics,&amp;nbsp;not&amp;nbsp;the&amp;nbsp;body,&amp;nbsp;of&amp;nbsp;the&amp;nbsp;procedure.&amp;nbsp;To&amp;nbsp;alter&amp;nbsp;the&lt;br&gt;
body&amp;nbsp;of&amp;nbsp;a&amp;nbsp;procedure,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;necessary&amp;nbsp;to&amp;nbsp;first&amp;nbsp;drop&amp;nbsp;and&amp;nbsp;then&amp;nbsp;re-create&amp;nbsp;it.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
NOTE&amp;nbsp;:&amp;nbsp;before&amp;nbsp;creating&amp;nbsp;procedure&amp;nbsp;you&amp;nbsp;CAN&amp;nbsp;PERFORM&amp;nbsp;&amp;nbsp;:&amp;nbsp;&lt;br&gt;
drop&amp;nbsp;procedure&amp;nbsp;if&amp;nbsp;&lt;procedure_name&gt;&amp;nbsp;//&lt;br&gt;
&lt;br&gt;
========&lt;br&gt;
To&amp;nbsp;view&amp;nbsp;the&amp;nbsp;body&amp;nbsp;of&amp;nbsp;a&amp;nbsp;specific&amp;nbsp;stored&amp;nbsp;procedure,&amp;nbsp;use&amp;nbsp;the&amp;nbsp;SHOW&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&lt;br&gt;
command&amp;nbsp;with&amp;nbsp;the&amp;nbsp;procedure&amp;nbsp;name&amp;nbsp;as&amp;nbsp;argument.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;restricted&amp;nbsp;command;&amp;nbsp;it&amp;nbsp;will&lt;br&gt;
be&amp;nbsp;executed&amp;nbsp;only&amp;nbsp;if&amp;nbsp;you&amp;nbsp;are&amp;nbsp;the&amp;nbsp;creator&amp;nbsp;of&amp;nbsp;the&amp;nbsp;procedure&amp;nbsp;or&amp;nbsp;have&amp;nbsp;SELECT&amp;nbsp;privileges&amp;nbsp;on&lt;br&gt;
the&amp;nbsp;proc&amp;nbsp;grant&amp;nbsp;table&amp;nbsp;(privileges&amp;nbsp;are&amp;nbsp;discussed&amp;nbsp;in&amp;nbsp;greater&amp;nbsp;detail&amp;nbsp;in&amp;nbsp;Chapter&amp;nbsp;11).&amp;nbsp;Here’s&amp;nbsp;an&lt;br&gt;
example:&lt;br&gt;
mysql&gt;&amp;nbsp;SHOW&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&amp;nbsp;create_log_table\G&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
==================================================&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SImple&amp;nbsp;examples&amp;nbsp;&amp;nbsp;:&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
drop&amp;nbsp;procedure&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;get_airport_name;&lt;br&gt;
&lt;br&gt;
DELIMITER&amp;nbsp;//&lt;br&gt;
create&amp;nbsp;procedure&amp;nbsp;get_airport_name(IN&amp;nbsp;aid&amp;nbsp;INT)&lt;br&gt;
begin&lt;br&gt;
&amp;nbsp;select&amp;nbsp;AirportName&amp;nbsp;from&amp;nbsp;airport&amp;nbsp;where&amp;nbsp;airportid&amp;nbsp;=&amp;nbsp;aid;&amp;nbsp;&amp;nbsp;&lt;br&gt;
end//&amp;nbsp;&lt;br&gt;
&lt;br&gt;
call&amp;nbsp;get_airport_name(48)//&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;----------&lt;br&gt;</questionanswer>
  </question>
  <question id="0_1_2_0_5:1" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Describe&amp;nbsp;MySQL&amp;nbsp;stored&amp;nbsp;functions.&amp;nbsp;What&amp;nbsp;are&amp;nbsp;'IN'&amp;nbsp;and&amp;nbsp;'OUT'&amp;nbsp;parameters&amp;nbsp;&amp;nbsp;?&lt;br&gt;
What&amp;nbsp;is&amp;nbsp;'Deterministic'&amp;nbsp;keyword&amp;nbsp;&amp;nbsp;?&amp;nbsp;&lt;br&gt;
Can&amp;nbsp;we&amp;nbsp;use&amp;nbsp;'IN'&amp;nbsp;and&amp;nbsp;'OUT'&amp;nbsp;parameters&amp;nbsp;inside&amp;nbsp;stored&amp;nbsp;functions&amp;nbsp;?&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>!!!&amp;nbsp;IN&amp;nbsp;Functions&amp;nbsp;we&amp;nbsp;can't&amp;nbsp;have&amp;nbsp;'IN'&amp;nbsp;&amp;nbsp;'OUT'&amp;nbsp;'INOUT'&amp;nbsp;parameters!&lt;br&gt;
Only&amp;nbsp;in&amp;nbsp;procedures.&lt;br&gt;
=========================================&lt;br&gt;
&lt;br&gt;
Creating&amp;nbsp;and&amp;nbsp;Using&amp;nbsp;Stored&amp;nbsp;Functions&lt;br&gt;
Stored&amp;nbsp;functions&amp;nbsp;are&amp;nbsp;defined&amp;nbsp;in&amp;nbsp;a&amp;nbsp;similar&amp;nbsp;manner&amp;nbsp;to&amp;nbsp;stored&amp;nbsp;procedures,&amp;nbsp;except&amp;nbsp;that&amp;nbsp;the&lt;br&gt;
command&amp;nbsp;to&amp;nbsp;use&amp;nbsp;is&amp;nbsp;the&amp;nbsp;CREATE&amp;nbsp;FUNCTION&amp;nbsp;command.&amp;nbsp;And&amp;nbsp;while&amp;nbsp;it&amp;nbsp;isn’t&amp;nbsp;mandatory&amp;nbsp;for&lt;br&gt;
a&amp;nbsp;stored&amp;nbsp;procedure&amp;nbsp;to&amp;nbsp;return&amp;nbsp;output&amp;nbsp;to&amp;nbsp;the&amp;nbsp;caller,&amp;nbsp;stored&amp;nbsp;functions&amp;nbsp;must&amp;nbsp;necessarily&lt;br&gt;
produce&amp;nbsp;a&amp;nbsp;return&amp;nbsp;value.&lt;br&gt;
Here’s&amp;nbsp;a&amp;nbsp;simple&amp;nbsp;example&amp;nbsp;of&amp;nbsp;a&amp;nbsp;stored&amp;nbsp;function,&amp;nbsp;which&amp;nbsp;returns&amp;nbsp;a&amp;nbsp;formatted&amp;nbsp;version&amp;nbsp;of&lt;br&gt;
the&amp;nbsp;current&amp;nbsp;date:&lt;br&gt;
&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
&amp;nbsp;CREATE&amp;nbsp;FUNCTION&amp;nbsp;today()&lt;br&gt;
&amp;nbsp;RETURNS&amp;nbsp;VARCHAR(255)&lt;br&gt;
&amp;nbsp;BEGIN&lt;br&gt;
&amp;nbsp;RETURN&amp;nbsp;DATE_FORMAT(NOW(),&amp;nbsp;'%D&amp;nbsp;%M&amp;nbsp;%Y');&lt;br&gt;
&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
To&amp;nbsp;invoke&amp;nbsp;a&amp;nbsp;stored&amp;nbsp;function,&amp;nbsp;you&amp;nbsp;don’t&amp;nbsp;need&amp;nbsp;to&amp;nbsp;use&amp;nbsp;the&amp;nbsp;CALL&amp;nbsp;command;&amp;nbsp;instead,&amp;nbsp;use&lt;br&gt;
the&amp;nbsp;function&amp;nbsp;name&amp;nbsp;within&amp;nbsp;a&amp;nbsp;SQL&amp;nbsp;statement,&amp;nbsp;as&amp;nbsp;you&amp;nbsp;would&amp;nbsp;for&amp;nbsp;any&amp;nbsp;other&amp;nbsp;built-in&amp;nbsp;function.&lt;br&gt;
Here’s&amp;nbsp;an&amp;nbsp;example:&lt;br&gt;
mysql&gt;&amp;nbsp;SELECT&amp;nbsp;today();&lt;br&gt;
+--------------------+&lt;br&gt;
|&amp;nbsp;today()&amp;nbsp;|&lt;br&gt;
+--------------------+&lt;br&gt;
|&amp;nbsp;25th&amp;nbsp;December&amp;nbsp;2008&amp;nbsp;|&lt;br&gt;
+--------------------+&lt;br&gt;
1&amp;nbsp;row&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
You&amp;nbsp;can&amp;nbsp;also&amp;nbsp;read&amp;nbsp;and&amp;nbsp;write&amp;nbsp;directly&amp;nbsp;to&amp;nbsp;session&amp;nbsp;variables&amp;nbsp;from&amp;nbsp;a&amp;nbsp;stored&amp;nbsp;function.&lt;br&gt;
Consider&amp;nbsp;the&amp;nbsp;next&amp;nbsp;example,&amp;nbsp;which&amp;nbsp;revises&amp;nbsp;the&amp;nbsp;previous&amp;nbsp;example&amp;nbsp;and&amp;nbsp;uses&amp;nbsp;session&lt;br&gt;
variables&amp;nbsp;for&amp;nbsp;both&amp;nbsp;input&amp;nbsp;and&amp;nbsp;output:&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
mysql&gt;&amp;nbsp;CREATE&amp;nbsp;FUNCTION&amp;nbsp;get_circle_area()&lt;br&gt;
-&gt;&amp;nbsp;RETURNS&amp;nbsp;INT&lt;br&gt;
-&gt;&amp;nbsp;BEGIN&lt;br&gt;
-&gt;&amp;nbsp;SET&amp;nbsp;@area&amp;nbsp;=&amp;nbsp;PI()&amp;nbsp;*&amp;nbsp;@radius&amp;nbsp;*&amp;nbsp;@radius;&lt;br&gt;
-&gt;&amp;nbsp;RETURN&amp;nbsp;NULL;&lt;br&gt;
-&gt;&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.01&amp;nbsp;sec)&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;;&lt;br&gt;
mysql&gt;&amp;nbsp;SET&amp;nbsp;@radius=2;&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
mysql&gt;&amp;nbsp;SELECT&amp;nbsp;get_circle_area();&lt;br&gt;
+-------------------+&lt;br&gt;
|&amp;nbsp;get_circle_area()&amp;nbsp;|&lt;br&gt;
+-------------------+&lt;br&gt;
|&amp;nbsp;NULL&amp;nbsp;|&lt;br&gt;
+-------------------+&lt;br&gt;
1&amp;nbsp;row&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
mysql&gt;&amp;nbsp;SELECT&amp;nbsp;@area;&lt;br&gt;
+-----------------+&lt;br&gt;
|&amp;nbsp;@area&amp;nbsp;|&lt;br&gt;
+-----------------+&lt;br&gt;
|&amp;nbsp;12.566370614359&amp;nbsp;|&lt;br&gt;
+-----------------+&lt;br&gt;
1&amp;nbsp;row&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.03&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
==================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Using&amp;nbsp;Input&amp;nbsp;and&amp;nbsp;Output&amp;nbsp;Parameters&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;stored&amp;nbsp;procedure&amp;nbsp;that&amp;nbsp;always&amp;nbsp;returns&amp;nbsp;the&amp;nbsp;same&amp;nbsp;output&amp;nbsp;is&amp;nbsp;a&amp;nbsp;lot&amp;nbsp;like&amp;nbsp;a&amp;nbsp;radio&amp;nbsp;station&amp;nbsp;that&lt;br&gt;
plays&amp;nbsp;the&amp;nbsp;same&amp;nbsp;song&amp;nbsp;all&amp;nbsp;day—not&amp;nbsp;very&amp;nbsp;useful&amp;nbsp;or&amp;nbsp;interesting&amp;nbsp;at&amp;nbsp;all!&amp;nbsp;What&amp;nbsp;you’d&amp;nbsp;really&lt;br&gt;
like&amp;nbsp;is&amp;nbsp;the&amp;nbsp;ability&amp;nbsp;to&amp;nbsp;change&amp;nbsp;the&amp;nbsp;music&amp;nbsp;the&amp;nbsp;station&amp;nbsp;plays&amp;nbsp;in&amp;nbsp;response&amp;nbsp;to&amp;nbsp;feedback&amp;nbsp;that&amp;nbsp;you,&lt;br&gt;
the&amp;nbsp;listener,&amp;nbsp;provides—in&amp;nbsp;effect,&amp;nbsp;to&amp;nbsp;create&amp;nbsp;an&amp;nbsp;audience-request&amp;nbsp;show.&amp;nbsp;In&amp;nbsp;stored&lt;br&gt;
procedure&amp;nbsp;terms,&amp;nbsp;this&amp;nbsp;amounts&amp;nbsp;to&amp;nbsp;creating&amp;nbsp;procedures&amp;nbsp;that&amp;nbsp;can&amp;nbsp;accept&amp;nbsp;input&amp;nbsp;parameters&lt;br&gt;
at&amp;nbsp;run-time&amp;nbsp;and&amp;nbsp;use&amp;nbsp;these&amp;nbsp;input&amp;nbsp;parameters&amp;nbsp;to&amp;nbsp;calculate&amp;nbsp;and&amp;nbsp;return&amp;nbsp;different&amp;nbsp;output&lt;br&gt;
&lt;br&gt;
Input&amp;nbsp;and&amp;nbsp;output&amp;nbsp;parameters&amp;nbsp;are&amp;nbsp;defined&amp;nbsp;within&amp;nbsp;the&amp;nbsp;parentheses&amp;nbsp;that&amp;nbsp;follow&amp;nbsp;a&lt;br&gt;
stored&amp;nbsp;procedure&amp;nbsp;name,&amp;nbsp;and&amp;nbsp;are&amp;nbsp;prefixed&amp;nbsp;with&amp;nbsp;one&amp;nbsp;of&amp;nbsp;three&amp;nbsp;keywords—IN,&amp;nbsp;OUT,&amp;nbsp;or&lt;br&gt;
INOUT—to&amp;nbsp;define&amp;nbsp;their&amp;nbsp;purpose.&amp;nbsp;IN&amp;nbsp;parameters&amp;nbsp;serve&amp;nbsp;only&amp;nbsp;as&amp;nbsp;inputs&amp;nbsp;to&amp;nbsp;the&amp;nbsp;procedure;&lt;br&gt;
OUT&amp;nbsp;parameters&amp;nbsp;represent&amp;nbsp;output&amp;nbsp;values;&amp;nbsp;INOUT&amp;nbsp;parameters&amp;nbsp;can&amp;nbsp;be&amp;nbsp;used&amp;nbsp;both&amp;nbsp;as&lt;br&gt;
procedure&amp;nbsp;inputs&amp;nbsp;and&amp;nbsp;outputs.&amp;nbsp;If&amp;nbsp;none&amp;nbsp;of&amp;nbsp;these&amp;nbsp;keywords&amp;nbsp;are&amp;nbsp;specified,&amp;nbsp;MySQL&lt;br&gt;
assumes&amp;nbsp;that&amp;nbsp;the&amp;nbsp;parameter&amp;nbsp;is&amp;nbsp;an&amp;nbsp;IN&amp;nbsp;parameter.&lt;br&gt;
&lt;br&gt;
-&amp;nbsp;IN&amp;nbsp;Parameters&lt;br&gt;
The&amp;nbsp;IN&amp;nbsp;keyword&amp;nbsp;is&amp;nbsp;used&amp;nbsp;to&amp;nbsp;mark&amp;nbsp;input&amp;nbsp;parameters&amp;nbsp;for&amp;nbsp;a&amp;nbsp;stored&lt;br&gt;
procedure.&amp;nbsp;It&amp;nbsp;is&amp;nbsp;followed&amp;nbsp;by&amp;nbsp;the&amp;nbsp;parameter&amp;nbsp;name&amp;nbsp;and&amp;nbsp;its&amp;nbsp;data&amp;nbsp;type&amp;nbsp;(which&amp;nbsp;can&amp;nbsp;be&amp;nbsp;any&lt;br&gt;
one&amp;nbsp;of&amp;nbsp;MySQL’s&amp;nbsp;built-in&amp;nbsp;data&amp;nbsp;types).&lt;br&gt;
&amp;nbsp;The&amp;nbsp;following&amp;nbsp;procedure&amp;nbsp;illustrates&amp;nbsp;the&amp;nbsp;use&amp;nbsp;of&amp;nbsp;input&amp;nbsp;parameters&amp;nbsp;by&amp;nbsp;defining&amp;nbsp;a&amp;nbsp;stored&lt;br&gt;
procedure&amp;nbsp;that&amp;nbsp;accepts&amp;nbsp;a&amp;nbsp;numeric&amp;nbsp;airport&amp;nbsp;identifier&amp;nbsp;and&amp;nbsp;returns&amp;nbsp;the&amp;nbsp;corresponding&lt;br&gt;
airport&amp;nbsp;name:&lt;br&gt;
&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
mysql&gt;&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&amp;nbsp;get_airport_name(IN&amp;nbsp;aid&amp;nbsp;INT)&lt;br&gt;
-&gt;&amp;nbsp;BEGIN&lt;br&gt;
-&gt;&amp;nbsp;SELECT&amp;nbsp;AirportName&amp;nbsp;FROM&amp;nbsp;airport&amp;nbsp;WHERE&amp;nbsp;AirportID&amp;nbsp;=&amp;nbsp;aid;&lt;br&gt;
-&gt;&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.04&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
You&amp;nbsp;can&amp;nbsp;now&amp;nbsp;call&amp;nbsp;this&amp;nbsp;procedure&amp;nbsp;with&amp;nbsp;an&amp;nbsp;airport&amp;nbsp;identifier&amp;nbsp;as&amp;nbsp;argument,&amp;nbsp;as&amp;nbsp;shown:&lt;br&gt;
mysql&gt;&amp;nbsp;CALL&amp;nbsp;get_airport_name(129);&lt;br&gt;
+-------------------------------+&lt;br&gt;
|&amp;nbsp;AirportName&amp;nbsp;|&lt;br&gt;
+-------------------------------+&lt;br&gt;
|&amp;nbsp;Bristol&amp;nbsp;International&amp;nbsp;Airport&amp;nbsp;|&lt;br&gt;
+-------------------------------+&lt;br&gt;
1&amp;nbsp;row&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.01&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
You&amp;nbsp;can&amp;nbsp;use&amp;nbsp;multiple&amp;nbsp;IN&amp;nbsp;parameters&amp;nbsp;as&amp;nbsp;well.&amp;nbsp;Here’s&amp;nbsp;an&amp;nbsp;example,&amp;nbsp;which&amp;nbsp;uses&amp;nbsp;a&amp;nbsp;stored&lt;br&gt;
procedure&amp;nbsp;to&amp;nbsp;insert&amp;nbsp;a&amp;nbsp;new&amp;nbsp;aircraft&amp;nbsp;type&amp;nbsp;record:&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
mysql&gt;&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&amp;nbsp;add_aircraft_type(&lt;br&gt;
-&gt;&amp;nbsp;IN&amp;nbsp;aid&amp;nbsp;INT,&lt;br&gt;
-&gt;&amp;nbsp;IN&amp;nbsp;atype&amp;nbsp;VARCHAR(255)&lt;br&gt;
-&gt;&amp;nbsp;)&lt;br&gt;
-&gt;&amp;nbsp;BEGIN&lt;br&gt;
-&gt;&amp;nbsp;INSERT&amp;nbsp;INTO&amp;nbsp;aircrafttype&amp;nbsp;(AircraftTypeID,&lt;br&gt;
-&gt;&amp;nbsp;AircraftName)&amp;nbsp;VALUES(aid,&amp;nbsp;atype);&lt;br&gt;
-&gt;&amp;nbsp;SELECT&amp;nbsp;AircraftTypeID,&amp;nbsp;AircraftName&lt;br&gt;
-&gt;&amp;nbsp;FROM&amp;nbsp;aircrafttype&amp;nbsp;WHERE&amp;nbsp;AircraftTypeID&amp;nbsp;=&amp;nbsp;aid;&lt;br&gt;
-&gt;&amp;nbsp;END//&lt;br&gt;
&lt;br&gt;
-------------------------------&lt;br&gt;
-&amp;nbsp;OUT&amp;nbsp;Parameters&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;OUT&amp;nbsp;keyword&amp;nbsp;is&amp;nbsp;used&amp;nbsp;to&amp;nbsp;mark&amp;nbsp;a&amp;nbsp;procedure’s&amp;nbsp;output&amp;nbsp;parameters.&lt;br&gt;
As&amp;nbsp;with&amp;nbsp;the&amp;nbsp;IN&amp;nbsp;keyword,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;followed&amp;nbsp;by&amp;nbsp;a&amp;nbsp;parameter&amp;nbsp;name&amp;nbsp;and&amp;nbsp;data&amp;nbsp;type,&amp;nbsp;and&amp;nbsp;it&amp;nbsp;is&lt;br&gt;
automatically&amp;nbsp;initialized&amp;nbsp;to&amp;nbsp;NULL&amp;nbsp;within&amp;nbsp;the&amp;nbsp;body&amp;nbsp;of&amp;nbsp;the&amp;nbsp;procedure.&amp;nbsp;Here’s&amp;nbsp;a&amp;nbsp;revision&amp;nbsp;of&lt;br&gt;
the&amp;nbsp;previous&amp;nbsp;example,&amp;nbsp;which&amp;nbsp;stores&amp;nbsp;the&amp;nbsp;airport&amp;nbsp;name&amp;nbsp;in&amp;nbsp;an&amp;nbsp;output&amp;nbsp;parameter&amp;nbsp;instead&amp;nbsp;of&lt;br&gt;
displaying&amp;nbsp;it:&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
mysql&gt;&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&amp;nbsp;get_airport_name(&lt;br&gt;
-&gt;&amp;nbsp;IN&amp;nbsp;aid&amp;nbsp;INT,&lt;br&gt;
-&gt;&amp;nbsp;OUT&amp;nbsp;aname&amp;nbsp;VARCHAR(255)&lt;br&gt;
-&gt;&amp;nbsp;)&lt;br&gt;
-&gt;&amp;nbsp;BEGIN&lt;br&gt;
-&gt;&amp;nbsp;SELECT&amp;nbsp;AirportName&amp;nbsp;INTO&amp;nbsp;aname&lt;br&gt;
-&gt;&amp;nbsp;FROM&amp;nbsp;airport&amp;nbsp;WHERE&amp;nbsp;AirportID&amp;nbsp;=&amp;nbsp;aid;&lt;br&gt;
-&gt;&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
Notice&amp;nbsp;that&amp;nbsp;the&amp;nbsp;procedure&amp;nbsp;uses&amp;nbsp;the&amp;nbsp;SELECT&amp;nbsp;INTO&amp;nbsp;command&amp;nbsp;to&amp;nbsp;assign&amp;nbsp;the&amp;nbsp;result&amp;nbsp;of&lt;br&gt;
the&amp;nbsp;query&amp;nbsp;to&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;output&amp;nbsp;variable.&amp;nbsp;It’s&amp;nbsp;now&amp;nbsp;possible&amp;nbsp;to&amp;nbsp;call&amp;nbsp;the&amp;nbsp;procedure,&lt;br&gt;
storing&amp;nbsp;the&amp;nbsp;output&amp;nbsp;in&amp;nbsp;a&amp;nbsp;session&amp;nbsp;variable&amp;nbsp;for&amp;nbsp;later&amp;nbsp;retrieval:&lt;br&gt;
mysql&gt;&amp;nbsp;CALL&amp;nbsp;get_airport_name(201,&amp;nbsp;@var);&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
mysql&gt;&amp;nbsp;SELECT&amp;nbsp;@var;&lt;br&gt;
+----------------+&lt;br&gt;
|&amp;nbsp;@var&amp;nbsp;|&lt;br&gt;
+----------------+&lt;br&gt;
|&amp;nbsp;Changi&amp;nbsp;Airport&amp;nbsp;|&lt;br&gt;
+----------------+&lt;br&gt;
1&amp;nbsp;row&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
---------------------------------------&lt;br&gt;
-&amp;nbsp;INOUT&amp;nbsp;Parameters&amp;nbsp;The&amp;nbsp;INOUT&amp;nbsp;keyword&amp;nbsp;is&amp;nbsp;used&amp;nbsp;for&amp;nbsp;parameters&amp;nbsp;that&amp;nbsp;serve&amp;nbsp;as&amp;nbsp;both&amp;nbsp;input&lt;br&gt;
and&amp;nbsp;output,&amp;nbsp;and&amp;nbsp;has&amp;nbsp;the&amp;nbsp;same&amp;nbsp;syntax&amp;nbsp;as&amp;nbsp;the&amp;nbsp;IN&amp;nbsp;and&amp;nbsp;OUT&amp;nbsp;keywords.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;typically&lt;br&gt;
used&amp;nbsp;for&amp;nbsp;parameters&amp;nbsp;that&amp;nbsp;are&amp;nbsp;likely&amp;nbsp;to&amp;nbsp;be&amp;nbsp;modified&amp;nbsp;during&amp;nbsp;the&amp;nbsp;course&amp;nbsp;of&amp;nbsp;the&amp;nbsp;procedure.&lt;br&gt;
Here’s&amp;nbsp;a&amp;nbsp;simple&amp;nbsp;example,&amp;nbsp;which&amp;nbsp;demonstrates&amp;nbsp;this:&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
mysql&gt;&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&amp;nbsp;add_one(&lt;br&gt;
-&gt;&amp;nbsp;INOUT&amp;nbsp;num&amp;nbsp;INT&lt;br&gt;
-&gt;&amp;nbsp;)&lt;br&gt;
-&gt;&amp;nbsp;BEGIN&lt;br&gt;
-&gt;&amp;nbsp;SELECT&amp;nbsp;(num+1)&amp;nbsp;INTO&amp;nbsp;num;&lt;br&gt;
-&gt;&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.05&amp;nbsp;sec)&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;;&lt;br&gt;
mysql&gt;&amp;nbsp;SET&amp;nbsp;@a&amp;nbsp;=&amp;nbsp;9;&lt;br&gt;
mysql&gt;&amp;nbsp;CALL&amp;nbsp;add_one(@a);&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
mysql&gt;&amp;nbsp;SELECT&amp;nbsp;@a;&lt;br&gt;
+------+&lt;br&gt;
|&amp;nbsp;@a&amp;nbsp;|&lt;br&gt;
+------+&lt;br&gt;
|&amp;nbsp;10&amp;nbsp;|&lt;br&gt;
+------+&lt;br&gt;
1&amp;nbsp;row&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
==================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DETERMINISTIC&lt;br&gt;
The&amp;nbsp;DETERMINISTIC&amp;nbsp;clause&amp;nbsp;indicates&amp;nbsp;that&amp;nbsp;the&amp;nbsp;routine&amp;nbsp;is&amp;nbsp;“deterministic”—that&lt;br&gt;
is,&amp;nbsp;given&amp;nbsp;the&amp;nbsp;same&amp;nbsp;input,&amp;nbsp;it&amp;nbsp;always&amp;nbsp;produces&amp;nbsp;the&amp;nbsp;same&amp;nbsp;output.&amp;nbsp;Routines&amp;nbsp;that&lt;br&gt;
make&amp;nbsp;use&amp;nbsp;of&amp;nbsp;random&amp;nbsp;numbers,&amp;nbsp;are&amp;nbsp;tied&amp;nbsp;to&amp;nbsp;the&amp;nbsp;current&amp;nbsp;time,&amp;nbsp;or&amp;nbsp;use&amp;nbsp;functions&amp;nbsp;that&lt;br&gt;
return&amp;nbsp;a&amp;nbsp;different&amp;nbsp;value&amp;nbsp;on&amp;nbsp;each&amp;nbsp;invocation,&amp;nbsp;such&amp;nbsp;as&amp;nbsp;CONNECTION_ID(),&amp;nbsp;should&lt;br&gt;
instead&amp;nbsp;use&amp;nbsp;the&amp;nbsp;NOT&amp;nbsp;DETERMINISTIC&amp;nbsp;clause.&lt;br&gt;
==================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting&amp;nbsp;Routine&amp;nbsp;Characteristics&lt;br&gt;
Both&amp;nbsp;the&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&amp;nbsp;and&amp;nbsp;the&amp;nbsp;CREATE&amp;nbsp;FUNCTION&amp;nbsp;commands&amp;nbsp;support&amp;nbsp;additional&lt;br&gt;
clauses,&amp;nbsp;which&amp;nbsp;are&amp;nbsp;used&amp;nbsp;to&amp;nbsp;define&amp;nbsp;various&amp;nbsp;characteristics&amp;nbsp;of&amp;nbsp;the&amp;nbsp;stored&amp;nbsp;routine.&amp;nbsp;Here’s&amp;nbsp;a&amp;nbsp;list:&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;DETERMINISTIC&amp;nbsp;clause&amp;nbsp;indicates&amp;nbsp;that&amp;nbsp;the&amp;nbsp;routine&amp;nbsp;is&amp;nbsp;“deterministic”—that&lt;br&gt;
is,&amp;nbsp;given&amp;nbsp;the&amp;nbsp;same&amp;nbsp;input,&amp;nbsp;it&amp;nbsp;always&amp;nbsp;produces&amp;nbsp;the&amp;nbsp;same&amp;nbsp;output.&amp;nbsp;Routines&amp;nbsp;that&lt;br&gt;
make&amp;nbsp;use&amp;nbsp;of&amp;nbsp;random&amp;nbsp;numbers,&amp;nbsp;are&amp;nbsp;tied&amp;nbsp;to&amp;nbsp;the&amp;nbsp;current&amp;nbsp;time,&amp;nbsp;or&amp;nbsp;use&amp;nbsp;functions&amp;nbsp;that&lt;br&gt;
return&amp;nbsp;a&amp;nbsp;different&amp;nbsp;value&amp;nbsp;on&amp;nbsp;each&amp;nbsp;invocation,&amp;nbsp;such&amp;nbsp;as&amp;nbsp;CONNECTION_ID(),&amp;nbsp;should&lt;br&gt;
instead&amp;nbsp;use&amp;nbsp;the&amp;nbsp;NOT&amp;nbsp;DETERMINISTIC&amp;nbsp;clause.&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;LANGUAGE&amp;nbsp;clause&amp;nbsp;specifies&amp;nbsp;the&amp;nbsp;language&amp;nbsp;for&amp;nbsp;the&amp;nbsp;routine.&amp;nbsp;At&amp;nbsp;the&amp;nbsp;time&amp;nbsp;of&amp;nbsp;this&lt;br&gt;
writing,&amp;nbsp;the&amp;nbsp;only&amp;nbsp;legal&amp;nbsp;value&amp;nbsp;for&amp;nbsp;this&amp;nbsp;clause&amp;nbsp;is&amp;nbsp;'SQL'.&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;CONTAINS&amp;nbsp;SQL&amp;nbsp;clause&amp;nbsp;indicates&amp;nbsp;that&amp;nbsp;the&amp;nbsp;routine&amp;nbsp;contains&amp;nbsp;SQL&amp;nbsp;statements.&lt;br&gt;
Valid&amp;nbsp;alternatives&amp;nbsp;for&amp;nbsp;this&amp;nbsp;clause&amp;nbsp;include&amp;nbsp;READS&amp;nbsp;SQL&amp;nbsp;DATA&amp;nbsp;(routine&amp;nbsp;contains&lt;br&gt;
statements&amp;nbsp;that&amp;nbsp;read&amp;nbsp;table&amp;nbsp;data),&amp;nbsp;MODIFIES&amp;nbsp;SQL&amp;nbsp;DATA&amp;nbsp;(routine&amp;nbsp;contains&amp;nbsp;statements&lt;br&gt;
that&amp;nbsp;write&amp;nbsp;table&amp;nbsp;data),&amp;nbsp;and&amp;nbsp;NO&amp;nbsp;SQL&amp;nbsp;(routine&amp;nbsp;contains&amp;nbsp;no&amp;nbsp;SQL&amp;nbsp;statements).&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;SQL&amp;nbsp;SECURITY&amp;nbsp;clause&amp;nbsp;specifies&amp;nbsp;which&amp;nbsp;user’s&amp;nbsp;privileges&amp;nbsp;should&amp;nbsp;be&lt;br&gt;
considered&amp;nbsp;when&amp;nbsp;executing&amp;nbsp;the&amp;nbsp;routine:&amp;nbsp;the&amp;nbsp;user&amp;nbsp;who&amp;nbsp;created&amp;nbsp;it&amp;nbsp;(DEFINER)&amp;nbsp;or&amp;nbsp;the&lt;br&gt;
user&amp;nbsp;who&amp;nbsp;invoked&amp;nbsp;it&amp;nbsp;(INVOKER).&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;COMMENT&amp;nbsp;clause&amp;nbsp;specifies&amp;nbsp;a&amp;nbsp;human-readable&amp;nbsp;descriptive&amp;nbsp;label&amp;nbsp;for&amp;nbsp;the&amp;nbsp;routine.&lt;br&gt;
&lt;br&gt;
Here’s&amp;nbsp;an&amp;nbsp;example&amp;nbsp;of&amp;nbsp;how&amp;nbsp;these&amp;nbsp;characteristics&amp;nbsp;can&amp;nbsp;be&amp;nbsp;added&amp;nbsp;to&amp;nbsp;a&amp;nbsp;routine&amp;nbsp;definition:&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
mysql&gt;&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&amp;nbsp;get_airport_name(IN&amp;nbsp;aid&amp;nbsp;INT)&lt;br&gt;
-&gt;&amp;nbsp;DETERMINISTIC&lt;br&gt;
-&gt;&amp;nbsp;LANGUAGE&amp;nbsp;SQL&lt;br&gt;
-&gt;&amp;nbsp;READS&amp;nbsp;SQL&amp;nbsp;DATA&lt;br&gt;
-&gt;&amp;nbsp;SQL&amp;nbsp;SECURITY&amp;nbsp;INVOKER&lt;br&gt;
-&gt;&amp;nbsp;BEGIN&lt;br&gt;
-&gt;&amp;nbsp;SELECT&amp;nbsp;AirportName&amp;nbsp;FROM&amp;nbsp;airport&amp;nbsp;WHERE&amp;nbsp;AirportID&amp;nbsp;=&amp;nbsp;aid;&lt;br&gt;
-&gt;&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.68&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
==================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Examples&amp;nbsp;:&amp;nbsp;functions,&amp;nbsp;procedures&amp;nbsp;,&amp;nbsp;using&amp;nbsp;parameters&amp;nbsp;.&lt;br&gt;
&lt;br&gt;
drop&amp;nbsp;function&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;test.with_local_var;&lt;br&gt;
DELIMITER&amp;nbsp;//&lt;br&gt;
create&amp;nbsp;function&amp;nbsp;test.with_local_var()&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;returns&amp;nbsp;int&lt;br&gt;
begin&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;local_var&amp;nbsp;int;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;local_char&amp;nbsp;varchar(10);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set&amp;nbsp;local_char&amp;nbsp;=&amp;nbsp;'andrew';&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;length(local_char);&lt;br&gt;
end//&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;test.with_local_var()//&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;---&lt;br&gt;
Delimiter&amp;nbsp;//&lt;br&gt;
drop&amp;nbsp;function&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;test.function_with_if//&lt;br&gt;
create&amp;nbsp;function&amp;nbsp;test.function_with_if(n&amp;nbsp;varchar(100),&amp;nbsp;count&amp;nbsp;Int)&lt;br&gt;
returns&amp;nbsp;int&lt;br&gt;
begin&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;result&amp;nbsp;int&amp;nbsp;default&amp;nbsp;0;&amp;nbsp;--&amp;nbsp;we&amp;nbsp;cannot&amp;nbsp;declare&amp;nbsp;variable&amp;nbsp;inside&amp;nbsp;if&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;length(n)&amp;nbsp;&gt;&amp;nbsp;count&amp;nbsp;then&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set&amp;nbsp;result&amp;nbsp;=&amp;nbsp;1;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set&amp;nbsp;result&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;if;&lt;br&gt;
&lt;br&gt;
return&amp;nbsp;result;&lt;br&gt;
end//&lt;br&gt;
--&amp;nbsp;---&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;test.function_with_if('Hello',&amp;nbsp;20);//&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;--&lt;br&gt;
drop&amp;nbsp;function&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;test.function_with_while//&lt;br&gt;
&lt;br&gt;
create&amp;nbsp;function&amp;nbsp;test.function_with_while(num&amp;nbsp;int)&lt;br&gt;
returns&amp;nbsp;int&lt;br&gt;
begin&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;result&amp;nbsp;int&amp;nbsp;default&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fact:&amp;nbsp;while&amp;nbsp;num&amp;nbsp;&gt;&amp;nbsp;0&amp;nbsp;do&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set&amp;nbsp;result&amp;nbsp;=&amp;nbsp;result&amp;nbsp;+&amp;nbsp;num;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set&amp;nbsp;num&amp;nbsp;=&amp;nbsp;num&amp;nbsp;-&amp;nbsp;1;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;while&amp;nbsp;fact;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;result;&lt;br&gt;
end//&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;test.function_with_while(5);&lt;br&gt;
--&amp;nbsp;--&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
=========================================&lt;br&gt;
&lt;br&gt;
drop&amp;nbsp;procedure&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;get_airport_name;&lt;br&gt;
&lt;br&gt;
DELIMITER&amp;nbsp;//&lt;br&gt;
create&amp;nbsp;procedure&amp;nbsp;get_airport_name(IN&amp;nbsp;aid&amp;nbsp;INT)&lt;br&gt;
begin&lt;br&gt;
&amp;nbsp;select&amp;nbsp;AirportName&amp;nbsp;from&amp;nbsp;airport&amp;nbsp;where&amp;nbsp;airportid&amp;nbsp;=&amp;nbsp;aid;&amp;nbsp;&amp;nbsp;&lt;br&gt;
end//&amp;nbsp;&lt;br&gt;
&lt;br&gt;
call&amp;nbsp;get_airport_name(48)//&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;--------------&lt;br&gt;
&lt;br&gt;
drop&amp;nbsp;procedure&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;add_aircraft_type&amp;nbsp;//&lt;br&gt;
DELIMITER&amp;nbsp;//&lt;br&gt;
create&amp;nbsp;procedure&amp;nbsp;add_aircraft_type(IN&amp;nbsp;aid&amp;nbsp;INT,IN&amp;nbsp;atype&amp;nbsp;VARCHAR(255))&lt;br&gt;
begin&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;aircrafttype&amp;nbsp;values&amp;nbsp;(aid,atype);&lt;br&gt;
end//&lt;br&gt;
&lt;br&gt;
call&amp;nbsp;add_aircraft_type(1000,'AN-2')//&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;*&amp;nbsp;from&amp;nbsp;aircrafttype//&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;-----------------------------------------------&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
drop&amp;nbsp;procedure&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;get_airport_name//&lt;br&gt;
&lt;br&gt;
DELIMITER&amp;nbsp;//&lt;br&gt;
create&amp;nbsp;procedure&amp;nbsp;get_airport_name&amp;nbsp;(IN&amp;nbsp;aid&amp;nbsp;INT,&amp;nbsp;OUT&amp;nbsp;aname&amp;nbsp;VARCHAR(255))&lt;br&gt;
BEGIN&lt;br&gt;
select&amp;nbsp;airportname&amp;nbsp;into&amp;nbsp;aname&amp;nbsp;from&amp;nbsp;airport&amp;nbsp;where&amp;nbsp;airportid&amp;nbsp;=&amp;nbsp;aid;&lt;br&gt;
END//&lt;br&gt;
&lt;br&gt;
call&amp;nbsp;get_airport_name(1001,&amp;nbsp;@aname)//&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;call&amp;nbsp;get_airport_name(1001,&amp;nbsp;33)//&amp;nbsp;--&amp;nbsp;error&amp;nbsp;second&amp;nbsp;parameter&amp;nbsp;must&amp;nbsp;be&amp;nbsp;variable&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;@aname//&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;*&amp;nbsp;from&amp;nbsp;airport//&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;-----------------------------------&lt;br&gt;
drop&amp;nbsp;procedure&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;add_one//&lt;br&gt;
create&amp;nbsp;procedure&amp;nbsp;add_one(INOUT&amp;nbsp;a&amp;nbsp;INT)&amp;nbsp;--&amp;nbsp;INOUT&amp;nbsp;parameters&lt;br&gt;
BEGIN&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;select&amp;nbsp;(a+1)&amp;nbsp;into&amp;nbsp;a;&lt;br&gt;
END//&lt;br&gt;
&lt;br&gt;
set&amp;nbsp;@var&amp;nbsp;=&amp;nbsp;100//&lt;br&gt;
&lt;br&gt;
call&amp;nbsp;add_one(@var)//&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;@var//</questionanswer>
  </question>
  <question id="0_1_2_0_5:2" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MySQL&amp;nbsp;conditions,&amp;nbsp;loops,&amp;nbsp;local&amp;nbsp;variables&amp;nbsp;in&amp;nbsp;stored&amp;nbsp;routines,&amp;nbsp;describe.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>--&amp;nbsp;Java&amp;nbsp;:&amp;nbsp;break,&amp;nbsp;continue&lt;br&gt;
--&amp;nbsp;SQL&amp;nbsp;&amp;nbsp;:&amp;nbsp;LEAVE,&amp;nbsp;ITERATE&amp;nbsp;&lt;br&gt;
&lt;br&gt;
====================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Variables&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;addition&amp;nbsp;to&amp;nbsp;allowing&amp;nbsp;you&amp;nbsp;to&amp;nbsp;create,&amp;nbsp;access,&amp;nbsp;and&amp;nbsp;manipulate&amp;nbsp;session&amp;nbsp;variables&amp;nbsp;from&lt;br&gt;
within&amp;nbsp;a&amp;nbsp;stored&amp;nbsp;procedure,&amp;nbsp;MySQL&amp;nbsp;offers&amp;nbsp;the&amp;nbsp;DECLARE&amp;nbsp;keyword,&amp;nbsp;which&amp;nbsp;can&amp;nbsp;be&amp;nbsp;used&amp;nbsp;to&lt;br&gt;
declare&amp;nbsp;variables&amp;nbsp;that&amp;nbsp;are&amp;nbsp;“local”&amp;nbsp;to&amp;nbsp;a&amp;nbsp;given&amp;nbsp;routine.&amp;nbsp;Here’s&amp;nbsp;an&amp;nbsp;example:&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
mysql&gt;&amp;nbsp;CREATE&amp;nbsp;PROCEDURE&amp;nbsp;decl()&lt;br&gt;
-&gt;&amp;nbsp;BEGIN&lt;br&gt;
-&gt;&amp;nbsp;DECLARE&amp;nbsp;count&amp;nbsp;INT;&lt;br&gt;
-&gt;&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
Variables&amp;nbsp;with&amp;nbsp;default&amp;nbsp;values&amp;nbsp;:&amp;nbsp;&lt;br&gt;
&amp;nbsp;declare&amp;nbsp;result,&amp;nbsp;done,&amp;nbsp;&amp;nbsp;t&amp;nbsp;int&amp;nbsp;default&amp;nbsp;0;&amp;nbsp;&amp;nbsp;--&amp;nbsp;IT&amp;nbsp;IS&amp;nbsp;Default&amp;nbsp;for&amp;nbsp;all&amp;nbsp;variables&amp;nbsp;in&amp;nbsp;declaration&lt;br&gt;
&amp;nbsp;set&amp;nbsp;t&amp;nbsp;=&amp;nbsp;t&amp;nbsp;+&amp;nbsp;1&amp;nbsp;;&lt;br&gt;
...&lt;br&gt;
&lt;br&gt;
===========================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CONDITIONS&amp;nbsp;&lt;br&gt;
IF&amp;nbsp;[val&amp;nbsp;1]&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;THEN&amp;nbsp;[result&amp;nbsp;1];&lt;br&gt;
END&amp;nbsp;IF;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;with&amp;nbsp;IF&amp;nbsp;,&amp;nbsp;LOOP&amp;nbsp;and&amp;nbsp;CURSORS&amp;nbsp;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
mysql&gt;&amp;nbsp;CREATE&amp;nbsp;FUNCTION&amp;nbsp;what_is_today()&lt;br&gt;
-&gt;&amp;nbsp;RETURNS&amp;nbsp;VARCHAR(255)&lt;br&gt;
-&gt;&amp;nbsp;BEGIN&lt;br&gt;
-&gt;&amp;nbsp;DECLARE&amp;nbsp;message&amp;nbsp;VARCHAR(255);&lt;br&gt;
-&gt;&amp;nbsp;IF&amp;nbsp;DAYOFWEEK(NOW())&amp;nbsp;BETWEEN&amp;nbsp;2&amp;nbsp;AND&amp;nbsp;6&amp;nbsp;THEN&lt;br&gt;
-&gt;&amp;nbsp;SET&amp;nbsp;message&amp;nbsp;=&amp;nbsp;'Today&amp;nbsp;is&amp;nbsp;a&amp;nbsp;weekday';&lt;br&gt;
-&gt;&amp;nbsp;END&amp;nbsp;IF;&lt;br&gt;
-&gt;&amp;nbsp;RETURN&amp;nbsp;message;&lt;br&gt;
-&gt;&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.01&amp;nbsp;sec)&lt;br&gt;
===============================&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
drop&amp;nbsp;function&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;db1.sumIds//&lt;br&gt;
delimiter&amp;nbsp;//&lt;br&gt;
create&amp;nbsp;function&amp;nbsp;db1.sumIds()&lt;br&gt;
returns&amp;nbsp;int&lt;br&gt;
begin&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;result,&amp;nbsp;done,&amp;nbsp;&amp;nbsp;t&amp;nbsp;int&amp;nbsp;default&amp;nbsp;0;&amp;nbsp;&amp;nbsp;--&amp;nbsp;IT&amp;nbsp;IS&amp;nbsp;Default&amp;nbsp;for&amp;nbsp;all&amp;nbsp;variables&amp;nbsp;in&amp;nbsp;declaration&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;c&amp;nbsp;cursor&amp;nbsp;for&amp;nbsp;select&amp;nbsp;AirportID&amp;nbsp;from&amp;nbsp;db1.airport;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;continue&amp;nbsp;handler&amp;nbsp;for&amp;nbsp;not&amp;nbsp;found&amp;nbsp;set&amp;nbsp;done&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;--&amp;nbsp;should&amp;nbsp;be&amp;nbsp;after&amp;nbsp;cursor&amp;nbsp;definition&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&amp;nbsp;if&amp;nbsp;it&amp;nbsp;will&amp;nbsp;be&amp;nbsp;'exit'&amp;nbsp;handler&amp;nbsp;:&amp;nbsp;we&amp;nbsp;will&amp;nbsp;get&amp;nbsp;'ERROR&amp;nbsp;1321&amp;nbsp;(2F005):&amp;nbsp;FUNCTION&amp;nbsp;sumIds&amp;nbsp;ended&amp;nbsp;without&amp;nbsp;RETURN'&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;open&amp;nbsp;c;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum:&amp;nbsp;loop&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fetch&amp;nbsp;c&amp;nbsp;into&amp;nbsp;t;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;done&amp;nbsp;=&amp;nbsp;1&amp;nbsp;then&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;leave&amp;nbsp;sum;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;if;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set&amp;nbsp;result&amp;nbsp;=&amp;nbsp;result&amp;nbsp;+&amp;nbsp;t&amp;nbsp;;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;loop;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;close&amp;nbsp;c;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;result;&lt;br&gt;
end//&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
===========================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The&amp;nbsp;CASE&amp;nbsp;Construct&lt;br&gt;
&lt;br&gt;
CASE&amp;nbsp;[expression&amp;nbsp;to&amp;nbsp;be&amp;nbsp;evaluated]&lt;br&gt;
WHEN&amp;nbsp;[val&amp;nbsp;1]&amp;nbsp;THEN&amp;nbsp;[result&amp;nbsp;1];&lt;br&gt;
WHEN&amp;nbsp;[val&amp;nbsp;2]&amp;nbsp;THEN&amp;nbsp;[result&amp;nbsp;2];&lt;br&gt;
...&lt;br&gt;
WHEN&amp;nbsp;[val&amp;nbsp;n]&amp;nbsp;THEN&amp;nbsp;[result&amp;nbsp;n];&lt;br&gt;
ELSE&amp;nbsp;[default&amp;nbsp;result];&lt;br&gt;
END&amp;nbsp;CASE;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
&amp;nbsp;CREATE&amp;nbsp;FUNCTION&amp;nbsp;todays_child()&lt;br&gt;
&amp;nbsp;RETURNS&amp;nbsp;VARCHAR(255)&lt;br&gt;
&amp;nbsp;BEGIN&lt;br&gt;
&amp;nbsp;DECLARE&amp;nbsp;message&amp;nbsp;VARCHAR(255);&lt;br&gt;
&amp;nbsp;CASE&amp;nbsp;DAYOFWEEK(NOW())&lt;br&gt;
&amp;nbsp;WHEN&amp;nbsp;2&amp;nbsp;THEN&lt;br&gt;
&amp;nbsp;SET&amp;nbsp;message&amp;nbsp;=&amp;nbsp;'Monday\'s&amp;nbsp;child&amp;nbsp;is&amp;nbsp;fair&amp;nbsp;of&amp;nbsp;face.';&lt;br&gt;
&amp;nbsp;WHEN&amp;nbsp;3&amp;nbsp;THEN&lt;br&gt;
&amp;nbsp;SET&amp;nbsp;message&amp;nbsp;=&amp;nbsp;'Tuesday\'s&amp;nbsp;child&amp;nbsp;is&amp;nbsp;full&amp;nbsp;of&amp;nbsp;grace.';&lt;br&gt;
&amp;nbsp;WHEN&amp;nbsp;4&amp;nbsp;THEN&lt;br&gt;
&amp;nbsp;SET&amp;nbsp;message&amp;nbsp;=&amp;nbsp;'Wednesday\'s&amp;nbsp;child&amp;nbsp;is&amp;nbsp;full&amp;nbsp;of&amp;nbsp;woe.';&lt;br&gt;
&amp;nbsp;WHEN&amp;nbsp;5&amp;nbsp;THEN&lt;br&gt;
&amp;nbsp;SET&amp;nbsp;message&amp;nbsp;=&amp;nbsp;'Thursday\'s&amp;nbsp;child&amp;nbsp;has&amp;nbsp;far&amp;nbsp;to&amp;nbsp;go.';&lt;br&gt;
&amp;nbsp;WHEN&amp;nbsp;6&amp;nbsp;THEN&lt;br&gt;
&amp;nbsp;SET&amp;nbsp;message&amp;nbsp;=&amp;nbsp;'Friday\'s&amp;nbsp;child&amp;nbsp;is&amp;nbsp;loving&amp;nbsp;and&amp;nbsp;giving.';&lt;br&gt;
&amp;nbsp;WHEN&amp;nbsp;7&amp;nbsp;THEN&lt;br&gt;
&amp;nbsp;SET&amp;nbsp;message&amp;nbsp;=&amp;nbsp;'Saturday\'s&amp;nbsp;child&amp;nbsp;works&amp;nbsp;hard&amp;nbsp;for&amp;nbsp;a&amp;nbsp;living.';&lt;br&gt;
&amp;nbsp;ELSE&lt;br&gt;
&amp;nbsp;SET&amp;nbsp;message&amp;nbsp;=&amp;nbsp;'Sunday\'s&amp;nbsp;child&amp;nbsp;is&amp;nbsp;bonny&amp;nbsp;and&amp;nbsp;blithe&lt;br&gt;
&amp;nbsp;and&amp;nbsp;good&amp;nbsp;and&amp;nbsp;gay.';&lt;br&gt;
&amp;nbsp;END&amp;nbsp;CASE;&lt;br&gt;
&amp;nbsp;RETURN&amp;nbsp;message;&lt;br&gt;
&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.04&amp;nbsp;sec)&lt;br&gt;
===========================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LOOP&amp;nbsp;Construct&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(useful&amp;nbsp;thing&amp;nbsp;for&amp;nbsp;CURSORS)&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;statements&amp;nbsp;enclosed&amp;nbsp;within&amp;nbsp;the&amp;nbsp;LOOP...END&amp;nbsp;LOOP&amp;nbsp;block&amp;nbsp;are&amp;nbsp;executed&lt;br&gt;
repeatedly&amp;nbsp;until&amp;nbsp;interrupted&amp;nbsp;with&amp;nbsp;a&amp;nbsp;LEAVE&amp;nbsp;statement.&amp;nbsp;This,&amp;nbsp;combined&amp;nbsp;with&amp;nbsp;the&amp;nbsp;IF&lt;br&gt;
construct,&amp;nbsp;makes&amp;nbsp;it&amp;nbsp;possible&amp;nbsp;to&amp;nbsp;create&amp;nbsp;loops&amp;nbsp;that&amp;nbsp;execute&amp;nbsp;until&amp;nbsp;a&amp;nbsp;specified&amp;nbsp;condition&amp;nbsp;is&lt;br&gt;
fulfilled.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
mysql&gt;&amp;nbsp;DELIMITER&amp;nbsp;//&lt;br&gt;
mysql&gt;&amp;nbsp;CREATE&amp;nbsp;FUNCTION&amp;nbsp;factorial(num&amp;nbsp;INT&amp;nbsp;UNSIGNED)&lt;br&gt;
-&gt;&amp;nbsp;RETURNS&amp;nbsp;INT&lt;br&gt;
-&gt;&amp;nbsp;BEGIN&lt;br&gt;
-&gt;&amp;nbsp;DECLARE&amp;nbsp;result&amp;nbsp;INT&amp;nbsp;DEFAULT&amp;nbsp;1;&lt;br&gt;
-&gt;&amp;nbsp;IF&amp;nbsp;num&amp;nbsp;=&amp;nbsp;0&amp;nbsp;THEN&lt;br&gt;
-&gt;&amp;nbsp;RETURN&amp;nbsp;0;&lt;br&gt;
-&gt;&amp;nbsp;END&amp;nbsp;IF;&lt;br&gt;
-&gt;&amp;nbsp;fact:&amp;nbsp;LOOP&lt;br&gt;
-&gt;&amp;nbsp;IF&amp;nbsp;num&amp;nbsp;&gt;&amp;nbsp;0&amp;nbsp;THEN&lt;br&gt;
-&gt;&amp;nbsp;SET&amp;nbsp;result&amp;nbsp;=&amp;nbsp;result&amp;nbsp;*&amp;nbsp;num;&lt;br&gt;
-&gt;&amp;nbsp;SET&amp;nbsp;num&amp;nbsp;=&amp;nbsp;num&amp;nbsp;-&amp;nbsp;1;&lt;br&gt;
-&gt;&amp;nbsp;ELSE&lt;br&gt;
-&gt;&amp;nbsp;LEAVE&amp;nbsp;fact;&lt;br&gt;
-&gt;&amp;nbsp;END&amp;nbsp;IF;&lt;br&gt;
-&gt;&amp;nbsp;END&amp;nbsp;LOOP&amp;nbsp;fact;&lt;br&gt;
-&gt;&amp;nbsp;RETURN&amp;nbsp;result;&lt;br&gt;
-&gt;&amp;nbsp;END//&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.01&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
mysql&gt;&amp;nbsp;SELECT&amp;nbsp;factorial(4);&lt;br&gt;
+--------------+&lt;br&gt;
|&amp;nbsp;factorial(4)&amp;nbsp;|&lt;br&gt;
+--------------+&lt;br&gt;
|&amp;nbsp;24&amp;nbsp;|&lt;br&gt;
+--------------+&lt;br&gt;
1&amp;nbsp;row&amp;nbsp;in&amp;nbsp;set&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
call&amp;nbsp;db1.get_airport_size()//&amp;nbsp;--&amp;nbsp;work&amp;nbsp;proper&amp;nbsp;only&amp;nbsp;from&amp;nbsp;mysql&amp;nbsp;console&amp;nbsp;,&amp;nbsp;not&amp;nbsp;from&amp;nbsp;workbench&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;Another&amp;nbsp;example&amp;nbsp;of&amp;nbsp;using&amp;nbsp;cursors&lt;br&gt;
drop&amp;nbsp;function&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;db1.sumIds//&lt;br&gt;
&lt;br&gt;
delimiter&amp;nbsp;//&lt;br&gt;
create&amp;nbsp;function&amp;nbsp;db1.sumIds()&lt;br&gt;
returns&amp;nbsp;int&lt;br&gt;
begin&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;result,&amp;nbsp;done,&amp;nbsp;&amp;nbsp;t&amp;nbsp;int&amp;nbsp;default&amp;nbsp;0;&amp;nbsp;&amp;nbsp;--&amp;nbsp;IT&amp;nbsp;IS&amp;nbsp;Default&amp;nbsp;for&amp;nbsp;all&amp;nbsp;variables&amp;nbsp;in&amp;nbsp;declaration&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;c&amp;nbsp;cursor&amp;nbsp;for&amp;nbsp;select&amp;nbsp;AirportID&amp;nbsp;from&amp;nbsp;db1.airport;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;continue&amp;nbsp;handler&amp;nbsp;for&amp;nbsp;not&amp;nbsp;found&amp;nbsp;set&amp;nbsp;done&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;--&amp;nbsp;should&amp;nbsp;be&amp;nbsp;after&amp;nbsp;cursor&amp;nbsp;definition&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&amp;nbsp;if&amp;nbsp;it&amp;nbsp;will&amp;nbsp;be&amp;nbsp;'exit'&amp;nbsp;handler&amp;nbsp;:&amp;nbsp;we&amp;nbsp;will&amp;nbsp;get&amp;nbsp;'ERROR&amp;nbsp;1321&amp;nbsp;(2F005):&amp;nbsp;FUNCTION&amp;nbsp;sumIds&amp;nbsp;ended&amp;nbsp;without&amp;nbsp;RETURN'&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;open&amp;nbsp;c;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum:&amp;nbsp;loop&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fetch&amp;nbsp;c&amp;nbsp;into&amp;nbsp;t;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;done&amp;nbsp;=&amp;nbsp;1&amp;nbsp;then&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;leave&amp;nbsp;sum;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;if;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set&amp;nbsp;result&amp;nbsp;=&amp;nbsp;result&amp;nbsp;+&amp;nbsp;t&amp;nbsp;;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;loop;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;close&amp;nbsp;c;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;result;&lt;br&gt;
end//&lt;br&gt;
&lt;br&gt;
==================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The&amp;nbsp;WHILE&amp;nbsp;Construct&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;--&lt;br&gt;
drop&amp;nbsp;function&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;test.function_with_while//&lt;br&gt;
&lt;br&gt;
create&amp;nbsp;function&amp;nbsp;test.function_with_while(num&amp;nbsp;int)&lt;br&gt;
returns&amp;nbsp;int&lt;br&gt;
begin&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;result&amp;nbsp;int&amp;nbsp;default&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fact:&amp;nbsp;while&amp;nbsp;num&amp;nbsp;&gt;&amp;nbsp;0&amp;nbsp;do&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set&amp;nbsp;result&amp;nbsp;=&amp;nbsp;result&amp;nbsp;+&amp;nbsp;num;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set&amp;nbsp;num&amp;nbsp;=&amp;nbsp;num&amp;nbsp;-&amp;nbsp;1;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;while&amp;nbsp;fact;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;result;&lt;br&gt;
end//&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;test.function_with_while(5);&lt;br&gt;
&lt;br&gt;
==============================================&lt;br&gt;</questionanswer>
  </question>
  <question id="0_1_2_0_5:3" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MySQL&amp;nbsp;cursors,&amp;nbsp;&amp;nbsp;describe.&lt;br&gt;
What&amp;nbsp;are&amp;nbsp;'Handlers'&amp;nbsp;,&amp;nbsp;and&amp;nbsp;how&amp;nbsp;to&amp;nbsp;use&amp;nbsp;them&amp;nbsp;with&amp;nbsp;cursors&amp;nbsp;&amp;nbsp;?&lt;br&gt;
(exit&amp;nbsp;handlers&amp;nbsp;and&amp;nbsp;continue&amp;nbsp;handlers)&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Cursors&lt;br&gt;
http://en.wikipedia.org/wiki/Cursor_%28databases%29&lt;br&gt;
&lt;br&gt;
Quite&amp;nbsp;often,&amp;nbsp;you’ll&amp;nbsp;be&amp;nbsp;using&amp;nbsp;loops&amp;nbsp;closely&amp;nbsp;with&amp;nbsp;SELECT&amp;nbsp;queries&amp;nbsp;to&amp;nbsp;process&amp;nbsp;the&amp;nbsp;collection&lt;br&gt;
of&amp;nbsp;records&amp;nbsp;returned&amp;nbsp;by&amp;nbsp;a&amp;nbsp;SELECT.&amp;nbsp;To&amp;nbsp;do&amp;nbsp;this,&amp;nbsp;there’s&amp;nbsp;one&amp;nbsp;additional&amp;nbsp;ingredient&amp;nbsp;needed:&lt;br&gt;
a&amp;nbsp;cursor.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Wikipedia,&amp;nbsp;at&amp;nbsp;http://en.wikipedia.org/wiki/Cursor_(databases),&amp;nbsp;defines&amp;nbsp;a&amp;nbsp;cursor&amp;nbsp;as&lt;br&gt;
“a&amp;nbsp;control&amp;nbsp;structure&amp;nbsp;for&amp;nbsp;the&amp;nbsp;successive&amp;nbsp;traversal&amp;nbsp;(and&amp;nbsp;potential&amp;nbsp;processing)&amp;nbsp;of&amp;nbsp;records&amp;nbsp;in&amp;nbsp;a&lt;br&gt;
result&amp;nbsp;set…[it]&amp;nbsp;is&amp;nbsp;used&amp;nbsp;for&amp;nbsp;processing&amp;nbsp;individual&amp;nbsp;rows&amp;nbsp;returned&amp;nbsp;by&amp;nbsp;the&amp;nbsp;database&amp;nbsp;system&lt;br&gt;
for&amp;nbsp;a&amp;nbsp;query.”&amp;nbsp;In&amp;nbsp;simpler&amp;nbsp;terms,&amp;nbsp;if&amp;nbsp;a&amp;nbsp;database&amp;nbsp;result&amp;nbsp;set&amp;nbsp;is&amp;nbsp;analogous&amp;nbsp;to&amp;nbsp;a&amp;nbsp;collection&amp;nbsp;of&amp;nbsp;files&lt;br&gt;
in&amp;nbsp;a&amp;nbsp;filing&amp;nbsp;cabinet,&amp;nbsp;a&amp;nbsp;cursor&amp;nbsp;is&amp;nbsp;the&amp;nbsp;equivalent&amp;nbsp;of&amp;nbsp;your&amp;nbsp;finger,&amp;nbsp;flipping&amp;nbsp;through&amp;nbsp;them&amp;nbsp;one&lt;br&gt;
after&amp;nbsp;another.&amp;nbsp;At&amp;nbsp;any&amp;nbsp;point&amp;nbsp;in&amp;nbsp;time,&amp;nbsp;your&amp;nbsp;finger&amp;nbsp;is&amp;nbsp;pointing&amp;nbsp;at&amp;nbsp;a&amp;nbsp;specific&amp;nbsp;file;&amp;nbsp;this&amp;nbsp;is&amp;nbsp;the&lt;br&gt;
current&amp;nbsp;record.&amp;nbsp;You&amp;nbsp;can&amp;nbsp;trail&amp;nbsp;your&amp;nbsp;finger&amp;nbsp;forward&amp;nbsp;to&amp;nbsp;the&amp;nbsp;next&amp;nbsp;file&amp;nbsp;or&amp;nbsp;backward&amp;nbsp;to&amp;nbsp;the&lt;br&gt;
previous&amp;nbsp;one;&amp;nbsp;in&amp;nbsp;database&amp;nbsp;terms,&amp;nbsp;this&amp;nbsp;is&amp;nbsp;accomplished&amp;nbsp;with&amp;nbsp;a&amp;nbsp;loop&amp;nbsp;construct,&amp;nbsp;such&amp;nbsp;as&lt;br&gt;
LOOP&amp;nbsp;or&amp;nbsp;REPEAT,&amp;nbsp;which&amp;nbsp;moves&amp;nbsp;the&amp;nbsp;cursor&amp;nbsp;forward&amp;nbsp;to&amp;nbsp;the&amp;nbsp;next&amp;nbsp;record&amp;nbsp;or&amp;nbsp;backward&amp;nbsp;to&lt;br&gt;
the&amp;nbsp;previous&amp;nbsp;one.&lt;br&gt;
&lt;br&gt;
That&amp;nbsp;said,&amp;nbsp;cursors&amp;nbsp;are&amp;nbsp;a&amp;nbsp;relatively&amp;nbsp;new&amp;nbsp;addition&amp;nbsp;to&amp;nbsp;MySQL&amp;nbsp;and,&amp;nbsp;as&amp;nbsp;such,&amp;nbsp;are&amp;nbsp;still&lt;br&gt;
subject&amp;nbsp;to&amp;nbsp;a&amp;nbsp;few&amp;nbsp;important&amp;nbsp;limitations.&lt;br&gt;
*&amp;nbsp;MySQL&amp;nbsp;cursors&amp;nbsp;are&amp;nbsp;forward-only;&amp;nbsp;unlike&amp;nbsp;your&amp;nbsp;finger,&amp;nbsp;they&amp;nbsp;can’t&amp;nbsp;be&amp;nbsp;used&amp;nbsp;to&amp;nbsp;go&lt;br&gt;
back&amp;nbsp;to&amp;nbsp;a&amp;nbsp;previous&amp;nbsp;record.&lt;br&gt;
*&amp;nbsp;MySQL&amp;nbsp;cursors&amp;nbsp;are&amp;nbsp;read-only;&amp;nbsp;they&amp;nbsp;can&amp;nbsp;only&amp;nbsp;be&amp;nbsp;used&amp;nbsp;to&amp;nbsp;read&amp;nbsp;values&amp;nbsp;from&lt;br&gt;
a&amp;nbsp;result&amp;nbsp;set,&amp;nbsp;not&amp;nbsp;write&amp;nbsp;or&amp;nbsp;update&amp;nbsp;existing&amp;nbsp;values.&lt;br&gt;
*&amp;nbsp;When&amp;nbsp;used&amp;nbsp;in&amp;nbsp;transactions,&amp;nbsp;MySQL&amp;nbsp;cursors&amp;nbsp;are&amp;nbsp;automatically&amp;nbsp;closed&amp;nbsp;after&lt;br&gt;
a&amp;nbsp;COMMIT.&lt;br&gt;
&lt;br&gt;
!!!!&lt;br&gt;
Once&amp;nbsp;the&amp;nbsp;cursor&amp;nbsp;has&amp;nbsp;been&amp;nbsp;declared,&amp;nbsp;MySQL&amp;nbsp;offers&amp;nbsp;the&amp;nbsp;OPEN,&amp;nbsp;FETCH,&amp;nbsp;and&amp;nbsp;CLOSE&lt;br&gt;
commands&amp;nbsp;to&amp;nbsp;iterate&amp;nbsp;through&amp;nbsp;the&amp;nbsp;result&amp;nbsp;set&amp;nbsp;returned&amp;nbsp;by&amp;nbsp;the&amp;nbsp;cursor’s&amp;nbsp;SELECT&amp;nbsp;statement.&lt;br&gt;
*&amp;nbsp;The&amp;nbsp;OPEN&amp;nbsp;command&amp;nbsp;opens&amp;nbsp;the&amp;nbsp;cursor&amp;nbsp;for&amp;nbsp;reading.&lt;br&gt;
*&amp;nbsp;The&amp;nbsp;FETCH&amp;nbsp;command&amp;nbsp;reads&amp;nbsp;the&amp;nbsp;contents&amp;nbsp;of&amp;nbsp;the&amp;nbsp;current&amp;nbsp;record&amp;nbsp;into&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&lt;br&gt;
variables&amp;nbsp;and&amp;nbsp;then&amp;nbsp;advances&amp;nbsp;the&amp;nbsp;cursor&amp;nbsp;to&amp;nbsp;the&amp;nbsp;next&amp;nbsp;record.&amp;nbsp;To&amp;nbsp;process&amp;nbsp;an&amp;nbsp;entire&lt;br&gt;
result&amp;nbsp;set,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;necessary&amp;nbsp;to&amp;nbsp;call&amp;nbsp;FETCH&amp;nbsp;as&amp;nbsp;many&amp;nbsp;times&amp;nbsp;as&amp;nbsp;there&amp;nbsp;are&amp;nbsp;records&amp;nbsp;in&amp;nbsp;the&lt;br&gt;
result&amp;nbsp;set.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;typically&amp;nbsp;accomplished&amp;nbsp;with&amp;nbsp;a&amp;nbsp;loop.&lt;br&gt;
*&amp;nbsp;The&amp;nbsp;CLOSE&amp;nbsp;command&amp;nbsp;closes&amp;nbsp;the&amp;nbsp;cursor.&amp;nbsp;Cursors&amp;nbsp;are&amp;nbsp;also&amp;nbsp;automatically&amp;nbsp;closed&lt;br&gt;
when&amp;nbsp;the&amp;nbsp;stored&amp;nbsp;routine&amp;nbsp;that&amp;nbsp;initialized&amp;nbsp;them&amp;nbsp;ends.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
-----------------------------------------------------------------------------------&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Handlers&amp;nbsp;&lt;br&gt;
(We&amp;nbsp;use&amp;nbsp;them&amp;nbsp;to&amp;nbsp;define&amp;nbsp;'handlers'&amp;nbsp;when&amp;nbsp;some&amp;nbsp;error&amp;nbsp;occurs)&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Declare&amp;nbsp;the&amp;nbsp;Error&amp;nbsp;Condition&amp;nbsp;to&amp;nbsp;Be&amp;nbsp;Handled&lt;br&gt;
The&amp;nbsp;first&amp;nbsp;step&amp;nbsp;is&amp;nbsp;to&amp;nbsp;decide&amp;nbsp;which&amp;nbsp;error&amp;nbsp;code&amp;nbsp;to&amp;nbsp;trap&amp;nbsp;and&amp;nbsp;assign&amp;nbsp;a&amp;nbsp;unique&amp;nbsp;name&amp;nbsp;to&amp;nbsp;that&lt;br&gt;
error&amp;nbsp;condition.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;accomplished&amp;nbsp;by&amp;nbsp;using&amp;nbsp;a&amp;nbsp;DECLARE&amp;nbsp;...&amp;nbsp;CONDITION&amp;nbsp;FOR&lt;br&gt;
statement.&amp;nbsp;Here’s&amp;nbsp;an&amp;nbsp;example,&amp;nbsp;which&amp;nbsp;specifies&amp;nbsp;a&amp;nbsp;name&amp;nbsp;for&amp;nbsp;MySQL&amp;nbsp;error&amp;nbsp;code&amp;nbsp;1050&lt;br&gt;
(table&amp;nbsp;already&amp;nbsp;exists):&lt;br&gt;
DECLARE&amp;nbsp;err_table_exists&amp;nbsp;CONDITION&amp;nbsp;FOR&amp;nbsp;1050;&lt;br&gt;
Instead&amp;nbsp;of&amp;nbsp;the&amp;nbsp;MySQL&amp;nbsp;error&amp;nbsp;code,&amp;nbsp;it’s&amp;nbsp;possible&amp;nbsp;to&amp;nbsp;trap&amp;nbsp;errors&amp;nbsp;using&amp;nbsp;their&amp;nbsp;SQLSTATE&lt;br&gt;
code.&amp;nbsp;Here’s&amp;nbsp;an&amp;nbsp;example&amp;nbsp;of&amp;nbsp;this&amp;nbsp;approach:&lt;br&gt;
DECLARE&amp;nbsp;err_table_exists&amp;nbsp;CONDITION&amp;nbsp;FOR&amp;nbsp;SQLSTATE&amp;nbsp;'42S01';&lt;br&gt;
&lt;br&gt;
Declare&amp;nbsp;a&amp;nbsp;Handler&amp;nbsp;for&amp;nbsp;the&amp;nbsp;Named&amp;nbsp;Error&amp;nbsp;Condition&lt;br&gt;
The&amp;nbsp;second&amp;nbsp;step&amp;nbsp;is&amp;nbsp;to&amp;nbsp;define&amp;nbsp;a&amp;nbsp;handler&amp;nbsp;for&amp;nbsp;the&amp;nbsp;error&amp;nbsp;condition.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;accomplished&amp;nbsp;by&lt;br&gt;
using&amp;nbsp;a&amp;nbsp;DECLARE&amp;nbsp;...&amp;nbsp;HANDLER&amp;nbsp;FOR&amp;nbsp;statement,&amp;nbsp;which&amp;nbsp;contains&amp;nbsp;the&amp;nbsp;SQL&amp;nbsp;commands&lt;br&gt;
that&amp;nbsp;will&amp;nbsp;be&amp;nbsp;executed&amp;nbsp;when&amp;nbsp;the&amp;nbsp;error&amp;nbsp;occurs.&amp;nbsp;Here’s&amp;nbsp;an&amp;nbsp;example,&amp;nbsp;which&amp;nbsp;sets&amp;nbsp;a&amp;nbsp;variable&amp;nbsp;to&lt;br&gt;
a&amp;nbsp;new&amp;nbsp;value&amp;nbsp;when&amp;nbsp;the&amp;nbsp;“table&amp;nbsp;already&amp;nbsp;exists”&amp;nbsp;error&amp;nbsp;occurs&amp;nbsp;and&amp;nbsp;then&amp;nbsp;exits&amp;nbsp;the&amp;nbsp;routine:&lt;br&gt;
&lt;br&gt;
DECLARE&amp;nbsp;EXIT&amp;nbsp;HANDLER&amp;nbsp;FOR&amp;nbsp;err_table_exists&lt;br&gt;
BEGIN&lt;br&gt;
SET&amp;nbsp;@table=-1;&lt;br&gt;
END;&lt;br&gt;
It’s&amp;nbsp;also&amp;nbsp;possible&amp;nbsp;to&amp;nbsp;define&amp;nbsp;the&amp;nbsp;error&amp;nbsp;condition&amp;nbsp;to&amp;nbsp;be&amp;nbsp;trapped&amp;nbsp;within&amp;nbsp;the&amp;nbsp;DECLARE&lt;br&gt;
...&amp;nbsp;HANDLER&amp;nbsp;FOR&amp;nbsp;statement&amp;nbsp;itself.&amp;nbsp;To&amp;nbsp;illustrate,&amp;nbsp;consider&amp;nbsp;that&amp;nbsp;the&amp;nbsp;following&amp;nbsp;two&amp;nbsp;sets&amp;nbsp;of&lt;br&gt;
statements&amp;nbsp;are&amp;nbsp;equivalent:&lt;br&gt;
DECLARE&amp;nbsp;err_table_exists&amp;nbsp;CONDITION&amp;nbsp;FOR&amp;nbsp;1050;&lt;br&gt;
DECLARE&amp;nbsp;EXIT&amp;nbsp;HANDLER&amp;nbsp;FOR&amp;nbsp;err_table_exists&lt;br&gt;
BEGIN&lt;br&gt;
SET&amp;nbsp;@table=-1;&lt;br&gt;
END;&lt;br&gt;
DECLARE&amp;nbsp;EXIT&amp;nbsp;HANDLER&amp;nbsp;FOR&amp;nbsp;1050&lt;br&gt;
BEGIN&lt;br&gt;
SET&amp;nbsp;@table=-1;&lt;br&gt;
END;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
======================================&lt;br&gt;
Examples&amp;nbsp;:&amp;nbsp;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;Java&amp;nbsp;:&amp;nbsp;break,&amp;nbsp;continue&lt;br&gt;
--&amp;nbsp;SQL&amp;nbsp;&amp;nbsp;:&amp;nbsp;LEAVE,&amp;nbsp;ITERATE&amp;nbsp;&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;DECLARE&amp;nbsp;c&amp;nbsp;CURSOR&amp;nbsp;FOR&lt;br&gt;
--&amp;nbsp;&amp;nbsp;SELECT&amp;nbsp;AirportName,&amp;nbsp;NumTerminals&amp;nbsp;FROM&amp;nbsp;airport;&lt;br&gt;
drop&amp;nbsp;procedure&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;db1.get_airport_size;&amp;nbsp;--&amp;nbsp;work&amp;nbsp;proper&amp;nbsp;only&amp;nbsp;from&amp;nbsp;mysql&amp;nbsp;console&amp;nbsp;,&amp;nbsp;not&amp;nbsp;from&amp;nbsp;workbench&lt;br&gt;
Delimiter&amp;nbsp;//&lt;br&gt;
create&amp;nbsp;procedure&amp;nbsp;db1.get_airport_size()&lt;br&gt;
begin&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DECLARE&amp;nbsp;a&amp;nbsp;VARCHAR(255);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DECLARE&amp;nbsp;b,x&amp;nbsp;INT;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DECLARE&amp;nbsp;done&amp;nbsp;INT&amp;nbsp;DEFAULT&amp;nbsp;FALSE;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DECLARE&amp;nbsp;c&amp;nbsp;CURSOR&amp;nbsp;FOR&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SELECT&amp;nbsp;AirportName,&amp;nbsp;NumTerminals&amp;nbsp;FROM&amp;nbsp;airport;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&amp;nbsp;DECLARE&amp;nbsp;CONTINUE&amp;nbsp;HANDLER&amp;nbsp;FOR&amp;nbsp;NOT&amp;nbsp;FOUND&amp;nbsp;SET&amp;nbsp;done&amp;nbsp;=&amp;nbsp;TRUE;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DECLARE&amp;nbsp;EXIT&amp;nbsp;HANDLER&amp;nbsp;FOR&amp;nbsp;1329&amp;nbsp;set&amp;nbsp;done&amp;nbsp;=&amp;nbsp;TRUE;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&amp;nbsp;Tip&amp;nbsp;The&amp;nbsp;NOT&amp;nbsp;FOUND&amp;nbsp;keyword&amp;nbsp;serves&amp;nbsp;as&amp;nbsp;a&amp;nbsp;“catch-all”&amp;nbsp;shortcut&amp;nbsp;that&amp;nbsp;represents&amp;nbsp;all&amp;nbsp;errors&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&amp;nbsp;occurring&amp;nbsp;due&amp;nbsp;to&amp;nbsp;a&amp;nbsp;cursor&amp;nbsp;reaching&amp;nbsp;the&amp;nbsp;end&amp;nbsp;of&amp;nbsp;its&amp;nbsp;record&amp;nbsp;set.&lt;br&gt;
&amp;nbsp;OPEN&amp;nbsp;c;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;size:&amp;nbsp;LOOP&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;done&amp;nbsp;then&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;leave&amp;nbsp;size;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;if;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FETCH&amp;nbsp;c&amp;nbsp;INTO&amp;nbsp;a,x;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IF&amp;nbsp;x&amp;nbsp;&gt;&amp;nbsp;2&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;THEN&amp;nbsp;SELECT&amp;nbsp;a&amp;nbsp;AS&amp;nbsp;Name,&amp;nbsp;'big'&amp;nbsp;AS&amp;nbsp;Size;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ELSE&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SELECT&amp;nbsp;a&amp;nbsp;AS&amp;nbsp;Name,&amp;nbsp;'small'&amp;nbsp;AS&amp;nbsp;Size;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;END&amp;nbsp;IF;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;END&amp;nbsp;LOOP&amp;nbsp;size;&lt;br&gt;
&amp;nbsp;CLOSE&amp;nbsp;c;&lt;br&gt;
end//&lt;br&gt;
&lt;br&gt;
call&amp;nbsp;db1.get_airport_size()//&amp;nbsp;--&amp;nbsp;work&amp;nbsp;proper&amp;nbsp;only&amp;nbsp;from&amp;nbsp;mysql&amp;nbsp;console&amp;nbsp;,&amp;nbsp;not&amp;nbsp;from&amp;nbsp;workbench&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;Another&amp;nbsp;example&amp;nbsp;of&amp;nbsp;using&amp;nbsp;cursors&lt;br&gt;
drop&amp;nbsp;function&amp;nbsp;if&amp;nbsp;exists&amp;nbsp;db1.sumIds//&lt;br&gt;
&lt;br&gt;
delimiter&amp;nbsp;//&lt;br&gt;
create&amp;nbsp;function&amp;nbsp;db1.sumIds()&lt;br&gt;
returns&amp;nbsp;int&lt;br&gt;
begin&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;result,&amp;nbsp;done,&amp;nbsp;&amp;nbsp;t&amp;nbsp;int&amp;nbsp;default&amp;nbsp;0;&amp;nbsp;&amp;nbsp;--&amp;nbsp;IT&amp;nbsp;IS&amp;nbsp;Default&amp;nbsp;for&amp;nbsp;all&amp;nbsp;variables&amp;nbsp;in&amp;nbsp;declaration&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;c&amp;nbsp;cursor&amp;nbsp;for&amp;nbsp;select&amp;nbsp;AirportID&amp;nbsp;from&amp;nbsp;db1.airport;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;declare&amp;nbsp;continue&amp;nbsp;handler&amp;nbsp;for&amp;nbsp;not&amp;nbsp;found&amp;nbsp;set&amp;nbsp;done&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;--&amp;nbsp;should&amp;nbsp;be&amp;nbsp;after&amp;nbsp;cursor&amp;nbsp;definition&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&amp;nbsp;if&amp;nbsp;it&amp;nbsp;will&amp;nbsp;be&amp;nbsp;'exit'&amp;nbsp;handler&amp;nbsp;:&amp;nbsp;we&amp;nbsp;will&amp;nbsp;get&amp;nbsp;'ERROR&amp;nbsp;1321&amp;nbsp;(2F005):&amp;nbsp;FUNCTION&amp;nbsp;sumIds&amp;nbsp;ended&amp;nbsp;without&amp;nbsp;RETURN'&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;open&amp;nbsp;c;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum:&amp;nbsp;loop&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fetch&amp;nbsp;c&amp;nbsp;into&amp;nbsp;t;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;done&amp;nbsp;=&amp;nbsp;1&amp;nbsp;then&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;leave&amp;nbsp;sum;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;if;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set&amp;nbsp;result&amp;nbsp;=&amp;nbsp;result&amp;nbsp;+&amp;nbsp;t&amp;nbsp;;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;loop;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;close&amp;nbsp;c;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;result;&lt;br&gt;
end//</questionanswer>
  </question>
</questions>
