<?xml version="1.0" encoding="UTF-8"?>
<questions id="1_0_1_7_10_0" name="2_3_AppWIthoutSpring_and_XML_Configuration" nofquestions="2" nofsubcategories="0" filename="2_3_appwithoutspring_and_xml_configuration1_0_1_7_10_0.xml">
  <question id="1_0_1_7_10_0:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Write&amp;nbsp;application&amp;nbsp;with&amp;nbsp;such&amp;nbsp;structure&amp;nbsp;:&lt;br&gt;
Customer&amp;nbsp;dao&lt;br&gt;
Customer&amp;nbsp;service&lt;br&gt;
Client&amp;nbsp;which&amp;nbsp;call&amp;nbsp;customer&amp;nbsp;service&amp;nbsp;and&amp;nbsp;display&amp;nbsp;customers.&lt;br&gt;
(Data&amp;nbsp;can&amp;nbsp;be&amp;nbsp;mocked,&amp;nbsp;provide&amp;nbsp;realization&amp;nbsp;without&amp;nbsp;spring&amp;nbsp;and&amp;nbsp;with&amp;nbsp;spring)&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Sample&amp;nbsp;application&amp;nbsp;without&amp;nbsp;spring&amp;nbsp;&lt;br&gt;
&lt;br&gt;
1)&amp;nbsp;Customer&amp;nbsp;(Model&amp;nbsp;of&amp;nbsp;our&amp;nbsp;App)&lt;br&gt;
package&amp;nbsp;com.pluralsight.model;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;Customer&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;String&amp;nbsp;firstName;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;String&amp;nbsp;lastName;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Customer()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getFirstName()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;firstName;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setFirstName(String&amp;nbsp;firstName)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.firstName&amp;nbsp;=&amp;nbsp;firstName;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getLastName()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;lastName;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setLastName(String&amp;nbsp;lastName)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.lastName&amp;nbsp;=&amp;nbsp;lastName;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;toString()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;"Customer{"&amp;nbsp;+&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"firstName='"&amp;nbsp;+&amp;nbsp;firstName&amp;nbsp;+&amp;nbsp;'\''&amp;nbsp;+&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;",&amp;nbsp;lastName='"&amp;nbsp;+&amp;nbsp;lastName&amp;nbsp;+&amp;nbsp;'\''&amp;nbsp;+&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'}';&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;Dao&lt;br&gt;
package&amp;nbsp;com.pluralsight.repository;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;com.pluralsight.model.Customer;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.List;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;interface&amp;nbsp;CustomerRepository&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;List&lt;Customer&gt;&amp;nbsp;findAll();&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;com.pluralsight.repository;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;com.pluralsight.model.Customer;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.ArrayList;&lt;br&gt;
import&amp;nbsp;java.util.List;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;HibernateCustomerRepositoryImpl&amp;nbsp;implements&amp;nbsp;CustomerRepository&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;List&lt;Customer&gt;&amp;nbsp;findAll(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&lt;Customer&gt;&amp;nbsp;customers&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ArrayList&lt;&gt;();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Customer&amp;nbsp;customer&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Customer();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;customer.setFirstName("Bryan");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;customer.setLastName("Hansen");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;customers.add(customer);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;customers;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
3)&amp;nbsp;Customer&amp;nbsp;service:&amp;nbsp;&lt;br&gt;
package&amp;nbsp;com.pluralsight.service;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;com.pluralsight.model.Customer;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.List;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;interface&amp;nbsp;CustomerService&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&lt;Customer&gt;&amp;nbsp;findAll();&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;com.pluralsight.service;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;com.pluralsight.model.Customer;&lt;br&gt;
import&amp;nbsp;com.pluralsight.repository.CustomerRepository;&lt;br&gt;
import&amp;nbsp;com.pluralsight.repository.HibernateCustomerRepositoryImpl;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.List;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;CustomerServiceImpl&amp;nbsp;implements&amp;nbsp;CustomerService&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;CustomerRepository&amp;nbsp;customerRepository&amp;nbsp;=&amp;nbsp;new&amp;nbsp;HibernateCustomerRepositoryImpl();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;List&lt;Customer&gt;&amp;nbsp;findAll(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;customerRepository.findAll();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
4)&amp;nbsp;&lt;br&gt;
import&amp;nbsp;com.pluralsight.service.CustomerService;&lt;br&gt;
import&amp;nbsp;com.pluralsight.service.CustomerServiceImpl;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.swing.*;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;Main&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CustomerService&amp;nbsp;customerService&amp;nbsp;=&amp;nbsp;new&amp;nbsp;CustomerServiceImpl();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;customerService.findAll().forEach(System.out::println);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
======================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Sample&amp;nbsp;app&amp;nbsp;with&amp;nbsp;spring&amp;nbsp;(xml&amp;nbsp;config)&lt;br&gt;
1)&amp;nbsp;Customer&amp;nbsp;class&amp;nbsp;is&amp;nbsp;the&amp;nbsp;same&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;Dao&amp;nbsp;is&amp;nbsp;the&amp;nbsp;same&lt;br&gt;
&lt;br&gt;
3)&amp;nbsp;Service&amp;nbsp;classes&lt;br&gt;
package&amp;nbsp;com.pluralsight.service;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;com.pluralsight.model.Customer;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.List;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;interface&amp;nbsp;CustomerService&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&lt;Customer&gt;&amp;nbsp;findAll();&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;com.pluralsight.service;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;com.pluralsight.model.Customer;&lt;br&gt;
import&amp;nbsp;com.pluralsight.repository.CustomerRepository;&lt;br&gt;
import&amp;nbsp;com.pluralsight.repository.HibernateCustomerRepositoryImpl;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.List;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;CustomerServiceImpl&amp;nbsp;implements&amp;nbsp;CustomerService&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Spring&amp;nbsp;use&amp;nbsp;setter&amp;nbsp;to&amp;nbsp;init&amp;nbsp;this&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;CustomerRepository&amp;nbsp;customerRepository;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Spring&amp;nbsp;use&amp;nbsp;constructor&amp;nbsp;to&amp;nbsp;init&amp;nbsp;this&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;CustomerRepository&amp;nbsp;customerRepository2;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;CustomerServiceImpl(CustomerRepository&amp;nbsp;customerRepository)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.customerRepository2&amp;nbsp;=&amp;nbsp;customerRepository;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;List&lt;Customer&gt;&amp;nbsp;findAll(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;customerRepository2.findAll();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setCustomerRepository(CustomerRepository&amp;nbsp;customerRepository)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.customerRepository&amp;nbsp;=&amp;nbsp;customerRepository;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
3)&amp;nbsp;Applciation&amp;nbsp;context&amp;nbsp;(applicationContext.xml&amp;nbsp;file)&lt;br&gt;
?xml&amp;nbsp;version="1.0"&amp;nbsp;encoding="UTF-8"?&gt;&lt;br&gt;
&lt;beans&amp;nbsp;xmlns="http://www.springframework.org/schema/beans"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xsi:schemaLocation="http://www.springframework.org/schema/beans&amp;nbsp;http://www.springframework.org/schema/beans/spring-beans.xsd"&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;bean&amp;nbsp;name="customerRepository"&amp;nbsp;class="com.pluralsight.repository.HibernateCustomerRepositoryImpl"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;bean&amp;nbsp;name="customerService"&amp;nbsp;class="com.pluralsight.service.CustomerServiceImpl"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;constructor-arg&amp;nbsp;index="0"&amp;nbsp;ref="customerRepository"&gt;&lt;/constructor-arg&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="customerRepository"&amp;nbsp;ref="customerRepository"&gt;&lt;/property&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/bean&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;bean&amp;nbsp;name="daoA"&amp;nbsp;class="com.pluralsight.repository.DaoAImpl"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;bean&amp;nbsp;name="serviceA"&amp;nbsp;class="com.pluralsight.service.ServiceAImpl"&amp;nbsp;autowire="byType"/&gt;&lt;br&gt;
&lt;br&gt;
&lt;/beans&gt;&lt;br&gt;
&lt;br&gt;
4)&amp;nbsp;Client&amp;nbsp;class&amp;nbsp;&lt;br&gt;
package&amp;nbsp;com.pluralsight;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;com.pluralsight.service.CustomerService;&lt;br&gt;
import&amp;nbsp;com.pluralsight.service.CustomerServiceImpl;&lt;br&gt;
import&amp;nbsp;org.springframework.beans.factory.annotation.Autowired;&lt;br&gt;
import&amp;nbsp;org.springframework.context.ApplicationContext;&lt;br&gt;
import&amp;nbsp;org.springframework.context.support.ClassPathXmlApplicationContext;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.swing.*;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;Main&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Autowired&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;CustomerService&amp;nbsp;customerService;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ApplicationContext&amp;nbsp;appContext&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ClassPathXmlApplicationContext("applicationContext.xml");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CustomerService&amp;nbsp;service&amp;nbsp;=&amp;nbsp;appContext.getBean("customerService",&amp;nbsp;CustomerService.class);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;service.findAll().forEach(System.out::println);&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
}</questionanswer>
  </question>
  <question id="1_0_1_7_10_0:1" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;How&amp;nbsp;many&amp;nbsp;ways&amp;nbsp;are&amp;nbsp;there&amp;nbsp;to&amp;nbsp;configure&amp;nbsp;the&amp;nbsp;Spring&amp;nbsp;framework&amp;nbsp;?&lt;br&gt;
(XML,&amp;nbsp;Java,&amp;nbsp;annotation...)&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>!!!!&amp;nbsp;To&amp;nbsp;avoid&amp;nbsp;confusion,&amp;nbsp;we&amp;nbsp;should&amp;nbsp;understand,&amp;nbsp;that&amp;nbsp;&amp;nbsp;&lt;b&gt;configuration&amp;nbsp;definition&lt;b&gt;&amp;nbsp;and&amp;nbsp;&lt;br&gt;
&lt;b&gt;bean&amp;nbsp;definition&amp;nbsp;&lt;/b&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;are&amp;nbsp;two&amp;nbsp;different&amp;nbsp;things.&amp;nbsp;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Configuration&amp;nbsp;(3&amp;nbsp;ways)&lt;br&gt;
There&amp;nbsp;is&amp;nbsp;a&amp;nbsp;three&amp;nbsp;ways&amp;nbsp;to&amp;nbsp;define&amp;nbsp;configuration,&amp;nbsp;available&amp;nbsp;in&amp;nbsp;Spring&amp;nbsp;4&amp;nbsp;by&amp;nbsp;default:&lt;br&gt;
-&amp;nbsp;xml-based&amp;nbsp;configuration,&amp;nbsp;when&amp;nbsp;you&amp;nbsp;describe&amp;nbsp;configuration&amp;nbsp;in&amp;nbsp;xml&amp;nbsp;file;&lt;br&gt;
-&amp;nbsp;java-based&amp;nbsp;configuration,&amp;nbsp;when&amp;nbsp;configuration&amp;nbsp;is&amp;nbsp;Java&amp;nbsp;class,&amp;nbsp;marked&amp;nbsp;with&amp;nbsp;specific&amp;nbsp;annotations;&lt;br&gt;
-&amp;nbsp;groovy-based&amp;nbsp;configuration,&amp;nbsp;when&amp;nbsp;configuration&amp;nbsp;is&amp;nbsp;file&amp;nbsp;with&amp;nbsp;Groovy&amp;nbsp;code;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Bean&amp;nbsp;definition&amp;nbsp;(2&amp;nbsp;ways&amp;nbsp;)&lt;br&gt;
1)configuration&amp;nbsp;inside&amp;nbsp;bean&amp;nbsp;definition,&amp;nbsp;when&amp;nbsp;you&amp;nbsp;add&amp;nbsp;beans&amp;nbsp;manually&amp;nbsp;by&amp;nbsp;declaration&amp;nbsp;right&amp;nbsp;in&amp;nbsp;configuration.&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;this&amp;nbsp;case&amp;nbsp;definition&amp;nbsp;will&amp;nbsp;be&amp;nbsp;based&amp;nbsp;on&amp;nbsp;configuration&amp;nbsp;type.&amp;nbsp;For&amp;nbsp;xml-config&amp;nbsp;it&amp;nbsp;will&amp;nbsp;be&amp;nbsp;&lt;bean/&gt;&amp;nbsp;tag,&lt;br&gt;
for&amp;nbsp;java-based&amp;nbsp;config&amp;nbsp;-&amp;nbsp;method&amp;nbsp;with&amp;nbsp;@Bean&amp;nbsp;annotation&amp;nbsp;and&amp;nbsp;beans&amp;nbsp;{...}&amp;nbsp;construction&amp;nbsp;for&amp;nbsp;Groovy.&lt;br&gt;
&lt;br&gt;
2)annotation&amp;nbsp;based&amp;nbsp;bean&amp;nbsp;definition,&amp;nbsp;when&amp;nbsp;you&amp;nbsp;mark&amp;nbsp;bean&amp;nbsp;classes&amp;nbsp;with&amp;nbsp;specific&amp;nbsp;annotations&lt;br&gt;
(like&amp;nbsp;@Component,&amp;nbsp;@Service,&amp;nbsp;@Controller&amp;nbsp;etc).&amp;nbsp;This&amp;nbsp;type&amp;nbsp;of&amp;nbsp;config&amp;nbsp;uses&amp;nbsp;classpath&amp;nbsp;scanning.&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;this&amp;nbsp;case&amp;nbsp;you&amp;nbsp;have&amp;nbsp;to&amp;nbsp;specify&amp;nbsp;directive&amp;nbsp;for&amp;nbsp;scanning&amp;nbsp;classpath.&amp;nbsp;For&amp;nbsp;xml-config&amp;nbsp;it&amp;nbsp;will&amp;nbsp;be&lt;br&gt;
&lt;context:component-scan&amp;nbsp;base-package="..."/&gt;,&amp;nbsp;for&amp;nbsp;java-config&amp;nbsp;-&amp;nbsp;@ComponentScan&amp;nbsp;annotation,&lt;br&gt;
for&amp;nbsp;Groovy&amp;nbsp;ctx.'component-scan'(...)&amp;nbsp;invocation.&lt;br&gt;
=======================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;So,&amp;nbsp;How&amp;nbsp;many&amp;nbsp;ways&amp;nbsp;are&amp;nbsp;there&amp;nbsp;to&amp;nbsp;configure&amp;nbsp;Spring&amp;nbsp;framework?&lt;br&gt;
Answer:&amp;nbsp;So,&amp;nbsp;by&amp;nbsp;default,&amp;nbsp;we&amp;nbsp;have&amp;nbsp;three&amp;nbsp;ways&amp;nbsp;to&amp;nbsp;describe&amp;nbsp;configuration,&amp;nbsp;and&amp;nbsp;two&amp;nbsp;ways&amp;nbsp;to&amp;nbsp;define&amp;nbsp;beans.&lt;br&gt;
That&amp;nbsp;turns&amp;nbsp;six&amp;nbsp;ways&amp;nbsp;to&amp;nbsp;configure&amp;nbsp;Spring&amp;nbsp;framework(by&amp;nbsp;default).&amp;nbsp;But,&amp;nbsp;of&amp;nbsp;course,&amp;nbsp;all&amp;nbsp;of&amp;nbsp;this&amp;nbsp;ways&amp;nbsp;can&amp;nbsp;be&amp;nbsp;used&amp;nbsp;in&amp;nbsp;combination&amp;nbsp;with&amp;nbsp;each&amp;nbsp;other.&lt;br&gt;</questionanswer>
  </question>
</questions>
