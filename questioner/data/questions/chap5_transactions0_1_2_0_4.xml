<?xml version="1.0" encoding="UTF-8"?>
<questions id="0_1_2_0_4" name="chap5_Transactions" nofquestions="3" nofsubcategories="0" filename="chap5_transactions0_1_2_0_4.xml">
  <question id="0_1_2_0_4:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MySQL&amp;nbsp;transaction&amp;nbsp;support,&amp;nbsp;describe.&lt;br&gt;
What&amp;nbsp;is&amp;nbsp;ACID&amp;nbsp;?&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Only&amp;nbsp;InnoDB&amp;nbsp;storage&amp;nbsp;engine&amp;nbsp;supports&amp;nbsp;transactions&amp;nbsp;!!!&lt;br&gt;
&lt;br&gt;
MySQL&amp;nbsp;supports&amp;nbsp;transactions&amp;nbsp;from&amp;nbsp;version&amp;nbsp;4.&lt;br&gt;
===========================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The&amp;nbsp;ACID&amp;nbsp;Properties&amp;nbsp;(easy)&lt;br&gt;
&lt;br&gt;
1)&amp;nbsp;Atomicity&lt;br&gt;
Atomicity&amp;nbsp;means&amp;nbsp;that&amp;nbsp;every&amp;nbsp;transaction&amp;nbsp;must&amp;nbsp;be&amp;nbsp;treated&amp;nbsp;as&amp;nbsp;an&amp;nbsp;indivisible&amp;nbsp;unit.&amp;nbsp;Given&amp;nbsp;a&lt;br&gt;
transaction&amp;nbsp;consisting&amp;nbsp;of&amp;nbsp;two&amp;nbsp;or&amp;nbsp;more&amp;nbsp;tasks,&amp;nbsp;all&amp;nbsp;the&amp;nbsp;statements&amp;nbsp;within&amp;nbsp;it&amp;nbsp;must&amp;nbsp;be&amp;nbsp;successful&lt;br&gt;
for&amp;nbsp;the&amp;nbsp;transaction&amp;nbsp;to&amp;nbsp;be&amp;nbsp;considered&amp;nbsp;successful.&amp;nbsp;In&amp;nbsp;the&amp;nbsp;event&amp;nbsp;of&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;failure,&amp;nbsp;the&lt;br&gt;
system&amp;nbsp;should&amp;nbsp;be&amp;nbsp;returned&amp;nbsp;to&amp;nbsp;its&amp;nbsp;pre-transaction&amp;nbsp;state.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;Consistency&lt;br&gt;
Consistency&amp;nbsp;means&amp;nbsp;that&amp;nbsp;every&amp;nbsp;transaction&amp;nbsp;must&amp;nbsp;ensure&amp;nbsp;that&amp;nbsp;the&amp;nbsp;database&amp;nbsp;is&amp;nbsp;in&amp;nbsp;a&amp;nbsp;consistent&lt;br&gt;
state&amp;nbsp;once&amp;nbsp;it&amp;nbsp;completes&amp;nbsp;executing.&amp;nbsp;Or,&amp;nbsp;to&amp;nbsp;put&amp;nbsp;it&amp;nbsp;another&amp;nbsp;way,&amp;nbsp;consistency&amp;nbsp;means&amp;nbsp;that&amp;nbsp;the&lt;br&gt;
database&amp;nbsp;must&amp;nbsp;never&amp;nbsp;reflect&amp;nbsp;a&amp;nbsp;partially&amp;nbsp;completed&amp;nbsp;transaction&amp;nbsp;at&amp;nbsp;any&amp;nbsp;time.&lt;br&gt;
With&amp;nbsp;reference&amp;nbsp;to&amp;nbsp;the&amp;nbsp;previous&amp;nbsp;stock&amp;nbsp;exchange&amp;nbsp;example,&amp;nbsp;consistency&amp;nbsp;means&amp;nbsp;that&lt;br&gt;
every&amp;nbsp;debit&amp;nbsp;from&amp;nbsp;a&amp;nbsp;seller’s&amp;nbsp;account&amp;nbsp;results&amp;nbsp;in&amp;nbsp;a&amp;nbsp;corresponding&amp;nbsp;and&amp;nbsp;equal&amp;nbsp;credit&amp;nbsp;to&amp;nbsp;a&lt;br&gt;
buyer’s&amp;nbsp;account.&amp;nbsp;If&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;reduces&amp;nbsp;Trader&amp;nbsp;A’s&amp;nbsp;account&amp;nbsp;by&amp;nbsp;400&amp;nbsp;shares,&amp;nbsp;but&amp;nbsp;only&lt;br&gt;
credits&amp;nbsp;300&amp;nbsp;shares&amp;nbsp;to&amp;nbsp;Trader&amp;nbsp;B’s&amp;nbsp;account,&amp;nbsp;the&amp;nbsp;consistency&amp;nbsp;constraint&amp;nbsp;will&amp;nbsp;be&amp;nbsp;violated&lt;br&gt;
because&amp;nbsp;the&amp;nbsp;total&amp;nbsp;number&amp;nbsp;of&amp;nbsp;shares&amp;nbsp;in&amp;nbsp;the&amp;nbsp;system&amp;nbsp;changes.&amp;nbsp;Similarly,&amp;nbsp;the&amp;nbsp;consistency&lt;br&gt;
property&amp;nbsp;would&amp;nbsp;ensure&amp;nbsp;that&amp;nbsp;if&amp;nbsp;a&amp;nbsp;flight&amp;nbsp;is&amp;nbsp;removed,&amp;nbsp;all&amp;nbsp;data&amp;nbsp;related&amp;nbsp;to&amp;nbsp;that&amp;nbsp;flight,&lt;br&gt;
including&amp;nbsp;departure&amp;nbsp;timings&amp;nbsp;and&amp;nbsp;seat/class&amp;nbsp;information,&amp;nbsp;would&amp;nbsp;also&amp;nbsp;be&amp;nbsp;removed.&lt;br&gt;
&lt;br&gt;
3)Isolation&lt;br&gt;
Isolation&amp;nbsp;means&amp;nbsp;that&amp;nbsp;every&amp;nbsp;transaction&amp;nbsp;must&amp;nbsp;occur&amp;nbsp;in&amp;nbsp;its&amp;nbsp;OWN&amp;nbsp;separate&amp;nbsp;and&amp;nbsp;independent&lt;br&gt;
“transaction&amp;nbsp;space,”&amp;nbsp;and&amp;nbsp;its&amp;nbsp;impact&amp;nbsp;on&amp;nbsp;the&amp;nbsp;database&amp;nbsp;only&amp;nbsp;becomes&amp;nbsp;visible&amp;nbsp;once&amp;nbsp;the&lt;br&gt;
transaction&amp;nbsp;has&amp;nbsp;completed&amp;nbsp;executing&amp;nbsp;(regardless&amp;nbsp;of&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;transaction&amp;nbsp;was&lt;br&gt;
successful&amp;nbsp;or&amp;nbsp;not).&amp;nbsp;This&amp;nbsp;is&amp;nbsp;particularly&amp;nbsp;important&amp;nbsp;in&amp;nbsp;multiuser,&amp;nbsp;multitransaction&amp;nbsp;systems,&lt;br&gt;
because&amp;nbsp;it&amp;nbsp;implies&amp;nbsp;that&amp;nbsp;the&amp;nbsp;effects&amp;nbsp;of&amp;nbsp;a&amp;nbsp;particular&amp;nbsp;transaction&amp;nbsp;are&amp;nbsp;not&amp;nbsp;“felt”&amp;nbsp;until&amp;nbsp;the&lt;br&gt;
transaction&amp;nbsp;is&amp;nbsp;complete.&amp;nbsp;In&amp;nbsp;the&amp;nbsp;absence&amp;nbsp;of&amp;nbsp;the&amp;nbsp;isolation&amp;nbsp;property,&amp;nbsp;two&amp;nbsp;conflicting&lt;br&gt;
transactions&amp;nbsp;might&amp;nbsp;quickly&amp;nbsp;produce&amp;nbsp;data&amp;nbsp;corruption,&amp;nbsp;because&amp;nbsp;each&amp;nbsp;transaction&amp;nbsp;would&lt;br&gt;
violate&amp;nbsp;the&amp;nbsp;other’s&amp;nbsp;integrity.&lt;br&gt;
&lt;br&gt;
4)&amp;nbsp;Durability&lt;br&gt;
means&amp;nbsp;that&amp;nbsp;changes&amp;nbsp;made&amp;nbsp;by&amp;nbsp;a&amp;nbsp;successful&amp;nbsp;transaction&amp;nbsp;will&amp;nbsp;not&amp;nbsp;be&amp;nbsp;lost,&amp;nbsp;even&amp;nbsp;if&lt;br&gt;
the&amp;nbsp;system&amp;nbsp;crashes.&amp;nbsp;Most&amp;nbsp;RDBMS&amp;nbsp;products&amp;nbsp;ensure&amp;nbsp;data&amp;nbsp;durability&amp;nbsp;by&amp;nbsp;keeping&amp;nbsp;a&amp;nbsp;log&amp;nbsp;of&lt;br&gt;
all&amp;nbsp;activity&amp;nbsp;that&amp;nbsp;alters&amp;nbsp;data&amp;nbsp;in&amp;nbsp;the&amp;nbsp;database&amp;nbsp;in&amp;nbsp;any&amp;nbsp;way.&amp;nbsp;This&amp;nbsp;database&amp;nbsp;log&amp;nbsp;keeps&amp;nbsp;track&amp;nbsp;of&lt;br&gt;
any&amp;nbsp;and&amp;nbsp;all&amp;nbsp;updates&amp;nbsp;made&amp;nbsp;to&amp;nbsp;tables,&amp;nbsp;queries,&amp;nbsp;reports,&amp;nbsp;and&amp;nbsp;so&amp;nbsp;on.&lt;br&gt;
In&amp;nbsp;the&amp;nbsp;event&amp;nbsp;of&amp;nbsp;a&amp;nbsp;system&amp;nbsp;crash&amp;nbsp;or&amp;nbsp;a&amp;nbsp;corruption&amp;nbsp;of&amp;nbsp;the&amp;nbsp;data&amp;nbsp;storage&amp;nbsp;media,&amp;nbsp;the&amp;nbsp;system&amp;nbsp;is&lt;br&gt;
able&amp;nbsp;to&amp;nbsp;recover&amp;nbsp;to&amp;nbsp;the&amp;nbsp;last&amp;nbsp;successful&amp;nbsp;update&amp;nbsp;on&amp;nbsp;restart&amp;nbsp;and&amp;nbsp;reflect&amp;nbsp;the&amp;nbsp;changes&amp;nbsp;carried&amp;nbsp;out&lt;br&gt;
by&amp;nbsp;transactions&amp;nbsp;that&amp;nbsp;were&amp;nbsp;still&amp;nbsp;in&amp;nbsp;progress&amp;nbsp;when&amp;nbsp;it&amp;nbsp;went&amp;nbsp;down&amp;nbsp;through&amp;nbsp;the&amp;nbsp;use&amp;nbsp;of&amp;nbsp;its&amp;nbsp;logs.&lt;br&gt;
In&amp;nbsp;the&amp;nbsp;context&amp;nbsp;of&amp;nbsp;the&amp;nbsp;previous&amp;nbsp;share&amp;nbsp;transfer&amp;nbsp;example,&amp;nbsp;durability&amp;nbsp;means&amp;nbsp;that&amp;nbsp;once&lt;br&gt;
the&amp;nbsp;transfer&amp;nbsp;of&amp;nbsp;shares&amp;nbsp;from&amp;nbsp;Trader&amp;nbsp;A&amp;nbsp;to&amp;nbsp;Trader&amp;nbsp;B&amp;nbsp;has&amp;nbsp;completed&amp;nbsp;successfully,&amp;nbsp;the&amp;nbsp;system&lt;br&gt;
&lt;br&gt;
========================================================&lt;br&gt;
========================================================&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MySQL&amp;nbsp;and&amp;nbsp;the&amp;nbsp;ACID&amp;nbsp;Properties&lt;br&gt;
&lt;br&gt;
1)Atomicity&amp;nbsp;is&amp;nbsp;handled&amp;nbsp;by&amp;nbsp;storing&amp;nbsp;the&amp;nbsp;results&amp;nbsp;of&amp;nbsp;transactional&amp;nbsp;statements&amp;nbsp;(the&lt;br&gt;
modified&amp;nbsp;rows)&amp;nbsp;in&amp;nbsp;a&amp;nbsp;memory&amp;nbsp;buffer&amp;nbsp;and&amp;nbsp;writing&amp;nbsp;these&amp;nbsp;results&amp;nbsp;to&amp;nbsp;disk&amp;nbsp;and&amp;nbsp;to&amp;nbsp;the&lt;br&gt;
binary&amp;nbsp;log&amp;nbsp;from&amp;nbsp;the&amp;nbsp;buffer&amp;nbsp;only&amp;nbsp;once&amp;nbsp;the&amp;nbsp;transaction&amp;nbsp;is&amp;nbsp;committed.&amp;nbsp;This&amp;nbsp;ensures&lt;br&gt;
that&amp;nbsp;the&amp;nbsp;statements&amp;nbsp;in&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;operate&amp;nbsp;as&amp;nbsp;an&amp;nbsp;indivisible&amp;nbsp;unit&amp;nbsp;and&amp;nbsp;that&amp;nbsp;their&lt;br&gt;
effects&amp;nbsp;are&amp;nbsp;seen&amp;nbsp;collectively,&amp;nbsp;or&amp;nbsp;not&amp;nbsp;at&amp;nbsp;all.&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;Consistency&amp;nbsp;is&amp;nbsp;primarily&amp;nbsp;handled&amp;nbsp;by&amp;nbsp;MySQL’s&amp;nbsp;logging&amp;nbsp;mechanisms,&amp;nbsp;which&lt;br&gt;
record&amp;nbsp;all&amp;nbsp;changes&amp;nbsp;to&amp;nbsp;the&amp;nbsp;database&amp;nbsp;and&amp;nbsp;provide&amp;nbsp;an&amp;nbsp;audit&amp;nbsp;trail&amp;nbsp;for&amp;nbsp;transaction&lt;br&gt;
recovery.&amp;nbsp;In&amp;nbsp;addition&amp;nbsp;to&amp;nbsp;the&amp;nbsp;logging&amp;nbsp;process,&amp;nbsp;MySQL&amp;nbsp;provides&amp;nbsp;locking&lt;br&gt;
mechanisms&amp;nbsp;that&amp;nbsp;ensure&amp;nbsp;that&amp;nbsp;all&amp;nbsp;of&amp;nbsp;the&amp;nbsp;tables,&amp;nbsp;rows,&amp;nbsp;and&amp;nbsp;indexes&amp;nbsp;that&amp;nbsp;make&amp;nbsp;up&lt;br&gt;
the&amp;nbsp;transaction&amp;nbsp;are&amp;nbsp;locked&amp;nbsp;by&amp;nbsp;the&amp;nbsp;initiating&amp;nbsp;process&amp;nbsp;long&amp;nbsp;enough&amp;nbsp;to&amp;nbsp;either&lt;br&gt;
commit&amp;nbsp;the&amp;nbsp;transaction&amp;nbsp;or&amp;nbsp;roll&amp;nbsp;it&amp;nbsp;back.&lt;br&gt;
&lt;br&gt;
3)Server-side&amp;nbsp;semaphore&amp;nbsp;variables&amp;nbsp;and&amp;nbsp;locking&amp;nbsp;mechanisms&amp;nbsp;act&amp;nbsp;as&amp;nbsp;traffic&amp;nbsp;managers&lt;br&gt;
to&amp;nbsp;help&amp;nbsp;programs&amp;nbsp;manage&amp;nbsp;their&amp;nbsp;own&amp;nbsp;isolation&amp;nbsp;mechanisms.&amp;nbsp;For&amp;nbsp;example,&amp;nbsp;MySQL’s&lt;br&gt;
InnoDB&amp;nbsp;engine&amp;nbsp;uses&amp;nbsp;fine-grained&amp;nbsp;row-level&amp;nbsp;locking&amp;nbsp;for&amp;nbsp;this&amp;nbsp;purpose.&lt;br&gt;
&lt;br&gt;
4)MySQL&amp;nbsp;implements&amp;nbsp;durability&amp;nbsp;by&amp;nbsp;maintaining&amp;nbsp;a&amp;nbsp;binary&amp;nbsp;transaction&amp;nbsp;log&amp;nbsp;file&amp;nbsp;that&lt;br&gt;
tracks&amp;nbsp;changes&amp;nbsp;to&amp;nbsp;the&amp;nbsp;system&amp;nbsp;during&amp;nbsp;the&amp;nbsp;course&amp;nbsp;of&amp;nbsp;a&amp;nbsp;transaction.&amp;nbsp;In&amp;nbsp;the&amp;nbsp;event&amp;nbsp;of&lt;br&gt;
a&amp;nbsp;hardware&amp;nbsp;failure&amp;nbsp;or&amp;nbsp;abrupt&amp;nbsp;system&amp;nbsp;shutdown,&amp;nbsp;recovering&amp;nbsp;lost&amp;nbsp;data&amp;nbsp;is&amp;nbsp;a&lt;br&gt;
relatively&amp;nbsp;straightforward&amp;nbsp;task&amp;nbsp;by&amp;nbsp;using&amp;nbsp;the&amp;nbsp;last&amp;nbsp;backup&amp;nbsp;in&amp;nbsp;combination&amp;nbsp;with&lt;br&gt;
the&amp;nbsp;log&amp;nbsp;when&amp;nbsp;the&amp;nbsp;system&amp;nbsp;restarts.&amp;nbsp;By&amp;nbsp;default,&amp;nbsp;InnoDB&amp;nbsp;tables&amp;nbsp;are&amp;nbsp;100&amp;nbsp;percent&lt;br&gt;
durable&amp;nbsp;(in&amp;nbsp;other&amp;nbsp;words,&amp;nbsp;all&amp;nbsp;transactions&amp;nbsp;committed&amp;nbsp;to&amp;nbsp;the&amp;nbsp;system&amp;nbsp;before&amp;nbsp;the&lt;br&gt;
crash&amp;nbsp;are&amp;nbsp;liable&amp;nbsp;to&amp;nbsp;be&amp;nbsp;rolled&amp;nbsp;back&amp;nbsp;during&amp;nbsp;the&amp;nbsp;recovery&amp;nbsp;process),&amp;nbsp;while&amp;nbsp;MyISAM&lt;br&gt;
tables&amp;nbsp;offer&amp;nbsp;partial&amp;nbsp;durability.</questionanswer>
  </question>
  <question id="0_1_2_0_4:1" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MySQL&amp;nbsp;simple&amp;nbsp;transaction,&amp;nbsp;provide&amp;nbsp;example.&lt;br&gt;
Nested&amp;nbsp;Transactions&amp;nbsp;in&amp;nbsp;MySQL,&amp;nbsp;describe.&amp;nbsp;Automatic&amp;nbsp;Commits&amp;nbsp;in&amp;nbsp;MySQL,&amp;nbsp;describe.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Just&amp;nbsp;Simple&amp;nbsp;example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
drop&amp;nbsp;table&amp;nbsp;test.usingtransactions;&lt;br&gt;
create&amp;nbsp;table&amp;nbsp;test.usingtransactions&amp;nbsp;(id&amp;nbsp;int&amp;nbsp;primary&amp;nbsp;key,&amp;nbsp;name&amp;nbsp;varchar(20));&lt;br&gt;
truncate&amp;nbsp;table&amp;nbsp;test.usingtransactions;&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;for&amp;nbsp;testing&amp;nbsp;transactions&amp;nbsp;open&amp;nbsp;two&amp;nbsp;instances&amp;nbsp;of&amp;nbsp;MySQL&amp;nbsp;workbench&amp;nbsp;=)&lt;br&gt;
&lt;br&gt;
start&amp;nbsp;transaction;&lt;br&gt;
insert&amp;nbsp;into&amp;nbsp;test.usingtransactions&amp;nbsp;values&amp;nbsp;(1,&amp;nbsp;'1');&lt;br&gt;
insert&amp;nbsp;into&amp;nbsp;test.usingtransactions&amp;nbsp;values&amp;nbsp;(2,&amp;nbsp;'1');&lt;br&gt;
commit&amp;nbsp;;&lt;br&gt;
rollback;&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;*&amp;nbsp;from&amp;nbsp;test.usingtransactions;&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;Transaction&amp;nbsp;is&amp;nbsp;isolated&amp;nbsp;,&amp;nbsp;so&amp;nbsp;from&amp;nbsp;another&amp;nbsp;session&amp;nbsp;(connection)&amp;nbsp;you&amp;nbsp;can&amp;nbsp;see&amp;nbsp;changes&amp;nbsp;only&amp;nbsp;after&amp;nbsp;commit.&lt;br&gt;
===============================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The&amp;nbsp;ADD&amp;nbsp;CHAIN&amp;nbsp;and&amp;nbsp;RELEASE&amp;nbsp;Clauses&lt;br&gt;
By&amp;nbsp;default,&amp;nbsp;once&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;has&amp;nbsp;completed,&amp;nbsp;MySQL&amp;nbsp;simply&amp;nbsp;awaits&amp;nbsp;the&amp;nbsp;next&amp;nbsp;command.&lt;br&gt;
However,&amp;nbsp;MySQL’s&amp;nbsp;START&amp;nbsp;TRANSACTION&amp;nbsp;command&amp;nbsp;also&amp;nbsp;supports&amp;nbsp;two&amp;nbsp;additional&lt;br&gt;
clauses,&amp;nbsp;which&amp;nbsp;can&amp;nbsp;be&amp;nbsp;used&amp;nbsp;to&amp;nbsp;modify&amp;nbsp;what&amp;nbsp;happens&amp;nbsp;after&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;completes.&lt;br&gt;
&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;ADD&amp;nbsp;CHAIN&amp;nbsp;clause&amp;nbsp;causes&amp;nbsp;MySQL&amp;nbsp;to&amp;nbsp;immediately&amp;nbsp;start&amp;nbsp;a&amp;nbsp;new&amp;nbsp;transaction&lt;br&gt;
(with&amp;nbsp;the&amp;nbsp;same&amp;nbsp;isolation&amp;nbsp;level&amp;nbsp;as&amp;nbsp;the&amp;nbsp;previous&amp;nbsp;one)&amp;nbsp;following&amp;nbsp;a&amp;nbsp;commit&amp;nbsp;or&amp;nbsp;rollback.&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;RELEASE&amp;nbsp;clause&amp;nbsp;causes&amp;nbsp;MySQL&amp;nbsp;to&amp;nbsp;terminate&amp;nbsp;the&amp;nbsp;client&amp;nbsp;connection&amp;nbsp;following&lt;br&gt;
a&amp;nbsp;commit&amp;nbsp;or&amp;nbsp;rollback.&lt;br&gt;
Adding&amp;nbsp;the&amp;nbsp;NO&amp;nbsp;prefix&amp;nbsp;to&amp;nbsp;either&amp;nbsp;of&amp;nbsp;these&amp;nbsp;two&amp;nbsp;clauses&amp;nbsp;negates&amp;nbsp;the&amp;nbsp;operation.&lt;br&gt;
&lt;br&gt;
Note&amp;nbsp;:&amp;nbsp;It’s&amp;nbsp;also&amp;nbsp;possible&amp;nbsp;to&amp;nbsp;modify&amp;nbsp;this&amp;nbsp;behavior&amp;nbsp;by&amp;nbsp;setting&amp;nbsp;the&amp;nbsp;MySQL&amp;nbsp;completion_type&amp;nbsp;variable,&lt;br&gt;
either&amp;nbsp;on&amp;nbsp;a&amp;nbsp;per-session&amp;nbsp;basis&amp;nbsp;with&amp;nbsp;SET&amp;nbsp;or&amp;nbsp;globally&amp;nbsp;via&amp;nbsp;the&amp;nbsp;MySQL&amp;nbsp;configuration&amp;nbsp;file.&lt;br&gt;
===========================================================&lt;br&gt;
&lt;br&gt;
!!!!!&amp;nbsp;Mysql&amp;nbsp;Doesn't&amp;nbsp;support&amp;nbsp;Nested&amp;nbsp;transactions,&amp;nbsp;but&amp;nbsp;support&amp;nbsp;SAVEPOINTS&amp;nbsp;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Savepoints&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;InnoDB&amp;nbsp;storage&amp;nbsp;engine&amp;nbsp;supports&amp;nbsp;an&amp;nbsp;additional&amp;nbsp;useful&amp;nbsp;feature:&amp;nbsp;the&amp;nbsp;ability&amp;nbsp;to&amp;nbsp;roll&lt;br&gt;
back&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;partially&amp;nbsp;instead&amp;nbsp;of&amp;nbsp;completely.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;accomplished&amp;nbsp;through&amp;nbsp;the&amp;nbsp;use&lt;br&gt;
of&amp;nbsp;savepoints—user-defined&amp;nbsp;points&amp;nbsp;that&amp;nbsp;can&amp;nbsp;be&amp;nbsp;used&amp;nbsp;to&amp;nbsp;mark&amp;nbsp;substages&amp;nbsp;within&amp;nbsp;a&lt;br&gt;
transaction.&amp;nbsp;In&amp;nbsp;the&amp;nbsp;event&amp;nbsp;of&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;failure,&amp;nbsp;these&amp;nbsp;savepoints&amp;nbsp;make&amp;nbsp;it&amp;nbsp;possible&amp;nbsp;to&lt;br&gt;
roll&amp;nbsp;back&amp;nbsp;only&amp;nbsp;specific&amp;nbsp;parts&amp;nbsp;of&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;rather&amp;nbsp;than&amp;nbsp;the&amp;nbsp;entire&amp;nbsp;transaction.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;Nested&amp;nbsp;transcations&amp;nbsp;are&amp;nbsp;not&amp;nbsp;supported,&amp;nbsp;BUT&amp;nbsp;Savepoints&amp;nbsp;support&amp;nbsp;is&amp;nbsp;available&amp;nbsp;:&amp;nbsp;&lt;br&gt;
drop&amp;nbsp;table&amp;nbsp;test.usingtransactions;&lt;br&gt;
create&amp;nbsp;table&amp;nbsp;test.usingtransactions&amp;nbsp;(id&amp;nbsp;int&amp;nbsp;primary&amp;nbsp;key,&amp;nbsp;name&amp;nbsp;varchar(20));&lt;br&gt;
truncate&amp;nbsp;table&amp;nbsp;test.usingtransactions;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
start&amp;nbsp;transaction;&lt;br&gt;
insert&amp;nbsp;into&amp;nbsp;test.usingtransactions&amp;nbsp;values&amp;nbsp;(100,&amp;nbsp;'100');&lt;br&gt;
&lt;br&gt;
savepoint&amp;nbsp;p1;&lt;br&gt;
&lt;br&gt;
insert&amp;nbsp;into&amp;nbsp;test.usingtransactions&amp;nbsp;values&amp;nbsp;(200,&amp;nbsp;'100');&lt;br&gt;
&lt;br&gt;
&amp;nbsp;rollback&amp;nbsp;to&amp;nbsp;p1;&amp;nbsp;--&amp;nbsp;we&amp;nbsp;rollback&amp;nbsp;part&amp;nbsp;of&amp;nbsp;transaction&lt;br&gt;
--&amp;nbsp;or&lt;br&gt;
--&amp;nbsp;release&amp;nbsp;savepoint&amp;nbsp;p1;&lt;br&gt;
commit;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
=============================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Automatic&amp;nbsp;Commits&lt;br&gt;
&lt;br&gt;
By&amp;nbsp;default,&amp;nbsp;MySQL&amp;nbsp;implicitly&amp;nbsp;commits&amp;nbsp;the&amp;nbsp;results&amp;nbsp;of&amp;nbsp;every&amp;nbsp;SQL&amp;nbsp;query&amp;nbsp;to&amp;nbsp;the&amp;nbsp;database&lt;br&gt;
once&amp;nbsp;it&amp;nbsp;is&amp;nbsp;executed.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;referred&amp;nbsp;to&amp;nbsp;as&amp;nbsp;autocommit&amp;nbsp;mode&amp;nbsp;and&amp;nbsp;is&amp;nbsp;the&amp;nbsp;reason&amp;nbsp;you&amp;nbsp;needn’t&lt;br&gt;
begin&amp;nbsp;every&amp;nbsp;MySQL&amp;nbsp;session&amp;nbsp;with&amp;nbsp;a&amp;nbsp;START&amp;nbsp;TRANSACTION&amp;nbsp;statement&amp;nbsp;or&amp;nbsp;end&amp;nbsp;it&amp;nbsp;with&amp;nbsp;a&lt;br&gt;
COMMIT&amp;nbsp;or&amp;nbsp;ROLLBACK.&amp;nbsp;Or,&amp;nbsp;to&amp;nbsp;put&amp;nbsp;it&amp;nbsp;another&amp;nbsp;way,&amp;nbsp;MySQL&amp;nbsp;treats&amp;nbsp;every&amp;nbsp;query&amp;nbsp;as&amp;nbsp;a&amp;nbsp;singlestatement&lt;br&gt;
transaction.&lt;br&gt;
&lt;br&gt;
This&amp;nbsp;default&amp;nbsp;behavior&amp;nbsp;can&amp;nbsp;be&amp;nbsp;modified&amp;nbsp;via&amp;nbsp;the&amp;nbsp;special&amp;nbsp;AUTOCOMMIT&amp;nbsp;variable,&amp;nbsp;which&lt;br&gt;
controls&amp;nbsp;MySQL’s&amp;nbsp;autocommit&amp;nbsp;mode.&amp;nbsp;The&amp;nbsp;following&amp;nbsp;snippet&amp;nbsp;demonstrates,&amp;nbsp;by&amp;nbsp;turning&lt;br&gt;
off&amp;nbsp;the&amp;nbsp;MySQL&amp;nbsp;behavior&amp;nbsp;of&amp;nbsp;internally&amp;nbsp;issuing&amp;nbsp;a&amp;nbsp;COMMIT&amp;nbsp;command&amp;nbsp;after&amp;nbsp;each&amp;nbsp;SQL&lt;br&gt;
interaction:&lt;br&gt;
mysql&gt;&amp;nbsp;SET&amp;nbsp;AUTOCOMMIT&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.02&amp;nbsp;sec)&lt;br&gt;
&lt;br&gt;
Subsequent&amp;nbsp;to&amp;nbsp;this,&amp;nbsp;any&amp;nbsp;update&amp;nbsp;to&amp;nbsp;a&amp;nbsp;table&amp;nbsp;will&amp;nbsp;not&amp;nbsp;be&amp;nbsp;saved&amp;nbsp;to&amp;nbsp;the&amp;nbsp;database&amp;nbsp;until&amp;nbsp;an&lt;br&gt;
explicit&amp;nbsp;COMMIT&amp;nbsp;command&amp;nbsp;is&amp;nbsp;issued.&amp;nbsp;In&amp;nbsp;fact,&amp;nbsp;terminating&amp;nbsp;a&amp;nbsp;MySQL&amp;nbsp;session&amp;nbsp;without&lt;br&gt;
issuing&amp;nbsp;a&amp;nbsp;COMMIT&amp;nbsp;will&amp;nbsp;cause&amp;nbsp;the&amp;nbsp;database&amp;nbsp;to&amp;nbsp;automatically&amp;nbsp;fire&amp;nbsp;a&amp;nbsp;ROLLBACK&amp;nbsp;and&amp;nbsp;undo&amp;nbsp;all&lt;br&gt;
the&amp;nbsp;changes&amp;nbsp;made,&amp;nbsp;thereby&amp;nbsp;negating&amp;nbsp;all&amp;nbsp;the&amp;nbsp;work&amp;nbsp;done&amp;nbsp;during&amp;nbsp;the&amp;nbsp;session.&lt;br&gt;
&lt;br&gt;
To&amp;nbsp;turn&amp;nbsp;autocommit&amp;nbsp;mode&amp;nbsp;back&amp;nbsp;on,&amp;nbsp;reset&amp;nbsp;the&amp;nbsp;AUTOCOMMIT&amp;nbsp;variable&amp;nbsp;to&amp;nbsp;its&amp;nbsp;initial&amp;nbsp;state.&lt;br&gt;
mysql&gt;&amp;nbsp;SET&amp;nbsp;AUTOCOMMIT&amp;nbsp;=&amp;nbsp;1;&lt;br&gt;
Query&amp;nbsp;OK,&amp;nbsp;0&amp;nbsp;rows&amp;nbsp;affected&amp;nbsp;(0.00&amp;nbsp;sec)&lt;br&gt;
The&amp;nbsp;AUTOCOMMIT&amp;nbsp;variable&amp;nbsp;is&amp;nbsp;a&amp;nbsp;session&amp;nbsp;variable&amp;nbsp;and&amp;nbsp;always&amp;nbsp;defaults&amp;nbsp;to&amp;nbsp;1&amp;nbsp;when&amp;nbsp;a&amp;nbsp;new&lt;br&gt;
client&amp;nbsp;session&amp;nbsp;begins.&lt;br&gt;
&lt;br&gt;</questionanswer>
  </question>
  <question id="0_1_2_0_4:2" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MySQL&amp;nbsp;transactions&amp;nbsp;isolation&amp;nbsp;levels,&amp;nbsp;describe.&amp;nbsp;What&amp;nbsp;is&amp;nbsp;Phantom&amp;nbsp;read&amp;nbsp;?&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>http://en.wikipedia.org/wiki/Isolation_%28database_systems%29&lt;br&gt;
----------------------------------------------------------------------------------------------------&lt;br&gt;
Transaction&amp;nbsp;Isolation&amp;nbsp;Levels&lt;br&gt;
One&amp;nbsp;of&amp;nbsp;the&amp;nbsp;most&amp;nbsp;important&amp;nbsp;properties&amp;nbsp;of&amp;nbsp;a&amp;nbsp;transaction-capable&amp;nbsp;RDBMS&amp;nbsp;is&amp;nbsp;its&amp;nbsp;capability&lt;br&gt;
to&amp;nbsp;“isolate”&amp;nbsp;the&amp;nbsp;different&amp;nbsp;sessions&amp;nbsp;in&amp;nbsp;progress&amp;nbsp;at&amp;nbsp;any&amp;nbsp;given&amp;nbsp;instance&amp;nbsp;on&amp;nbsp;the&amp;nbsp;server.&amp;nbsp;In&amp;nbsp;a&lt;br&gt;
single-user&amp;nbsp;environment,&amp;nbsp;this&amp;nbsp;property&amp;nbsp;is&amp;nbsp;largely&amp;nbsp;irrelevant&amp;nbsp;for&amp;nbsp;obvious&amp;nbsp;reasons:&amp;nbsp;There&lt;br&gt;
is&amp;nbsp;nothing&amp;nbsp;to&amp;nbsp;isolate&amp;nbsp;because&amp;nbsp;usually&amp;nbsp;only&amp;nbsp;a&amp;nbsp;single&amp;nbsp;session&amp;nbsp;is&amp;nbsp;active&amp;nbsp;at&amp;nbsp;any&amp;nbsp;time.&amp;nbsp;In&amp;nbsp;more&lt;br&gt;
complex&amp;nbsp;real-world&amp;nbsp;scenarios,&amp;nbsp;however,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;unlikely&amp;nbsp;this&amp;nbsp;assumption&amp;nbsp;will&amp;nbsp;remain&amp;nbsp;true.&lt;br&gt;
In&amp;nbsp;a&amp;nbsp;multiuser&amp;nbsp;environment,&amp;nbsp;many&amp;nbsp;RDBMS&amp;nbsp;sessions&amp;nbsp;will&amp;nbsp;usually&amp;nbsp;be&amp;nbsp;active&amp;nbsp;at&amp;nbsp;any&lt;br&gt;
given&amp;nbsp;time.&amp;nbsp;In&amp;nbsp;the&amp;nbsp;stock&amp;nbsp;trading&amp;nbsp;example&amp;nbsp;discussed&amp;nbsp;previously,&amp;nbsp;for&amp;nbsp;instance,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;unlikely&lt;br&gt;
that&amp;nbsp;only&amp;nbsp;a&amp;nbsp;single&amp;nbsp;trade&amp;nbsp;will&amp;nbsp;be&amp;nbsp;taking&amp;nbsp;place&amp;nbsp;at&amp;nbsp;a&amp;nbsp;particular&amp;nbsp;point&amp;nbsp;in&amp;nbsp;time.&amp;nbsp;Far&amp;nbsp;more&amp;nbsp;likely&lt;br&gt;
is&amp;nbsp;that&amp;nbsp;hundreds&amp;nbsp;of&amp;nbsp;trades&amp;nbsp;will&amp;nbsp;occur&amp;nbsp;simultaneously.&amp;nbsp;In&amp;nbsp;such&amp;nbsp;a&amp;nbsp;situation,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;essential&lt;br&gt;
that&amp;nbsp;the&amp;nbsp;RDBMS&amp;nbsp;isolate&amp;nbsp;transactions&amp;nbsp;so&amp;nbsp;that&amp;nbsp;they&amp;nbsp;do&amp;nbsp;not&amp;nbsp;interfere&amp;nbsp;with&amp;nbsp;each&amp;nbsp;other,&amp;nbsp;while&lt;br&gt;
simultaneously&amp;nbsp;ensuring&amp;nbsp;the&amp;nbsp;database’s&amp;nbsp;performance&amp;nbsp;does&amp;nbsp;not&amp;nbsp;suffer&amp;nbsp;as&amp;nbsp;a&amp;nbsp;result.&lt;br&gt;
&lt;br&gt;
To&amp;nbsp;understand&amp;nbsp;the&amp;nbsp;importance&amp;nbsp;of&amp;nbsp;isolation,&amp;nbsp;consider&amp;nbsp;what&amp;nbsp;would&amp;nbsp;happen&amp;nbsp;if&amp;nbsp;it&amp;nbsp;wasn’t&lt;br&gt;
enforced.&amp;nbsp;In&amp;nbsp;the&amp;nbsp;absence&amp;nbsp;of&amp;nbsp;transaction&amp;nbsp;isolation,&amp;nbsp;different&amp;nbsp;SELECT&amp;nbsp;statements&amp;nbsp;would&lt;br&gt;
retrieve&amp;nbsp;different&amp;nbsp;results&amp;nbsp;within&amp;nbsp;the&amp;nbsp;context&amp;nbsp;of&amp;nbsp;the&amp;nbsp;same&amp;nbsp;transaction&amp;nbsp;because&amp;nbsp;the&lt;br&gt;
underlying&amp;nbsp;data&amp;nbsp;was&amp;nbsp;modified&amp;nbsp;by&amp;nbsp;other&amp;nbsp;transactions&amp;nbsp;in&amp;nbsp;the&amp;nbsp;interim.&amp;nbsp;This&amp;nbsp;would&amp;nbsp;create&lt;br&gt;
inconsistency&amp;nbsp;and&amp;nbsp;make&amp;nbsp;it&amp;nbsp;difficult&amp;nbsp;to&amp;nbsp;trust&amp;nbsp;a&amp;nbsp;particular&amp;nbsp;result&amp;nbsp;set&amp;nbsp;or&amp;nbsp;use&amp;nbsp;it&amp;nbsp;as&amp;nbsp;the&amp;nbsp;basis&lt;br&gt;
for&amp;nbsp;calculations&amp;nbsp;with&amp;nbsp;any&amp;nbsp;degree&amp;nbsp;of&amp;nbsp;confidence.&amp;nbsp;Isolation&amp;nbsp;thus&amp;nbsp;imposes&amp;nbsp;a&amp;nbsp;degree&amp;nbsp;of&lt;br&gt;
insulation&amp;nbsp;between&amp;nbsp;transactions,&amp;nbsp;guaranteeing&amp;nbsp;that&amp;nbsp;an&amp;nbsp;application&amp;nbsp;only&amp;nbsp;sees&amp;nbsp;consistent&lt;br&gt;
data&amp;nbsp;within&amp;nbsp;the&amp;nbsp;scope&amp;nbsp;of&amp;nbsp;a&amp;nbsp;transaction.&lt;br&gt;
==============================================&lt;br&gt;
&lt;br&gt;
MySQL&amp;nbsp;provides&amp;nbsp;the&amp;nbsp;following&amp;nbsp;four&amp;nbsp;isolation&amp;nbsp;levels&amp;nbsp;in&amp;nbsp;accordance&amp;nbsp;with&amp;nbsp;the&amp;nbsp;ANSI/&lt;br&gt;
ISO&amp;nbsp;SQL&amp;nbsp;specification:&lt;br&gt;
&lt;br&gt;
1)-&amp;nbsp;READ&amp;nbsp;UNCOMMITTED&lt;br&gt;
2)-&amp;nbsp;READ&amp;nbsp;COMMITTED&lt;br&gt;
3)-&amp;nbsp;REPEATABLE&amp;nbsp;READ&lt;br&gt;
4)-&amp;nbsp;SERIALIZABLE&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1&amp;nbsp;The&amp;nbsp;READ&amp;nbsp;UNCOMMITTED&amp;nbsp;Isolation&amp;nbsp;Level&amp;nbsp;(simple)&lt;br&gt;
The&amp;nbsp;READ&amp;nbsp;UNCOMMITTED&amp;nbsp;isolation&amp;nbsp;level&amp;nbsp;provides&amp;nbsp;the&amp;nbsp;minimum&amp;nbsp;amount&amp;nbsp;of&amp;nbsp;insulation&lt;br&gt;
between&amp;nbsp;transactions.&amp;nbsp;In&amp;nbsp;addition&amp;nbsp;to&amp;nbsp;being&amp;nbsp;vulnerable&amp;nbsp;to&amp;nbsp;phantom&amp;nbsp;reads&amp;nbsp;and&lt;br&gt;
unrepeatable&amp;nbsp;reads,&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;at&amp;nbsp;this&amp;nbsp;isolation&amp;nbsp;level&amp;nbsp;can&amp;nbsp;read&amp;nbsp;data&amp;nbsp;that&amp;nbsp;has&amp;nbsp;not&amp;nbsp;yet&lt;br&gt;
been&amp;nbsp;committed&amp;nbsp;by&amp;nbsp;other&amp;nbsp;transactions.&amp;nbsp;If&amp;nbsp;this&amp;nbsp;transaction&amp;nbsp;now&amp;nbsp;uses&amp;nbsp;the&amp;nbsp;uncommitted&lt;br&gt;
changes&amp;nbsp;made&amp;nbsp;by&amp;nbsp;other&amp;nbsp;transactions&amp;nbsp;as&amp;nbsp;the&amp;nbsp;basis&amp;nbsp;for&amp;nbsp;calculations&amp;nbsp;of&amp;nbsp;its&amp;nbsp;own,&amp;nbsp;and&amp;nbsp;those&lt;br&gt;
uncommitted&amp;nbsp;changes&amp;nbsp;are&amp;nbsp;then&amp;nbsp;rolled&amp;nbsp;back&amp;nbsp;by&amp;nbsp;their&amp;nbsp;parent&amp;nbsp;transactions,&amp;nbsp;it&amp;nbsp;can&amp;nbsp;result&amp;nbsp;in&lt;br&gt;
massive&amp;nbsp;data&amp;nbsp;corruption&lt;br&gt;
&lt;br&gt;
&lt;img&amp;nbsp;width='600'&amp;nbsp;height='190'&amp;nbsp;alt='image'&amp;nbsp;src='/data/images/Selection_027.png'/&gt;&lt;br&gt;
---------------------------------------------------&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2&amp;nbsp;READ&amp;nbsp;COMMITTED&lt;br&gt;
Even&amp;nbsp;less&amp;nbsp;secure&amp;nbsp;than&amp;nbsp;the&amp;nbsp;REPEATABLE&amp;nbsp;READ&amp;nbsp;isolation&amp;nbsp;level&amp;nbsp;is&amp;nbsp;the&amp;nbsp;READ&amp;nbsp;COMMITTED&lt;br&gt;
isolation&amp;nbsp;level.&amp;nbsp;At&amp;nbsp;this&amp;nbsp;level,&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;can&amp;nbsp;see&amp;nbsp;the&amp;nbsp;committed&amp;nbsp;changes&amp;nbsp;of&amp;nbsp;other&lt;br&gt;
transactions&amp;nbsp;during&amp;nbsp;its&amp;nbsp;lifetime.&amp;nbsp;Put&amp;nbsp;another&amp;nbsp;way,&amp;nbsp;this&amp;nbsp;means&amp;nbsp;multiple&amp;nbsp;SELECT&amp;nbsp;statements&lt;br&gt;
within&amp;nbsp;the&amp;nbsp;same&amp;nbsp;transaction&amp;nbsp;might&amp;nbsp;return&amp;nbsp;different&amp;nbsp;results&amp;nbsp;if&amp;nbsp;the&amp;nbsp;corresponding&amp;nbsp;tables&lt;br&gt;
have&amp;nbsp;been&amp;nbsp;modified&amp;nbsp;by&amp;nbsp;other&amp;nbsp;transactions&amp;nbsp;in&amp;nbsp;the&amp;nbsp;intervening&amp;nbsp;period.&lt;br&gt;
&lt;br&gt;
&lt;img&amp;nbsp;width='620'&amp;nbsp;height='180'&amp;nbsp;alt='image'&amp;nbsp;src='/data/images/Selection_028.png'/&gt;&lt;br&gt;
&lt;br&gt;
------------------------------------------------&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3&amp;nbsp;The&amp;nbsp;REPEATABLE&amp;nbsp;READ&amp;nbsp;Isolation&amp;nbsp;Level&amp;nbsp;&amp;nbsp;(DEFAULT&amp;nbsp;value&amp;nbsp;im&amp;nbsp;MySQL)&lt;br&gt;
&lt;br&gt;
For&amp;nbsp;applications&amp;nbsp;that&amp;nbsp;are&amp;nbsp;willing&amp;nbsp;to&amp;nbsp;compromise&amp;nbsp;a&amp;nbsp;little&amp;nbsp;on&amp;nbsp;security&amp;nbsp;for&amp;nbsp;better&amp;nbsp;performance,&lt;br&gt;
MySQL&amp;nbsp;offers&amp;nbsp;the&amp;nbsp;REPEATABLE&amp;nbsp;READ&amp;nbsp;isolation&amp;nbsp;level.&amp;nbsp;At&amp;nbsp;this&amp;nbsp;level,&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;will&amp;nbsp;not&lt;br&gt;
see&amp;nbsp;the&amp;nbsp;changes&amp;nbsp;carried&amp;nbsp;out&amp;nbsp;by&amp;nbsp;concurrent&amp;nbsp;transactions&amp;nbsp;until&amp;nbsp;it&amp;nbsp;itself&amp;nbsp;has&amp;nbsp;concluded.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;this&amp;nbsp;case,&amp;nbsp;the&amp;nbsp;second&amp;nbsp;transaction&amp;nbsp;can&amp;nbsp;see&amp;nbsp;the&amp;nbsp;new&amp;nbsp;flight&amp;nbsp;added&amp;nbsp;by&amp;nbsp;the&amp;nbsp;first&lt;br&gt;
transaction&amp;nbsp;only&amp;nbsp;once&amp;nbsp;both&amp;nbsp;transactions&amp;nbsp;are&amp;nbsp;complete.&amp;nbsp;This&amp;nbsp;is,&amp;nbsp;in&amp;nbsp;fact,&amp;nbsp;the&amp;nbsp;way&amp;nbsp;most&lt;br&gt;
users&amp;nbsp;expect&amp;nbsp;transactions&amp;nbsp;to&amp;nbsp;work,&amp;nbsp;and&amp;nbsp;it&amp;nbsp;should&amp;nbsp;come&amp;nbsp;as&amp;nbsp;no&amp;nbsp;surprise&amp;nbsp;that&amp;nbsp;this&amp;nbsp;is&lt;br&gt;
MySQL’s&amp;nbsp;default&amp;nbsp;transaction&amp;nbsp;isolation&amp;nbsp;level.&amp;nbsp;The&amp;nbsp;InnoDB&amp;nbsp;storage&amp;nbsp;engine&amp;nbsp;accomplishes&lt;br&gt;
this&amp;nbsp;by&amp;nbsp;using&amp;nbsp;multiversioning&amp;nbsp;to&amp;nbsp;store&amp;nbsp;a&amp;nbsp;snapshot&amp;nbsp;of&amp;nbsp;the&amp;nbsp;query&amp;nbsp;results&amp;nbsp;when&amp;nbsp;the&amp;nbsp;query&lt;br&gt;
is&amp;nbsp;executed&amp;nbsp;for&amp;nbsp;the&amp;nbsp;first&amp;nbsp;time;&amp;nbsp;it&amp;nbsp;then&amp;nbsp;reuses&amp;nbsp;this&amp;nbsp;snapshot&amp;nbsp;for&amp;nbsp;all&amp;nbsp;subsequent&amp;nbsp;queries&lt;br&gt;
until&amp;nbsp;the&amp;nbsp;transaction&amp;nbsp;is&amp;nbsp;committed.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;img&amp;nbsp;width='580'&amp;nbsp;height='170'&amp;nbsp;alt='image'&amp;nbsp;src='/data/images/Selection_029.png'/&gt;&lt;br&gt;
&lt;br&gt;
--------------------------------------------&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4&amp;nbsp;The&amp;nbsp;SERIALIZABLE&amp;nbsp;Isolation&amp;nbsp;Level&amp;nbsp;(good&amp;nbsp;isolation&amp;nbsp;level,&amp;nbsp;block&amp;nbsp;rows&amp;nbsp;even&amp;nbsp;you&amp;nbsp;use&amp;nbsp;SELECT)&lt;br&gt;
&lt;br&gt;
This&amp;nbsp;SERIALIZABLE&amp;nbsp;isolation&amp;nbsp;level&amp;nbsp;offers&amp;nbsp;the&amp;nbsp;maximum&amp;nbsp;amount&amp;nbsp;of&amp;nbsp;insulation&amp;nbsp;between&lt;br&gt;
transactions&amp;nbsp;by&amp;nbsp;treating&amp;nbsp;concurrent&amp;nbsp;transactions&amp;nbsp;as&amp;nbsp;though&amp;nbsp;they&amp;nbsp;were&amp;nbsp;executing&lt;br&gt;
sequentially,&amp;nbsp;one&amp;nbsp;after&amp;nbsp;the&amp;nbsp;other.&lt;br&gt;
Here,&amp;nbsp;the&amp;nbsp;first&amp;nbsp;transaction&amp;nbsp;is&amp;nbsp;adding&amp;nbsp;a&amp;nbsp;new&amp;nbsp;flight&amp;nbsp;to&amp;nbsp;the&amp;nbsp;database,&amp;nbsp;while&amp;nbsp;the&amp;nbsp;second&amp;nbsp;is&lt;br&gt;
attempting&amp;nbsp;to&amp;nbsp;view&amp;nbsp;the&amp;nbsp;total&amp;nbsp;number&amp;nbsp;of&amp;nbsp;flights.&amp;nbsp;However,&amp;nbsp;because&amp;nbsp;MySQL&amp;nbsp;is&amp;nbsp;executing&lt;br&gt;
these&amp;nbsp;transactions&amp;nbsp;serially,&amp;nbsp;the&amp;nbsp;INSERT&amp;nbsp;operation&amp;nbsp;in&amp;nbsp;the&amp;nbsp;first&amp;nbsp;transaction&amp;nbsp;will&amp;nbsp;lock&amp;nbsp;the&lt;br&gt;
table&amp;nbsp;until&amp;nbsp;the&amp;nbsp;transaction&amp;nbsp;is&amp;nbsp;complete.&amp;nbsp;This&amp;nbsp;will&amp;nbsp;force&amp;nbsp;the&amp;nbsp;SELECT&amp;nbsp;operation&amp;nbsp;in&amp;nbsp;the&lt;br&gt;
second&amp;nbsp;transaction&amp;nbsp;to&amp;nbsp;wait&amp;nbsp;until&amp;nbsp;the&amp;nbsp;lock&amp;nbsp;is&amp;nbsp;released&amp;nbsp;before&amp;nbsp;it&amp;nbsp;can&amp;nbsp;obtain&amp;nbsp;a&amp;nbsp;result.&lt;br&gt;
This&amp;nbsp;“serialized”&amp;nbsp;approach&amp;nbsp;to&amp;nbsp;handling&amp;nbsp;transactions&amp;nbsp;is&amp;nbsp;the&amp;nbsp;most&amp;nbsp;secure:&amp;nbsp;Sequentially&lt;br&gt;
locking&amp;nbsp;and&amp;nbsp;unlocking&amp;nbsp;the&amp;nbsp;table&amp;nbsp;ensures&amp;nbsp;that&amp;nbsp;each&amp;nbsp;transaction&amp;nbsp;only&amp;nbsp;sees&amp;nbsp;data&amp;nbsp;that&amp;nbsp;has&lt;br&gt;
actually&amp;nbsp;been&amp;nbsp;committed&amp;nbsp;to&amp;nbsp;the&amp;nbsp;database,&amp;nbsp;with&amp;nbsp;no&amp;nbsp;possibility&amp;nbsp;of&amp;nbsp;dirty&amp;nbsp;or&amp;nbsp;unrepeatable&lt;br&gt;
reads.&amp;nbsp;However,&amp;nbsp;this&amp;nbsp;comes&amp;nbsp;at&amp;nbsp;a&amp;nbsp;price:&amp;nbsp;MySQL&amp;nbsp;will&amp;nbsp;take&amp;nbsp;a&amp;nbsp;performance&amp;nbsp;hit&amp;nbsp;if&amp;nbsp;every&lt;br&gt;
transaction&amp;nbsp;runs&amp;nbsp;at&amp;nbsp;this&amp;nbsp;isolation&amp;nbsp;level&amp;nbsp;because&amp;nbsp;of&amp;nbsp;the&amp;nbsp;large&amp;nbsp;amount&amp;nbsp;of&amp;nbsp;resources&amp;nbsp;required&lt;br&gt;
to&amp;nbsp;handle&amp;nbsp;the&amp;nbsp;various&amp;nbsp;transactional&amp;nbsp;locks&amp;nbsp;at&amp;nbsp;any&amp;nbsp;given&amp;nbsp;instant.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;img&amp;nbsp;width='600'&amp;nbsp;height='190'&amp;nbsp;alt='image'&amp;nbsp;src='/data/images/Selection_030.png'/&gt;&lt;br&gt;
&lt;br&gt;
===============================================&lt;br&gt;
http://dev.mysql.com/doc/refman/5.0/en/set-transaction.html&lt;br&gt;
&lt;br&gt;
!!!&amp;nbsp;Important:&amp;nbsp;&lt;br&gt;
MySQL&amp;nbsp;Workbench&amp;nbsp;has&amp;nbsp;own&amp;nbsp;session&amp;nbsp;management&amp;nbsp;,&amp;nbsp;(so&amp;nbsp;i&amp;nbsp;set&amp;nbsp;global&amp;nbsp;variable&amp;nbsp;and&amp;nbsp;hope&amp;nbsp;that&lt;br&gt;
session&amp;nbsp;variable&amp;nbsp;will&amp;nbsp;&amp;nbsp;be&amp;nbsp;as&amp;nbsp;global&amp;nbsp;,&amp;nbsp;but&amp;nbsp;it&amp;nbsp;has&amp;nbsp;old&amp;nbsp;value)&lt;br&gt;
&lt;br&gt;
=================================================&lt;br&gt;
Example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
--&amp;nbsp;!!!!&amp;nbsp;PART&amp;nbsp;1&lt;br&gt;
SELECT&amp;nbsp;@@GLOBAL.tx_isolation,&amp;nbsp;@@tx_isolation;&lt;br&gt;
--&amp;nbsp;SET&amp;nbsp;GLOBAL&amp;nbsp;tx_isolation='READ-UNCOMMITTED';&lt;br&gt;
SET&amp;nbsp;SESSION&amp;nbsp;tx_isolation='SERIALIZABLE';&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
drop&amp;nbsp;table&amp;nbsp;test.usingtransactions;&lt;br&gt;
create&amp;nbsp;table&amp;nbsp;test.usingtransactions&amp;nbsp;(id&amp;nbsp;int&amp;nbsp;primary&amp;nbsp;key,&amp;nbsp;name&amp;nbsp;varchar(20));&lt;br&gt;
truncate&amp;nbsp;table&amp;nbsp;test.usingtransactions;&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;for&amp;nbsp;testing&amp;nbsp;transactions&amp;nbsp;open&amp;nbsp;two&amp;nbsp;instances&amp;nbsp;of&amp;nbsp;MySQL&amp;nbsp;workbench&amp;nbsp;=)&lt;br&gt;
&lt;br&gt;
start&amp;nbsp;transaction;&lt;br&gt;
insert&amp;nbsp;into&amp;nbsp;test.usingtransactions&amp;nbsp;values&amp;nbsp;(1,&amp;nbsp;'1');&lt;br&gt;
insert&amp;nbsp;into&amp;nbsp;test.usingtransactions&amp;nbsp;values&amp;nbsp;(2,&amp;nbsp;'2');&lt;br&gt;
insert&amp;nbsp;into&amp;nbsp;test.usingtransactions&amp;nbsp;values&amp;nbsp;(3,&amp;nbsp;'3');&lt;br&gt;
update&amp;nbsp;test.usingtransactions&amp;nbsp;set&amp;nbsp;id=10&lt;br&gt;
where&amp;nbsp;id&amp;nbsp;=&amp;nbsp;1;&lt;br&gt;
commit&amp;nbsp;;&lt;br&gt;
rollback;&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;*&amp;nbsp;from&amp;nbsp;test.usingtransactions;&lt;br&gt;
-------&lt;br&gt;
PART&amp;nbsp;2&amp;nbsp;:&amp;nbsp;SELECT&amp;nbsp;@@GLOBAL.tx_isolation,&amp;nbsp;@@tx_isolation;&lt;br&gt;
SET&amp;nbsp;SESSION&amp;nbsp;tx_isolation='SERIALIZABLE';&lt;br&gt;
&lt;br&gt;
start&amp;nbsp;transaction;&lt;br&gt;
select&amp;nbsp;*&amp;nbsp;from&amp;nbsp;test.usingtransactions;&lt;br&gt;
select&amp;nbsp;count(*)&amp;nbsp;from&amp;nbsp;test.usingtransactions;&lt;br&gt;
&lt;br&gt;
select&amp;nbsp;*&amp;nbsp;from&amp;nbsp;test.usingtransactions&lt;br&gt;
where&amp;nbsp;id=1;&lt;br&gt;
&lt;br&gt;
commit;&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;P.S&amp;nbsp;Try&amp;nbsp;PART&amp;nbsp;1&amp;nbsp;and&amp;nbsp;PART&amp;nbsp;2&amp;nbsp;in&amp;nbsp;different&amp;nbsp;clients&amp;nbsp;(open&amp;nbsp;2&amp;nbsp;instances&amp;nbsp;of&amp;nbsp;Workbench&amp;nbsp;for&amp;nbsp;example)&lt;br&gt;
--&amp;nbsp;P.S&amp;nbsp;&amp;nbsp;!!!&amp;nbsp;If&amp;nbsp;you&amp;nbsp;use&amp;nbsp;SERIALIZABLE&amp;nbsp;,&amp;nbsp;rows&amp;nbsp;are&amp;nbsp;blocked&amp;nbsp;,&amp;nbsp;even&amp;nbsp;you&amp;nbsp;use&amp;nbsp;SELECT&amp;nbsp;,&amp;nbsp;so&amp;nbsp;if&amp;nbsp;you&amp;nbsp;perform&lt;br&gt;
'SELECT&amp;nbsp;*&amp;nbsp;from&amp;nbsp;test'&amp;nbsp;-&amp;nbsp;all&amp;nbsp;rows&amp;nbsp;are&amp;nbsp;blocked&amp;nbsp;in&amp;nbsp;table&amp;nbsp;.&amp;nbsp;&lt;br&gt;
&lt;br&gt;
--&amp;nbsp;P.S&amp;nbsp;to&amp;nbsp;show&amp;nbsp;variables&amp;nbsp;in&amp;nbsp;MySQL&amp;nbsp;:&amp;nbsp;'show&amp;nbsp;[global]&amp;nbsp;variables'.&lt;br&gt;
&lt;br&gt;
http://dev.mysql.com/doc/refman/5.0/en/set-transaction.html&lt;br&gt;
http://dev.mysql.com/doc/refman/5.1/en/show-variables.html&lt;br&gt;
===================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PHANTOM&amp;nbsp;READS&amp;nbsp;:&lt;br&gt;
&lt;br&gt;
A&amp;nbsp;non-repeatable&amp;nbsp;read&amp;nbsp;occurs,&amp;nbsp;when&amp;nbsp;during&amp;nbsp;the&amp;nbsp;course&amp;nbsp;of&amp;nbsp;a&amp;nbsp;transaction,&amp;nbsp;a&amp;nbsp;row&amp;nbsp;is&amp;nbsp;retrieved&lt;br&gt;
twice&amp;nbsp;and&amp;nbsp;the&amp;nbsp;values&amp;nbsp;within&amp;nbsp;the&amp;nbsp;row&amp;nbsp;differ&amp;nbsp;between&amp;nbsp;reads.&lt;br&gt;
Non-repeatable&amp;nbsp;reads&amp;nbsp;phenomenon&amp;nbsp;may&amp;nbsp;occur&amp;nbsp;in&amp;nbsp;a&amp;nbsp;lock-based&amp;nbsp;concurrency&amp;nbsp;control&amp;nbsp;method&lt;br&gt;
when&amp;nbsp;read&amp;nbsp;locks&amp;nbsp;are&amp;nbsp;not&amp;nbsp;acquired&amp;nbsp;when&amp;nbsp;performing&amp;nbsp;a&amp;nbsp;SELECT,&amp;nbsp;or&amp;nbsp;when&amp;nbsp;the&amp;nbsp;acquired&amp;nbsp;locks&lt;br&gt;
on&amp;nbsp;affected&amp;nbsp;rows&amp;nbsp;are&amp;nbsp;released&amp;nbsp;as&amp;nbsp;soon&amp;nbsp;as&amp;nbsp;the&amp;nbsp;SELECT&amp;nbsp;operation&amp;nbsp;is&amp;nbsp;performed.&lt;br&gt;
Under&amp;nbsp;the&amp;nbsp;multiversion&amp;nbsp;concurrency&amp;nbsp;control&amp;nbsp;method,&amp;nbsp;non-repeatable&amp;nbsp;reads&amp;nbsp;may&amp;nbsp;occur&lt;br&gt;
when&amp;nbsp;the&amp;nbsp;requirement&amp;nbsp;that&amp;nbsp;a&amp;nbsp;transaction&amp;nbsp;affected&amp;nbsp;by&amp;nbsp;a&amp;nbsp;commit&amp;nbsp;conflict&amp;nbsp;must&amp;nbsp;roll&amp;nbsp;back&amp;nbsp;is&amp;nbsp;relaxed.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;img&amp;nbsp;width='1100'&amp;nbsp;height='500'&amp;nbsp;alt='image'&amp;nbsp;src='/data/images/Selection_031.png'/&gt;</questionanswer>
  </question>
</questions>
