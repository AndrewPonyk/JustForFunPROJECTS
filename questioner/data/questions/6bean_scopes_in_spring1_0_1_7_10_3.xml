<?xml version="1.0" encoding="UTF-8"?>
<questions id="1_0_1_7_10_3" name="6Bean_Scopes_in_Spring" nofquestions="2" nofsubcategories="0" filename="6bean_scopes_in_spring1_0_1_7_10_3.xml">
  <question id="1_0_1_7_10_3:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;What&amp;nbsp;are&amp;nbsp;available&amp;nbsp;bean&amp;nbsp;scopes&amp;nbsp;in&amp;nbsp;spring&amp;nbsp;?&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>As&amp;nbsp;of&amp;nbsp;Spring&amp;nbsp;4.2&amp;nbsp;release,&amp;nbsp;there&amp;nbsp;are&amp;nbsp;following&amp;nbsp;bean&amp;nbsp;scopes.&amp;nbsp;&lt;br&gt;
1.&amp;nbsp;singleton&amp;nbsp;&lt;br&gt;
2.&amp;nbsp;prototype&amp;nbsp;&lt;br&gt;
3.&amp;nbsp;request&amp;nbsp;&lt;br&gt;
4.&amp;nbsp;session&amp;nbsp;&lt;br&gt;
5.&amp;nbsp;globalSession&amp;nbsp;&lt;br&gt;
6.&amp;nbsp;application&lt;br&gt;
&lt;br&gt;
-singleton&amp;nbsp;scope&amp;nbsp;is&amp;nbsp;default&amp;nbsp;scope&amp;nbsp;of&amp;nbsp;a&amp;nbsp;bean&amp;nbsp;in&amp;nbsp;spring&amp;nbsp;container.&amp;nbsp;In&amp;nbsp;this&amp;nbsp;scope,&amp;nbsp;spring&amp;nbsp;creates&amp;nbsp;only&amp;nbsp;one&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;bean&amp;nbsp;and&amp;nbsp;it&amp;nbsp;is&amp;nbsp;served&amp;nbsp;for&amp;nbsp;every&amp;nbsp;request&amp;nbsp;for&amp;nbsp;that&amp;nbsp;bean&amp;nbsp;from&amp;nbsp;cache&amp;nbsp;within&amp;nbsp;the&amp;nbsp;container&lt;br&gt;
!!!!&amp;nbsp;This&amp;nbsp;differs&amp;nbsp;from&amp;nbsp;the&amp;nbsp;Java&amp;nbsp;Singleton&amp;nbsp;Design&amp;nbsp;Pattern&amp;nbsp;which&amp;nbsp;is&amp;nbsp;based&amp;nbsp;on&amp;nbsp;per&amp;nbsp;ClassLoader.!!!!&amp;nbsp;In&amp;nbsp;spring,&amp;nbsp;singleton&amp;nbsp;is&amp;nbsp;per&amp;nbsp;container&amp;nbsp;and&amp;nbsp;per&amp;nbsp;bean.&lt;br&gt;
&lt;br&gt;
-globalSession&amp;nbsp;scoped&amp;nbsp;bean&amp;nbsp;is&amp;nbsp;used&amp;nbsp;in&amp;nbsp;portlet&amp;nbsp;based&amp;nbsp;spring&amp;nbsp;web&amp;nbsp;application.&amp;nbsp;Only&amp;nbsp;one&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;globalSession&amp;nbsp;scoped&amp;nbsp;bean&amp;nbsp;is&amp;nbsp;created&amp;nbsp;for&amp;nbsp;life&amp;nbsp;cycle&amp;nbsp;of&amp;nbsp;global&amp;nbsp;HTTP&amp;nbsp;session.&amp;nbsp;Global&amp;nbsp;HTTP&amp;nbsp;session&amp;nbsp;is&amp;nbsp;the&amp;nbsp;HTTP&amp;nbsp;session&amp;nbsp;that&amp;nbsp;is&amp;nbsp;shared&amp;nbsp;among&amp;nbsp;all&amp;nbsp;portlets&amp;nbsp;to&amp;nbsp;make&amp;nbsp;a&amp;nbsp;single&amp;nbsp;portlet&amp;nbsp;web&amp;nbsp;application.&amp;nbsp;globalSession&amp;nbsp;scoped&amp;nbsp;bean&amp;nbsp;instance&amp;nbsp;has&amp;nbsp;the&amp;nbsp;life&amp;nbsp;cycle&amp;nbsp;within&amp;nbsp;global&amp;nbsp;HTTP&amp;nbsp;session&amp;nbsp;life&amp;nbsp;cycle.&amp;nbsp;The&amp;nbsp;changes&amp;nbsp;done&amp;nbsp;in&amp;nbsp;globalSession&amp;nbsp;scoped&amp;nbsp;bean&amp;nbsp;instance&amp;nbsp;does&amp;nbsp;not&amp;nbsp;affect&amp;nbsp;to&amp;nbsp;another&amp;nbsp;parallel&amp;nbsp;global&amp;nbsp;HTTP&amp;nbsp;session.&amp;nbsp;Once&amp;nbsp;the&amp;nbsp;global&amp;nbsp;HTTP&amp;nbsp;session&amp;nbsp;is&amp;nbsp;out,&amp;nbsp;the&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;globalSession&amp;nbsp;scoped&amp;nbsp;bean&amp;nbsp;is&amp;nbsp;also&amp;nbsp;destroyed.&amp;nbsp;globalSession&amp;nbsp;scoped&amp;nbsp;bean&amp;nbsp;is&amp;nbsp;per&amp;nbsp;global&amp;nbsp;HTTP&amp;nbsp;session&amp;nbsp;and&amp;nbsp;per&amp;nbsp;bean&amp;nbsp;id.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
-&amp;nbsp;application&amp;nbsp;scope&amp;nbsp;has&amp;nbsp;been&amp;nbsp;introduced&amp;nbsp;in&amp;nbsp;Spring&amp;nbsp;4.0.&amp;nbsp;Only&amp;nbsp;one&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;bean&amp;nbsp;is&amp;nbsp;created&amp;nbsp;for&amp;nbsp;the&amp;nbsp;complete&amp;nbsp;life&amp;nbsp;cycle&amp;nbsp;of&amp;nbsp;ServletContext.&amp;nbsp;The&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;application&amp;nbsp;scoped&amp;nbsp;bean&amp;nbsp;is&amp;nbsp;stored&amp;nbsp;as&amp;nbsp;ServletContext&amp;nbsp;attribute.&amp;nbsp;application&amp;nbsp;scoped&amp;nbsp;bean&amp;nbsp;is&amp;nbsp;used&amp;nbsp;in&amp;nbsp;spring&amp;nbsp;web&amp;nbsp;application.&amp;nbsp;This&amp;nbsp;scope&amp;nbsp;is&amp;nbsp;similar&amp;nbsp;to&amp;nbsp;singleton&amp;nbsp;scope&amp;nbsp;with&amp;nbsp;one&amp;nbsp;difference&amp;nbsp;that&amp;nbsp;application&amp;nbsp;scope&amp;nbsp;is&amp;nbsp;ServletContext&amp;nbsp;specific&amp;nbsp;and&amp;nbsp;singleton&amp;nbsp;scope&amp;nbsp;is&amp;nbsp;spring&amp;nbsp;ApplicationContext&amp;nbsp;specific.&lt;br&gt;
&lt;br&gt;
http://www.concretepage.com/spring/spring-bean-scope-example-using-scope-annotation-and-xml-for-singleton-prototype-request-session-global-session-and-application-scope-with-scoped-proxy#application</questionanswer>
  </question>
  <question id="1_0_1_7_10_3:1" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;How&amp;nbsp;to&amp;nbsp;configure&amp;nbsp;bean&amp;nbsp;scope,&amp;nbsp;describe.&amp;nbsp;Provide&amp;nbsp;example.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Example&amp;nbsp;(Using&amp;nbsp;java&amp;nbsp;config&amp;nbsp;and&amp;nbsp;annotation&amp;nbsp;for&amp;nbsp;bean&amp;nbsp;definition)&lt;br&gt;
1)appContext.xml&lt;br&gt;
&lt;?xml&amp;nbsp;version="1.0"&amp;nbsp;encoding="UTF-8"?&gt;&lt;br&gt;
&lt;beans&amp;nbsp;xmlns="http://www.springframework.org/schema/beans"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xmlns:context="http://www.springframework.org/schema/context"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xsi:schemaLocation="http://www.springframework.org/schema/beans&amp;nbsp;http://www.springframework.org/schema/beans/spring-beans.xsd&amp;nbsp;http://www.springframework.org/schema/context&amp;nbsp;http://www.springframework.org/schema/context/spring-context.xsd"&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;context:annotation-config/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;context:component-scan&amp;nbsp;base-package="com.pluralsight"/&gt;&lt;br&gt;
&lt;/beans&gt;&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;Bean&amp;nbsp;classes:&lt;br&gt;
package&amp;nbsp;com.pluralsight.repository;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;interface&amp;nbsp;DaoA&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getTestString();&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;com.pluralsight.repository;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;org.springframework.stereotype.Repository;&lt;br&gt;
&lt;br&gt;
@Repository("daoARepository")&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;DaoAImpl&amp;nbsp;implements&amp;nbsp;DaoA&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getTestString(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;"test";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;com.pluralsight.service;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;interface&amp;nbsp;ServiceA&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;getTestString();&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;com.pluralsight.service;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;com.pluralsight.repository.DaoA;&lt;br&gt;
import&amp;nbsp;org.springframework.beans.factory.annotation.Autowired;&lt;br&gt;
import&amp;nbsp;org.springframework.beans.factory.annotation.Qualifier;&lt;br&gt;
import&amp;nbsp;org.springframework.context.annotation.Scope;&lt;br&gt;
import&amp;nbsp;org.springframework.stereotype.Service;&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;com.pluralsight.service;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;com.pluralsight.repository.DaoA;&lt;br&gt;
import&amp;nbsp;org.springframework.beans.factory.annotation.Autowired;&lt;br&gt;
import&amp;nbsp;org.springframework.beans.factory.annotation.Qualifier;&lt;br&gt;
import&amp;nbsp;org.springframework.context.annotation.Scope;&lt;br&gt;
import&amp;nbsp;org.springframework.stereotype.Service;&lt;br&gt;
&lt;br&gt;
@Service(value&amp;nbsp;=&amp;nbsp;"serviceA")&lt;br&gt;
@Scope("prototype")&amp;nbsp;//&amp;nbsp;new&amp;nbsp;instance&amp;nbsp;each&amp;nbsp;time&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;ServiceAImpl&amp;nbsp;implements&amp;nbsp;ServiceA&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Autowired&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Qualifier("daoASecondRealisationRepository")&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;DaoA&amp;nbsp;daoA;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getTestString(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;daoA.getTestString();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setDaoA(DaoA&amp;nbsp;daoA)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.daoA&amp;nbsp;=&amp;nbsp;daoA;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
3)&amp;nbsp;Client&amp;nbsp;class&amp;nbsp;&lt;br&gt;
import&amp;nbsp;com.pluralsight.repository.DaoA;&lt;br&gt;
import&amp;nbsp;com.pluralsight.service.ServiceA;&lt;br&gt;
import&amp;nbsp;org.springframework.context.ApplicationContext;&lt;br&gt;
import&amp;nbsp;org.springframework.context.support.ClassPathXmlApplicationContext;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;MainWithMyBeans&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ApplicationContext&amp;nbsp;applicationContext&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ClassPathXmlApplicationContext("appContext.xml");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ServiceA&amp;nbsp;serviceA&amp;nbsp;=&amp;nbsp;applicationContext.getBean("serviceA",&amp;nbsp;ServiceA.class);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(serviceA.getTestString());&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;check&amp;nbsp;Beans&amp;nbsp;scope&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ServiceA&amp;nbsp;serviceA2&amp;nbsp;=&amp;nbsp;applicationContext.getBean("serviceA",&amp;nbsp;ServiceA.class);&amp;nbsp;//&amp;nbsp;11&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(serviceA&amp;nbsp;+&amp;nbsp;";"&amp;nbsp;+&amp;nbsp;serviceA2);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
If&amp;nbsp;&lt;br&gt;
@Scope("prototype")&amp;nbsp;is&amp;nbsp;present&amp;nbsp;than&amp;nbsp;hash&amp;nbsp;codes&amp;nbsp;will&amp;nbsp;be&amp;nbsp;different&amp;nbsp;on&amp;nbsp;line&amp;nbsp;'11'&lt;br&gt;
&lt;br&gt;
------------------------------------------------------------------------------------------------&lt;br&gt;
P.S&amp;nbsp;In&amp;nbsp;XML&amp;nbsp;&amp;nbsp;configuring&amp;nbsp;scope:&lt;br&gt;
&amp;nbsp;&lt;bean&amp;nbsp;id="helloWorld"&amp;nbsp;class="com.tutorialspoint.HelloWorld"&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scope="singleton"&gt;&lt;br&gt;
---------------------------------------&lt;br&gt;
In&amp;nbsp;java&amp;nbsp;config&amp;nbsp;you&amp;nbsp;can&amp;nbsp;set&amp;nbsp;scope&amp;nbsp;in&amp;nbsp;such&amp;nbsp;way:&amp;nbsp;&lt;br&gt;
@Bean&lt;br&gt;
@Scope("prototype")&lt;br&gt;
public&amp;nbsp;DemoDao&amp;nbsp;getDao()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DemoDao&amp;nbsp;dao&amp;nbsp;=&amp;nbsp;new&amp;nbsp;DemoDao();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dao.setAddress("annoted:address");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dao.setName("annoted:name");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;dao;&lt;br&gt;
}</questionanswer>
  </question>
</questions>
