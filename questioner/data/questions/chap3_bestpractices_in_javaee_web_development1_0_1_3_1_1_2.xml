<?xml version="1.0" encoding="UTF-8"?>
<questions id="1_0_1_3_1_1_2" name="chap3_bestPractices_in_JavaEE_web_development" nofquestions="6" nofsubcategories="0" filename="chap3_bestpractices_in_javaee_web_development1_0_1_3_1_1_2.xml">
  <question id="1_0_1_3_1_1_2:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JSP&amp;nbsp;:&amp;nbsp;What&amp;nbsp;is&amp;nbsp;JSTL&amp;nbsp;?&amp;nbsp;What&amp;nbsp;are&amp;nbsp;parts&amp;nbsp;of&amp;nbsp;JSTL&amp;nbsp;(taglibs)&amp;nbsp;?&lt;br&gt;
What&amp;nbsp;JSTL&amp;nbsp;core&amp;nbsp;tags&amp;nbsp;you&amp;nbsp;know&amp;nbsp;&amp;nbsp;?&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>The&amp;nbsp;JavaServer&amp;nbsp;Pages&amp;nbsp;Standard&amp;nbsp;Tag&amp;nbsp;Library&amp;nbsp;(JSTL)&amp;nbsp;is&amp;nbsp;a&amp;nbsp;component&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Java&amp;nbsp;EE&amp;nbsp;Web&amp;nbsp;application&lt;br&gt;
development&amp;nbsp;platform.&amp;nbsp;It&amp;nbsp;extends&amp;nbsp;the&amp;nbsp;JSP&amp;nbsp;specification&amp;nbsp;by&amp;nbsp;adding&amp;nbsp;a&amp;nbsp;tag&amp;nbsp;library&amp;nbsp;of&amp;nbsp;JSP&amp;nbsp;tags&amp;nbsp;for&amp;nbsp;common&lt;br&gt;
tasks,&amp;nbsp;such&amp;nbsp;as&amp;nbsp;XML&amp;nbsp;data&amp;nbsp;processing,&amp;nbsp;conditional&amp;nbsp;execution,&amp;nbsp;database&amp;nbsp;access,&amp;nbsp;loops&amp;nbsp;and&lt;br&gt;
internationalization.&lt;br&gt;
&lt;br&gt;
JSTL&amp;nbsp;Tag&amp;nbsp;Libraries&lt;br&gt;
&lt;br&gt;
Name&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URL&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Prefix&lt;br&gt;
Core&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;http://java.sun.com/jsp/jstl/core&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c&lt;br&gt;
XML&amp;nbsp;processing&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;http://java.sun.com/jsp/jstl/xml&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br&gt;
I18N-capable&amp;nbsp;formatting&amp;nbsp;http://java.sun.com/jsp/jstl/fmt&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fmt&lt;br&gt;
Relational&amp;nbsp;database&amp;nbsp;access&amp;nbsp;http://java.sun.com/jsp/jstl/sql&amp;nbsp;sql&lt;br&gt;
Functions&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;http://java.sun.com/jsp/jstl/functions&amp;nbsp;fn&lt;br&gt;
&lt;br&gt;
Many&amp;nbsp;JSTL&amp;nbsp;actions&amp;nbsp;export&amp;nbsp;scoped&amp;nbsp;variables&amp;nbsp;that&amp;nbsp;you&amp;nbsp;can&amp;nbsp;easily&amp;nbsp;access&amp;nbsp;through&amp;nbsp;the&amp;nbsp;Expression&lt;br&gt;
Language.&amp;nbsp;As&amp;nbsp;we&amp;nbsp;saw&amp;nbsp;in&amp;nbsp;the&amp;nbsp;previous&amp;nbsp;chapter,&amp;nbsp;scoped&amp;nbsp;variables&amp;nbsp;are&amp;nbsp;objects&amp;nbsp;stored&amp;nbsp;in&amp;nbsp;one&amp;nbsp;of&amp;nbsp;the&lt;br&gt;
JSP&amp;nbsp;scopes:&amp;nbsp;application,&amp;nbsp;page,&amp;nbsp;request,&amp;nbsp;and&amp;nbsp;session.&lt;br&gt;
&lt;br&gt;
=============================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The&amp;nbsp;Core&amp;nbsp;Tag&amp;nbsp;Library&lt;br&gt;
&lt;br&gt;
&lt;c:catch&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Catches&amp;nbsp;exceptions&amp;nbsp;thrown&amp;nbsp;in&amp;nbsp;the&amp;nbsp;action’s&amp;nbsp;body&lt;br&gt;
&lt;c:choose&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Chooses&amp;nbsp;one&amp;nbsp;of&amp;nbsp;many&amp;nbsp;code&amp;nbsp;fragments&lt;br&gt;
&lt;c:forEach&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Iterates&amp;nbsp;over&amp;nbsp;a&amp;nbsp;collection&amp;nbsp;of&amp;nbsp;objects&amp;nbsp;or&amp;nbsp;iterates&amp;nbsp;a&amp;nbsp;fixed&amp;nbsp;number&amp;nbsp;of&amp;nbsp;times&lt;br&gt;
&lt;c:forTokens&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Iterates&amp;nbsp;over&amp;nbsp;tokens&amp;nbsp;in&amp;nbsp;a&amp;nbsp;string&lt;br&gt;
&lt;c:if&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Conditionally&amp;nbsp;performs&amp;nbsp;some&amp;nbsp;functionality&lt;br&gt;
&lt;c:import&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Imports&amp;nbsp;a&amp;nbsp;URL&lt;br&gt;
&lt;c:otherwise&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Specifies&amp;nbsp;default&amp;nbsp;functionality&amp;nbsp;in&amp;nbsp;a&amp;nbsp;&lt;c:choose&gt;&amp;nbsp;action&lt;br&gt;
&lt;c:out&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Sends&amp;nbsp;output&amp;nbsp;to&amp;nbsp;the&amp;nbsp;current&amp;nbsp;JspWriter&lt;br&gt;
&lt;c:param&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Specifies&amp;nbsp;a&amp;nbsp;URL&amp;nbsp;parameter&amp;nbsp;for&amp;nbsp;&lt;c:import&gt;&amp;nbsp;or&amp;nbsp;&lt;c:url&gt;&lt;br&gt;
&lt;c:redirect&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Redirects&amp;nbsp;a&amp;nbsp;response&amp;nbsp;to&amp;nbsp;a&amp;nbsp;specified&amp;nbsp;URL&lt;br&gt;
&lt;c:remove&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Removes&amp;nbsp;a&amp;nbsp;scoped&amp;nbsp;variable&lt;br&gt;
&lt;c:set&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Creates&amp;nbsp;a&amp;nbsp;scoped&amp;nbsp;variable&lt;br&gt;
&lt;c:url&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Creates&amp;nbsp;a&amp;nbsp;URL,&amp;nbsp;with&amp;nbsp;URL&amp;nbsp;rewriting&amp;nbsp;as&amp;nbsp;appropriate&lt;br&gt;
&lt;c:when&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Specifies&amp;nbsp;one&amp;nbsp;of&amp;nbsp;several&amp;nbsp;conditions&amp;nbsp;in&amp;nbsp;a&amp;nbsp;&lt;c:choose&gt;&amp;nbsp;action&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The&amp;nbsp;JSTL&amp;nbsp;core&amp;nbsp;library&amp;nbsp;can&amp;nbsp;be&amp;nbsp;divided&amp;nbsp;into&amp;nbsp;four&amp;nbsp;distinct&amp;nbsp;functional&amp;nbsp;areas:&lt;br&gt;
General-purpose&amp;nbsp;actions&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Used&amp;nbsp;to&amp;nbsp;manipulate&amp;nbsp;the&amp;nbsp;scoped&amp;nbsp;variables&amp;nbsp;(out&amp;nbsp;,&amp;nbsp;set&amp;nbsp;,&amp;nbsp;remove,&amp;nbsp;catch)&lt;br&gt;
Conditional&amp;nbsp;actions&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Used&amp;nbsp;for&amp;nbsp;conditional&amp;nbsp;processing&amp;nbsp;within&amp;nbsp;a&amp;nbsp;JSP&amp;nbsp;page&amp;nbsp;(if,&amp;nbsp;choose,&amp;nbsp;when,&amp;nbsp;otherwise)&lt;br&gt;
Iterator&amp;nbsp;actions&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Used&amp;nbsp;to&amp;nbsp;iterate&amp;nbsp;through&amp;nbsp;collections&amp;nbsp;of&amp;nbsp;objects&amp;nbsp;(forEach,&amp;nbsp;forTokens)&lt;br&gt;
URL-related&amp;nbsp;actions&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Used&amp;nbsp;for&amp;nbsp;dealing&amp;nbsp;with&amp;nbsp;URL&amp;nbsp;resources&amp;nbsp;in&amp;nbsp;a&amp;nbsp;JSP&amp;nbsp;page&amp;nbsp;(import,&amp;nbsp;redirect,&amp;nbsp;url)&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
============================================</questionanswer>
  </question>
  <question id="1_0_1_3_1_1_2:1" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JSP&amp;nbsp;:&amp;nbsp;JSTL&amp;nbsp;general&amp;nbsp;purpose&amp;nbsp;tags&amp;nbsp;(out,&amp;nbsp;set,&amp;nbsp;remove,&amp;nbsp;catch),&amp;nbsp;describe.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>c:out&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;&lt;c:out&gt;&amp;nbsp;action&amp;nbsp;evaluates&amp;nbsp;an&amp;nbsp;expression&amp;nbsp;and&amp;nbsp;displays&amp;nbsp;the&amp;nbsp;result.&amp;nbsp;It’s&lt;br&gt;
equivalent&amp;nbsp;to&amp;nbsp;the&amp;nbsp;JSP&amp;nbsp;syntax&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;%=&amp;nbsp;expression&amp;nbsp;%&gt;&lt;br&gt;
&lt;br&gt;
Here’s&amp;nbsp;the&amp;nbsp;syntax&amp;nbsp;without&amp;nbsp;a&amp;nbsp;body:&lt;br&gt;
&lt;c:out&amp;nbsp;value="value"&amp;nbsp;[escapeXml="{true|false}"][default="defaultValue"]&amp;nbsp;/&gt;&lt;br&gt;
&lt;br&gt;
Here’s&amp;nbsp;the&amp;nbsp;syntax&amp;nbsp;with&amp;nbsp;a&amp;nbsp;body:&lt;br&gt;
&lt;c:out&amp;nbsp;value="value"&amp;nbsp;[escapeXml="{true|false}"]&gt;&lt;br&gt;
default&amp;nbsp;value&lt;br&gt;
&lt;/c:out&gt;Items&amp;nbsp;in&amp;nbsp;brackets&amp;nbsp;are&amp;nbsp;optional&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c:out&amp;nbsp;Attributes&lt;br&gt;
value&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;expression&amp;nbsp;to&amp;nbsp;be&amp;nbsp;evaluated.&lt;br&gt;
escapeXml&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;boolean&amp;nbsp;This&amp;nbsp;determines&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;characters&amp;nbsp;&lt;,&gt;,&amp;,’,”&amp;nbsp;in&amp;nbsp;the&lt;br&gt;
resulting&amp;nbsp;string&amp;nbsp;should&amp;nbsp;be&amp;nbsp;converted&amp;nbsp;to&amp;nbsp;their&amp;nbsp;corresponding&lt;br&gt;
character&amp;nbsp;entity&amp;nbsp;codes.&amp;nbsp;The&amp;nbsp;default&amp;nbsp;value&amp;nbsp;is&amp;nbsp;true.&lt;br&gt;
default&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;default&amp;nbsp;value&amp;nbsp;if&amp;nbsp;the&amp;nbsp;resulting&amp;nbsp;value&amp;nbsp;is&amp;nbsp;null.&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;:&lt;br&gt;
&lt;c:out&amp;nbsp;value="${jspfilter}"&amp;nbsp;default="no&amp;nbsp;jspfilter&amp;nbsp;varibale"&gt;&lt;br&gt;
==================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c:set&amp;nbsp;and&amp;nbsp;c:remove&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;JSTL&amp;nbsp;set&amp;nbsp;tag&amp;nbsp;or&amp;nbsp;the&amp;nbsp;&lt;c:set&gt;&amp;nbsp;action&amp;nbsp;sets&amp;nbsp;the&amp;nbsp;value&amp;nbsp;of&amp;nbsp;a&amp;nbsp;scoped&amp;nbsp;variable&amp;nbsp;or&amp;nbsp;a&lt;br&gt;
property&amp;nbsp;of&amp;nbsp;a&amp;nbsp;TARGET&amp;nbsp;OBJECT.&amp;nbsp;The&amp;nbsp;&lt;c:set&gt;&amp;nbsp;action&amp;nbsp;is&amp;nbsp;a&amp;nbsp;better&amp;nbsp;alternative&amp;nbsp;to&amp;nbsp;using&lt;br&gt;
the&amp;nbsp;&lt;jsp:setProperty&gt;&amp;nbsp;JSP&amp;nbsp;action.&amp;nbsp;Unlike&amp;nbsp;&lt;jsp:setProperty&gt;,&amp;nbsp;which&amp;nbsp;allows&amp;nbsp;you&amp;nbsp;to&lt;br&gt;
set&amp;nbsp;only&amp;nbsp;the&amp;nbsp;bean&amp;nbsp;property,&amp;nbsp;the&amp;nbsp;&lt;c:set&gt;&amp;nbsp;tag&amp;nbsp;can&amp;nbsp;do&amp;nbsp;the&amp;nbsp;following:&lt;br&gt;
-&amp;nbsp;Set&amp;nbsp;bean&amp;nbsp;properties&lt;br&gt;
-&amp;nbsp;Set&amp;nbsp;Map&amp;nbsp;values&lt;br&gt;
-&amp;nbsp;Create&amp;nbsp;scoped&amp;nbsp;variables&amp;nbsp;on&amp;nbsp;the&amp;nbsp;page,&amp;nbsp;request,&amp;nbsp;session,&amp;nbsp;or&amp;nbsp;application&amp;nbsp;scope&lt;br&gt;
&lt;br&gt;
Examples&amp;nbsp;:&lt;br&gt;
&lt;!--&amp;nbsp;will&amp;nbsp;produce&amp;nbsp;code&amp;nbsp;like&amp;nbsp;books.put("1","Book&amp;nbsp;title&amp;nbsp;1")&amp;nbsp;--&gt;&amp;nbsp;&lt;br&gt;
&lt;c:set&amp;nbsp;target="${books}"&amp;nbsp;property="1"&amp;nbsp;value="Java&amp;nbsp;web&amp;nbsp;dev"&amp;nbsp;&amp;nbsp;/&gt;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Books&amp;nbsp;size:&amp;nbsp;${books.size()}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;${books["1"]}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;c:set&amp;nbsp;value="Value&amp;nbsp;in&amp;nbsp;session&amp;nbsp;scope"&amp;nbsp;var="fromSetTag"&amp;nbsp;scope="session"/&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c:remove&amp;nbsp;&lt;br&gt;
&lt;c:remove&amp;nbsp;var="toDelete"&amp;nbsp;scope="request"/&gt;&lt;br&gt;
By&amp;nbsp;default&amp;nbsp;removes&amp;nbsp;variable&amp;nbsp;from&amp;nbsp;all&amp;nbsp;scopes,&amp;nbsp;if&amp;nbsp;you&amp;nbsp;set&amp;nbsp;scope&amp;nbsp;will&amp;nbsp;remove&amp;nbsp;only&amp;nbsp;from&lt;br&gt;
this&amp;nbsp;scope.&lt;br&gt;
==================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c:catch&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;&lt;c:catch&gt;&amp;nbsp;action&amp;nbsp;provides&amp;nbsp;a&amp;nbsp;way&amp;nbsp;to&amp;nbsp;catch&amp;nbsp;java.lang.Throwableexceptions&lt;br&gt;
that&amp;nbsp;are&amp;nbsp;thrown&amp;nbsp;by&amp;nbsp;any&amp;nbsp;nested&amp;nbsp;actions.&amp;nbsp;This&amp;nbsp;action&amp;nbsp;has&amp;nbsp;a&amp;nbsp;single&amp;nbsp;var&amp;nbsp;attribute&amp;nbsp;that&lt;br&gt;
holds&amp;nbsp;a&amp;nbsp;reference&amp;nbsp;to&amp;nbsp;any&amp;nbsp;java.lang.&lt;br&gt;
Throwable&amp;nbsp;exceptions&amp;nbsp;that&amp;nbsp;occur&amp;nbsp;during&amp;nbsp;the&amp;nbsp;execution&amp;nbsp;of&amp;nbsp;any&amp;nbsp;of&amp;nbsp;the&amp;nbsp;nested&amp;nbsp;actions.&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--&amp;nbsp;Testing&amp;nbsp;c:catch&amp;nbsp;tag&amp;nbsp;--&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;c:catch&amp;nbsp;var="exc"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;%&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;throwing&amp;nbsp;exception&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Map&lt;String,String&gt;&amp;nbsp;books&amp;nbsp;=&amp;nbsp;(Map&lt;String,String&gt;)session.getAttribute("books");&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;books.get("2").toString();&amp;nbsp;//&amp;nbsp;Exception&amp;nbsp;,&amp;nbsp;only&amp;nbsp;1&amp;nbsp;element&amp;nbsp;is&amp;nbsp;present&amp;nbsp;in&amp;nbsp;books&amp;nbsp;map&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;%&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/c:catch&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;div&amp;nbsp;style="border:&amp;nbsp;2px&amp;nbsp;solid&amp;nbsp;red"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;${exc}&amp;nbsp;-&amp;nbsp;happened&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/div&gt;&lt;br&gt;
==================================&lt;br&gt;</questionanswer>
  </question>
  <question id="1_0_1_3_1_1_2:2" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JSP&amp;nbsp;:&amp;nbsp;JSTL&amp;nbsp;conditional&amp;nbsp;tags,&amp;nbsp;describe.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>c:if&lt;br&gt;
The&amp;nbsp;&lt;c:if&gt;&amp;nbsp;action&amp;nbsp;is&amp;nbsp;used&amp;nbsp;for&amp;nbsp;conditional&amp;nbsp;processing&amp;nbsp;and&amp;nbsp;evaluates&amp;nbsp;an&amp;nbsp;expression,&lt;br&gt;
displaying&amp;nbsp;its&amp;nbsp;body&amp;nbsp;content&amp;nbsp;only&amp;nbsp;if&amp;nbsp;the&amp;nbsp;expression&amp;nbsp;evaluates&amp;nbsp;to&amp;nbsp;true.&lt;br&gt;
&lt;br&gt;
c:if&amp;nbsp;Attributes:&lt;br&gt;
test&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Boolean&amp;nbsp;The&amp;nbsp;test&amp;nbsp;condition&amp;nbsp;that&amp;nbsp;determines&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;body&amp;nbsp;content&amp;nbsp;should&amp;nbsp;be&amp;nbsp;processed.&lt;br&gt;
var&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;The&amp;nbsp;name&amp;nbsp;of&amp;nbsp;the&amp;nbsp;exported&amp;nbsp;scoped&amp;nbsp;variable&amp;nbsp;for&amp;nbsp;the&amp;nbsp;resulting&amp;nbsp;value&amp;nbsp;of&amp;nbsp;the&amp;nbsp;test&lt;br&gt;
condition.&lt;br&gt;
scope&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;The&amp;nbsp;scope&amp;nbsp;for&amp;nbsp;var.&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;1&amp;nbsp;:&lt;br&gt;
&lt;c:set&amp;nbsp;var="number"&amp;nbsp;value="9"/&gt;&lt;br&gt;
&lt;c:if&amp;nbsp;test="${&amp;nbsp;number&amp;nbsp;&lt;&amp;nbsp;10}"&amp;nbsp;&gt;&lt;br&gt;
&lt;c:out&amp;nbsp;value&amp;nbsp;="number&amp;nbsp;is&amp;nbsp;less&amp;nbsp;than&amp;nbsp;10"/&gt;&lt;br&gt;
&lt;/c:if&gt;&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;2:&amp;nbsp;&lt;br&gt;
======================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c:choose&amp;nbsp;,&amp;nbsp;c:when,&amp;nbsp;c:otherwise&amp;nbsp;&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;&lt;c:choose&gt;&amp;nbsp;action&amp;nbsp;enables&amp;nbsp;you&amp;nbsp;to&amp;nbsp;handle&amp;nbsp;mutually&amp;nbsp;exclusive&amp;nbsp;conditions.&amp;nbsp;It&amp;nbsp;works&lt;br&gt;
like&amp;nbsp;a&amp;nbsp;Java&amp;nbsp;switch&amp;nbsp;statement&amp;nbsp;and&amp;nbsp;lets&amp;nbsp;you&amp;nbsp;choose&amp;nbsp;between&amp;nbsp;a&amp;nbsp;number&amp;nbsp;of&amp;nbsp;alternatives,&lt;br&gt;
using&amp;nbsp;&lt;c:when&gt;&amp;nbsp;instead&amp;nbsp;of&amp;nbsp;case&amp;nbsp;statements&amp;nbsp;and&amp;nbsp;&lt;c:otherwise&gt;&amp;nbsp;to&amp;nbsp;provide&amp;nbsp;default&amp;nbsp;action&lt;br&gt;
just&amp;nbsp;like&amp;nbsp;the&amp;nbsp;switch&amp;nbsp;statement&amp;nbsp;does&amp;nbsp;with&amp;nbsp;a&amp;nbsp;default&amp;nbsp;clause.&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;syntax&amp;nbsp;for&amp;nbsp;the&amp;nbsp;&lt;c:choose&gt;&amp;nbsp;action&amp;nbsp;is&amp;nbsp;as&amp;nbsp;follows:&lt;br&gt;
&lt;c:choose&gt;&lt;br&gt;
body&amp;nbsp;content&amp;nbsp;(&lt;c:when&gt;&amp;nbsp;and&amp;nbsp;&lt;c:otherwise&gt;)&lt;br&gt;
&lt;/c:choose&gt;&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;1&amp;nbsp;:&lt;br&gt;
&lt;br&gt;
&lt;c:set&amp;nbsp;var="number"&amp;nbsp;value="10"/&gt;&lt;br&gt;
&lt;c:choose&gt;&lt;br&gt;
&lt;c:when&amp;nbsp;test="${number&amp;nbsp;&lt;&amp;nbsp;10}"&gt;&lt;br&gt;
Number&amp;nbsp;is&amp;nbsp;less&amp;nbsp;than&amp;nbsp;10.&lt;br&gt;
&lt;/c:when&gt;&lt;br&gt;
&lt;c:when&amp;nbsp;test="${number&amp;nbsp;&gt;&amp;nbsp;10}"&gt;&lt;br&gt;
Number&amp;nbsp;is&amp;nbsp;greater&amp;nbsp;than&amp;nbsp;10.&lt;br&gt;
&lt;/c:when&gt;&lt;br&gt;
&lt;c:otherwise&gt;&lt;br&gt;
Number&amp;nbsp;is&amp;nbsp;equal&amp;nbsp;to&amp;nbsp;10&lt;br&gt;
&lt;/c:otherwise&gt;&lt;br&gt;
&lt;/c:choose&gt;&lt;br&gt;
======================================</questionanswer>
  </question>
  <question id="1_0_1_3_1_1_2:3" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JSTL&amp;nbsp;:&amp;nbsp;URL-Related&amp;nbsp;Actions&amp;nbsp;(url,&amp;nbsp;import,&amp;nbsp;...),&amp;nbsp;describe.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>&lt;br&gt;
&lt;jsp:include&amp;nbsp;page='/WEB-INF/jsp/header.jsp'/&gt;&lt;br&gt;
&lt;%--&amp;nbsp;content&amp;nbsp;-%&gt;&lt;br&gt;
&lt;jsp:include&amp;nbsp;page='/WEB-INF/jsp/footer.jsp'/&gt;&lt;br&gt;</questionanswer>
  </question>
  <question id="1_0_1_3_1_1_2:4" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JSP&amp;nbsp;:&amp;nbsp;JSTL&amp;nbsp;looping&amp;nbsp;tags,&amp;nbsp;describe.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>&lt;br&gt;
JSTL&amp;nbsp;offers&amp;nbsp;two&amp;nbsp;useful&amp;nbsp;actions&amp;nbsp;for&amp;nbsp;looping&amp;nbsp;and&amp;nbsp;iteration:&amp;nbsp;&lt;c:forEach&gt;&amp;nbsp;for&amp;nbsp;general&amp;nbsp;data&lt;br&gt;
and&amp;nbsp;&lt;c:forTokens&gt;&amp;nbsp;for&amp;nbsp;string&amp;nbsp;tokenizing.&lt;br&gt;
&lt;br&gt;
Action&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Description&lt;br&gt;
&lt;c:forEach&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Iterates&amp;nbsp;over&amp;nbsp;a&amp;nbsp;collection&amp;nbsp;of&amp;nbsp;objects&lt;br&gt;
&lt;c:forTokens&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Iterates&amp;nbsp;over&amp;nbsp;tokens,&amp;nbsp;separated&amp;nbsp;by&amp;nbsp;the&amp;nbsp;supplied&amp;nbsp;delimiters&lt;br&gt;
&lt;br&gt;
=====================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c:forEach&lt;br&gt;
Example&amp;nbsp;1&amp;nbsp;:&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;c:forEach&amp;nbsp;var="i"&amp;nbsp;begin="1"&amp;nbsp;end="3"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Item&amp;nbsp;&lt;c:out&amp;nbsp;value="${i}"/&gt;&lt;p&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/c:forEach&gt;&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;2&amp;nbsp;:&amp;nbsp;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;[]&amp;nbsp;array&amp;nbsp;=&amp;nbsp;{"1",&amp;nbsp;"abc",&amp;nbsp;"345",&amp;nbsp;"az"};&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.setAttribute("array",&amp;nbsp;array);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Map&lt;String,&amp;nbsp;String&gt;&amp;nbsp;map&amp;nbsp;=&amp;nbsp;new&amp;nbsp;HashMap&lt;String,&amp;nbsp;String&gt;();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map.put("i1",&amp;nbsp;"Value&amp;nbsp;in&amp;nbsp;map&amp;nbsp;1");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map.put("i2",&amp;nbsp;"Value&amp;nbsp;in&amp;nbsp;map&amp;nbsp;2");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map.put("i3",&amp;nbsp;"Value&amp;nbsp;in&amp;nbsp;map&amp;nbsp;3");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.setAttribute("map",&amp;nbsp;map);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div&amp;nbsp;style="border:&amp;nbsp;1px&amp;nbsp;solid&amp;nbsp;dotted;"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;c:forEach&amp;nbsp;items="${map}"&amp;nbsp;var="item"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;p&gt;&amp;nbsp;${item.key}&amp;nbsp;-&amp;nbsp;${item.value}&lt;/p&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/c:forEach&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;ul&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;c:forEach&amp;nbsp;var="item"&amp;nbsp;items="${array}"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;${item}&lt;/li&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/c:forEach&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/ul&gt;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
=====================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c:forTokens&lt;br&gt;
&lt;br&gt;
&lt;c:forTokens&amp;nbsp;items="stringOfTokens"&amp;nbsp;delims="delimiters"&lt;br&gt;
[var="varName"]&amp;nbsp;[varStatus="varStatusName"]&lt;br&gt;
[begin="begin"]&amp;nbsp;[end="end"]&amp;nbsp;[step="step"]&gt;&lt;br&gt;
.&amp;nbsp;.&amp;nbsp;.&amp;nbsp;body&amp;nbsp;.&amp;nbsp;.&amp;nbsp;.&amp;nbsp;.&amp;nbsp;.&amp;nbsp;.&amp;nbsp;.&amp;nbsp;.&amp;nbsp;.&lt;br&gt;
&lt;/c:forTokens&gt;&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;1&amp;nbsp;:&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;c:forTokens&amp;nbsp;items="Clojure,Groovy,Java,&amp;nbsp;Scala"&amp;nbsp;delims=","&amp;nbsp;var="lang"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;c:out&amp;nbsp;value="${lang}"/&gt;&lt;p&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/c:forTokens&gt;&lt;br&gt;
&lt;br&gt;</questionanswer>
  </question>
  <question id="1_0_1_3_1_1_2:5" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JSP&amp;nbsp;:&amp;nbsp;describe&amp;nbsp;main&amp;nbsp;Java&amp;nbsp;Web&amp;nbsp;patterns&amp;nbsp;(Intercepting&amp;nbsp;Filter,&amp;nbsp;Front&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Controller,&lt;br&gt;
View&amp;nbsp;Helper,&amp;nbsp;Composite&amp;nbsp;View,&amp;nbsp;Dispatcher&amp;nbsp;View,&amp;nbsp;Service&amp;nbsp;to&amp;nbsp;Worker).&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Intercepting&amp;nbsp;Filter&lt;br&gt;
A&amp;nbsp;web&amp;nbsp;application&amp;nbsp;receives&amp;nbsp;different&amp;nbsp;types&amp;nbsp;of&amp;nbsp;requests&amp;nbsp;that&amp;nbsp;require&amp;nbsp;some&amp;nbsp;kind&amp;nbsp;of&amp;nbsp;processing,&amp;nbsp;for&lt;br&gt;
example,&amp;nbsp;to&amp;nbsp;check&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;client&amp;nbsp;has&amp;nbsp;to&amp;nbsp;be&amp;nbsp;authenticated&amp;nbsp;before&amp;nbsp;proceeding&amp;nbsp;with&amp;nbsp;navigation.&amp;nbsp;The&lt;br&gt;
best&amp;nbsp;technique&amp;nbsp;to&amp;nbsp;provide&amp;nbsp;a&amp;nbsp;processing&amp;nbsp;mechanism&amp;nbsp;for&amp;nbsp;requests&amp;nbsp;is&amp;nbsp;to&amp;nbsp;use&amp;nbsp;a&amp;nbsp;processing&amp;nbsp;component&lt;br&gt;
called&amp;nbsp;a&amp;nbsp;filter.&amp;nbsp;Filters&amp;nbsp;are&amp;nbsp;used&amp;nbsp;when&amp;nbsp;you&amp;nbsp;need&amp;nbsp;to&amp;nbsp;provide&amp;nbsp;request&amp;nbsp;preprocessing&amp;nbsp;or&amp;nbsp;postprocessing&lt;br&gt;
functionalities.&amp;nbsp;The&amp;nbsp;Intercepting&amp;nbsp;Filter&amp;nbsp;pattern&amp;nbsp;comes&amp;nbsp;along&amp;nbsp;with&amp;nbsp;the&amp;nbsp;introduction&amp;nbsp;of&amp;nbsp;filters&amp;nbsp;to&amp;nbsp;the&lt;br&gt;
Servlet&amp;nbsp;specification.&amp;nbsp;This&amp;nbsp;pattern&amp;nbsp;uses&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&amp;nbsp;filters&amp;nbsp;plugged&amp;nbsp;into&amp;nbsp;the&amp;nbsp;current&amp;nbsp;application&amp;nbsp;to&lt;br&gt;
provide&amp;nbsp;services&amp;nbsp;such&amp;nbsp;as&amp;nbsp;authorization,&amp;nbsp;compression,&amp;nbsp;encryption,&amp;nbsp;and&amp;nbsp;logging.&lt;br&gt;
&lt;br&gt;
=======================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Front&amp;nbsp;Controller&lt;br&gt;
&lt;br&gt;
For&amp;nbsp;web&amp;nbsp;applications&amp;nbsp;to&amp;nbsp;be&amp;nbsp;maintainable,&amp;nbsp;all&amp;nbsp;requests&amp;nbsp;must&amp;nbsp;pass&amp;nbsp;through&amp;nbsp;a&amp;nbsp;common&amp;nbsp;central&lt;br&gt;
component.&amp;nbsp;The&amp;nbsp;lack&amp;nbsp;of&amp;nbsp;a&amp;nbsp;centralized&amp;nbsp;mechanism&amp;nbsp;leads&amp;nbsp;to&amp;nbsp;the&amp;nbsp;following&amp;nbsp;problems:&lt;br&gt;
-&amp;nbsp;There&amp;nbsp;is&amp;nbsp;no&amp;nbsp;centralized&amp;nbsp;component&amp;nbsp;for&amp;nbsp;view&amp;nbsp;management,&amp;nbsp;which&amp;nbsp;results&amp;nbsp;in&amp;nbsp;code&lt;br&gt;
redundancy&amp;nbsp;and&amp;nbsp;code&amp;nbsp;scattering&amp;nbsp;across&amp;nbsp;the&amp;nbsp;views.&lt;br&gt;
-&amp;nbsp;Views&amp;nbsp;are&amp;nbsp;often&amp;nbsp;encoded&amp;nbsp;with&amp;nbsp;view&amp;nbsp;navigation&amp;nbsp;logic.&amp;nbsp;This&amp;nbsp;results&amp;nbsp;in&amp;nbsp;intermingled&lt;br&gt;
view&amp;nbsp;content&amp;nbsp;and&amp;nbsp;view&amp;nbsp;navigation.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;Front&amp;nbsp;Controller&amp;nbsp;pattern&amp;nbsp;provides&amp;nbsp;a&amp;nbsp;centralized&amp;nbsp;access&amp;nbsp;for&amp;nbsp;the&amp;nbsp;request&amp;nbsp;handling&amp;nbsp;to&amp;nbsp;provide&lt;br&gt;
content&amp;nbsp;retrieval,&amp;nbsp;view&amp;nbsp;management,&amp;nbsp;navigation,&amp;nbsp;validation,&amp;nbsp;error&amp;nbsp;handling,&amp;nbsp;centralized&amp;nbsp;security&lt;br&gt;
control,&amp;nbsp;and&amp;nbsp;so&amp;nbsp;on.&amp;nbsp;The&amp;nbsp;Front&amp;nbsp;Controller&amp;nbsp;pattern&amp;nbsp;is&amp;nbsp;best&amp;nbsp;implemented&amp;nbsp;with&amp;nbsp;a&amp;nbsp;servlet.&amp;nbsp;Using&amp;nbsp;a&lt;br&gt;
centralized&amp;nbsp;servlet&amp;nbsp;to&amp;nbsp;handle&amp;nbsp;all&amp;nbsp;requests&amp;nbsp;and&amp;nbsp;responses&amp;nbsp;provides&amp;nbsp;the&amp;nbsp;following&amp;nbsp;advantages:&lt;br&gt;
&lt;br&gt;
-&amp;nbsp;It&amp;nbsp;provides&amp;nbsp;a&amp;nbsp;single&amp;nbsp;location&amp;nbsp;from&amp;nbsp;which&amp;nbsp;to&amp;nbsp;control&amp;nbsp;decisions&amp;nbsp;related&amp;nbsp;to&lt;br&gt;
authentication&amp;nbsp;and&amp;nbsp;authorization.&lt;br&gt;
-&amp;nbsp;All&amp;nbsp;URLs&amp;nbsp;that&amp;nbsp;the&amp;nbsp;front&amp;nbsp;controller&amp;nbsp;is&amp;nbsp;required&amp;nbsp;to&amp;nbsp;handle&amp;nbsp;can&amp;nbsp;be&amp;nbsp;mapped&amp;nbsp;to&amp;nbsp;this&lt;br&gt;
servlet.&lt;br&gt;
-&amp;nbsp;It&amp;nbsp;provides&amp;nbsp;a&amp;nbsp;centralized&amp;nbsp;access&amp;nbsp;point&amp;nbsp;to&amp;nbsp;support&amp;nbsp;the&amp;nbsp;view&amp;nbsp;management&amp;nbsp;and&lt;br&gt;
navigation.&lt;br&gt;
-&amp;nbsp;You&amp;nbsp;can&amp;nbsp;apply&amp;nbsp;common&amp;nbsp;logic&amp;nbsp;to&amp;nbsp;several&amp;nbsp;views.&lt;br&gt;
-&amp;nbsp;It&amp;nbsp;provides&amp;nbsp;the&amp;nbsp;separation&amp;nbsp;of&amp;nbsp;the&amp;nbsp;presentation&amp;nbsp;logic&amp;nbsp;from&amp;nbsp;the&amp;nbsp;navigation&amp;nbsp;and&lt;br&gt;
business&amp;nbsp;logic.&amp;nbsp;This&amp;nbsp;leads&amp;nbsp;to&amp;nbsp;loose&amp;nbsp;coupling&amp;nbsp;between&amp;nbsp;the&amp;nbsp;two.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
=======================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;View&amp;nbsp;Helper&lt;br&gt;
http://www.oracle.com/technetwork/java/viewhelper-139885.html&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;Problem&lt;br&gt;
Presentation&amp;nbsp;tier&amp;nbsp;changes&amp;nbsp;occur&amp;nbsp;often&amp;nbsp;and&amp;nbsp;are&amp;nbsp;difficult&amp;nbsp;to&amp;nbsp;develop&amp;nbsp;and&amp;nbsp;maintain&amp;nbsp;when&amp;nbsp;business&lt;br&gt;
data&amp;nbsp;access&amp;nbsp;logic&amp;nbsp;and&amp;nbsp;presentation&amp;nbsp;formatting&amp;nbsp;logic&amp;nbsp;are&amp;nbsp;interwoven.&amp;nbsp;This&amp;nbsp;makes&amp;nbsp;the&amp;nbsp;system&lt;br&gt;
less&amp;nbsp;flexible,&amp;nbsp;less&amp;nbsp;reusable,&amp;nbsp;and&amp;nbsp;generally&amp;nbsp;less&amp;nbsp;resilient&amp;nbsp;to&amp;nbsp;change.&lt;br&gt;
&lt;br&gt;
Intermingling&amp;nbsp;the&amp;nbsp;business&amp;nbsp;and&amp;nbsp;systems&amp;nbsp;logic&amp;nbsp;with&amp;nbsp;the&amp;nbsp;view&amp;nbsp;processing&amp;nbsp;reduces&amp;nbsp;modularity&amp;nbsp;and&lt;br&gt;
also&amp;nbsp;provides&amp;nbsp;a&amp;nbsp;poor&amp;nbsp;separation&amp;nbsp;of&amp;nbsp;roles&amp;nbsp;among&amp;nbsp;Web&amp;nbsp;production&amp;nbsp;and&amp;nbsp;software&amp;nbsp;development&amp;nbsp;teams.&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;Solution&lt;br&gt;
A&amp;nbsp;view&amp;nbsp;contains&amp;nbsp;formatting&amp;nbsp;code,&amp;nbsp;delegating&amp;nbsp;its&amp;nbsp;processing&amp;nbsp;responsibilities&amp;nbsp;to&amp;nbsp;its&amp;nbsp;helper&amp;nbsp;classes,&lt;br&gt;
implemented&amp;nbsp;as&amp;nbsp;JavaBeans&amp;nbsp;or&amp;nbsp;custom&amp;nbsp;tags.&amp;nbsp;Helpers&amp;nbsp;also&amp;nbsp;store&amp;nbsp;the&amp;nbsp;view's&amp;nbsp;intermediate&amp;nbsp;data&amp;nbsp;model&lt;br&gt;
and&amp;nbsp;serve&amp;nbsp;as&amp;nbsp;business&amp;nbsp;data&amp;nbsp;adapters.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
There&amp;nbsp;are&amp;nbsp;multiple&amp;nbsp;strategies&amp;nbsp;for&amp;nbsp;implementing&amp;nbsp;the&amp;nbsp;view&amp;nbsp;component.&amp;nbsp;The&amp;nbsp;JSP&amp;nbsp;View&amp;nbsp;Strategy&amp;nbsp;suggests&amp;nbsp;using&amp;nbsp;a&lt;br&gt;
JSP&amp;nbsp;as&amp;nbsp;the&amp;nbsp;view&amp;nbsp;component.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;preferred&amp;nbsp;strategy,&amp;nbsp;and&amp;nbsp;it&amp;nbsp;is&amp;nbsp;the&amp;nbsp;one&amp;nbsp;most&amp;nbsp;commonly&amp;nbsp;used.&amp;nbsp;The&lt;br&gt;
other&amp;nbsp;principal&amp;nbsp;strategy&amp;nbsp;is&amp;nbsp;the&amp;nbsp;Servlet&amp;nbsp;View&amp;nbsp;Strategy,&amp;nbsp;which&amp;nbsp;utilizes&amp;nbsp;a&amp;nbsp;servlet&amp;nbsp;as&amp;nbsp;the&amp;nbsp;view&lt;br&gt;
(see&amp;nbsp;the&amp;nbsp;section&amp;nbsp;"Strategies"&amp;nbsp;for&amp;nbsp;more&amp;nbsp;information).&lt;br&gt;
&lt;br&gt;
Encapsulating&amp;nbsp;business&amp;nbsp;logic&amp;nbsp;in&amp;nbsp;a&amp;nbsp;helper&amp;nbsp;instead&amp;nbsp;of&amp;nbsp;a&amp;nbsp;view&amp;nbsp;makes&amp;nbsp;our&amp;nbsp;application&amp;nbsp;more&amp;nbsp;modular&amp;nbsp;and&amp;nbsp;facilitates&lt;br&gt;
component&amp;nbsp;reuse.&amp;nbsp;Multiple&amp;nbsp;clients,&amp;nbsp;such&amp;nbsp;as&amp;nbsp;controllers&amp;nbsp;and&amp;nbsp;views,&amp;nbsp;may&amp;nbsp;leverage&amp;nbsp;the&amp;nbsp;same&amp;nbsp;helper&amp;nbsp;to&lt;br&gt;
retrieve&amp;nbsp;and&amp;nbsp;adapt&amp;nbsp;similar&amp;nbsp;model&amp;nbsp;state&amp;nbsp;for&amp;nbsp;presentation&amp;nbsp;in&amp;nbsp;multiple&amp;nbsp;ways.&amp;nbsp;The&amp;nbsp;only&amp;nbsp;way&amp;nbsp;to&amp;nbsp;reuse&amp;nbsp;logic&amp;nbsp;embedded&lt;br&gt;
in&amp;nbsp;a&amp;nbsp;view&amp;nbsp;is&amp;nbsp;by&amp;nbsp;copying&amp;nbsp;and&amp;nbsp;pasting&amp;nbsp;it&amp;nbsp;elsewhere.&amp;nbsp;Furthermore,&amp;nbsp;copy-and-paste&amp;nbsp;duplication&amp;nbsp;makes&amp;nbsp;a&amp;nbsp;system&lt;br&gt;
harder&amp;nbsp;to&amp;nbsp;maintain,&amp;nbsp;since&amp;nbsp;the&amp;nbsp;same&amp;nbsp;bug&amp;nbsp;potentially&amp;nbsp;needs&amp;nbsp;to&amp;nbsp;be&amp;nbsp;corrected&amp;nbsp;in&amp;nbsp;multiple&amp;nbsp;places.&lt;br&gt;
&lt;br&gt;
A&amp;nbsp;signal&amp;nbsp;that&amp;nbsp;one&amp;nbsp;may&amp;nbsp;need&amp;nbsp;to&amp;nbsp;apply&amp;nbsp;this&amp;nbsp;pattern&amp;nbsp;to&amp;nbsp;existing&amp;nbsp;code&amp;nbsp;is&amp;nbsp;when&amp;nbsp;scriptlet&amp;nbsp;code&amp;nbsp;dominates&amp;nbsp;the&amp;nbsp;JSP&amp;nbsp;view.&lt;br&gt;
The&amp;nbsp;overriding&amp;nbsp;goal&amp;nbsp;when&amp;nbsp;applying&amp;nbsp;this&amp;nbsp;pattern,&amp;nbsp;then,&amp;nbsp;is&amp;nbsp;the&amp;nbsp;partitioning&amp;nbsp;of&amp;nbsp;business&amp;nbsp;logic&amp;nbsp;outside&amp;nbsp;of&amp;nbsp;the&amp;nbsp;view.&lt;br&gt;
While&amp;nbsp;some&amp;nbsp;logic&amp;nbsp;is&amp;nbsp;best&amp;nbsp;encapsulated&amp;nbsp;within&amp;nbsp;helper&amp;nbsp;objects,&amp;nbsp;other&amp;nbsp;logic&amp;nbsp;is&amp;nbsp;better&amp;nbsp;placed&amp;nbsp;in&amp;nbsp;a&amp;nbsp;centralized&lt;br&gt;
component&amp;nbsp;that&amp;nbsp;sits&amp;nbsp;in&amp;nbsp;front&amp;nbsp;of&amp;nbsp;the&amp;nbsp;views&amp;nbsp;and&amp;nbsp;the&amp;nbsp;helpers-this&amp;nbsp;might&amp;nbsp;include&amp;nbsp;logic&amp;nbsp;that&amp;nbsp;is&amp;nbsp;common&amp;nbsp;across&lt;br&gt;
multiple&amp;nbsp;requests,&amp;nbsp;such&amp;nbsp;as&amp;nbsp;authentication&amp;nbsp;checks&amp;nbsp;or&amp;nbsp;logging&amp;nbsp;services,&amp;nbsp;for&amp;nbsp;example.&amp;nbsp;Refer&amp;nbsp;to&amp;nbsp;the&amp;nbsp;"Intercepting&amp;nbsp;Filter"&lt;br&gt;
on&amp;nbsp;page&amp;nbsp;4&amp;nbsp;and&amp;nbsp;"Front&amp;nbsp;Controller"&amp;nbsp;on&amp;nbsp;page&amp;nbsp;21&amp;nbsp;for&amp;nbsp;more&amp;nbsp;information&amp;nbsp;on&amp;nbsp;these&amp;nbsp;issues.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
Example&amp;nbsp;7.17&amp;nbsp;JSP&amp;nbsp;View&amp;nbsp;Strategy&amp;nbsp;Sample&amp;nbsp;Code&lt;br&gt;
&lt;br&gt;
&lt;jsp:useBean&amp;nbsp;id="welcomeHelper"&amp;nbsp;scope="request"&lt;br&gt;
&amp;nbsp;&amp;nbsp;class="corepatterns.util.WelcomeHelper"&amp;nbsp;/&gt;&lt;br&gt;
&lt;br&gt;
&lt;HTML&gt;&lt;br&gt;
&lt;BODY&amp;nbsp;bgcolor="FFFFFF"&gt;&lt;br&gt;
&lt;%&amp;nbsp;if&amp;nbsp;(welcomeHelper.nameExists())&lt;br&gt;
{&amp;nbsp;&lt;br&gt;
%&gt;&lt;br&gt;
&lt;center&gt;&lt;H3&gt;&amp;nbsp;Welcome&amp;nbsp;&lt;b&gt;&lt;br&gt;
&lt;jsp:getProperty&amp;nbsp;name="welcomeHelper"&amp;nbsp;property="name"&amp;nbsp;/&gt;&lt;br&gt;
&lt;/b&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&lt;/H3&gt;&lt;/center&gt;&lt;br&gt;
&lt;%&lt;br&gt;
}&lt;br&gt;
%&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&lt;br&gt;
&lt;H4&gt;&lt;center&gt;Glad&amp;nbsp;you&amp;nbsp;are&amp;nbsp;visiting&amp;nbsp;our&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;site!&lt;/center&gt;&lt;/H4&gt;&lt;br&gt;
&lt;br&gt;
&lt;/BODY&gt;&lt;br&gt;
&lt;/HTML&gt;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
=======================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Composite&amp;nbsp;View&lt;br&gt;
http://www.oracle.com/technetwork/java/compositeview-137722.html&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;web&amp;nbsp;applications,&amp;nbsp;views&amp;nbsp;are&amp;nbsp;often&amp;nbsp;built&amp;nbsp;by&amp;nbsp;embedding&amp;nbsp;formatting&amp;nbsp;code&amp;nbsp;directly&amp;nbsp;within&amp;nbsp;each&amp;nbsp;view.&lt;br&gt;
This&amp;nbsp;makes&amp;nbsp;modifying&amp;nbsp;the&amp;nbsp;layout&amp;nbsp;of&amp;nbsp;multiple&amp;nbsp;views&amp;nbsp;difficult.&amp;nbsp;The&amp;nbsp;Composite&amp;nbsp;View&amp;nbsp;pattern&amp;nbsp;allows&amp;nbsp;a&lt;br&gt;
parent&amp;nbsp;view&amp;nbsp;to&amp;nbsp;be&amp;nbsp;composed&amp;nbsp;of&amp;nbsp;subviews.&amp;nbsp;Hence,&amp;nbsp;the&amp;nbsp;overall&amp;nbsp;view&amp;nbsp;becomes&amp;nbsp;a&amp;nbsp;composition&amp;nbsp;of&amp;nbsp;smaller&lt;br&gt;
subviews&amp;nbsp;that&amp;nbsp;are&amp;nbsp;included&amp;nbsp;dynamically&amp;nbsp;in&amp;nbsp;the&amp;nbsp;overall&amp;nbsp;view.&lt;br&gt;
The&amp;nbsp;components&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Composite&amp;nbsp;View&amp;nbsp;pattern&amp;nbsp;are&amp;nbsp;as&amp;nbsp;follows:&lt;br&gt;
-&amp;nbsp;Basic&amp;nbsp;view:&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;basic&amp;nbsp;abstraction&amp;nbsp;of&amp;nbsp;the&amp;nbsp;view.&lt;br&gt;
-&amp;nbsp;Composite&amp;nbsp;view:&amp;nbsp;This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;view&amp;nbsp;that&amp;nbsp;is&amp;nbsp;composed&amp;nbsp;of&amp;nbsp;a&amp;nbsp;number&amp;nbsp;of&amp;nbsp;subviews.&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;view:&amp;nbsp;This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;simple&amp;nbsp;view&amp;nbsp;that&amp;nbsp;has&amp;nbsp;no&amp;nbsp;subviews.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
=======================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Dispatcher&amp;nbsp;View&lt;br&gt;
http://www.corej2eepatterns.com/Patterns/DispatcherView.htm&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;Dispatcher&amp;nbsp;View&amp;nbsp;design&amp;nbsp;pattern&amp;nbsp;assembles&amp;nbsp;two&amp;nbsp;patterns,&amp;nbsp;Front&amp;nbsp;Controller&amp;nbsp;and&amp;nbsp;View&amp;nbsp;Helper,&amp;nbsp;into&amp;nbsp;a&lt;br&gt;
microframework&amp;nbsp;with&amp;nbsp;a&amp;nbsp;dispatcher&amp;nbsp;component&amp;nbsp;to&amp;nbsp;utilize&amp;nbsp;the&amp;nbsp;benefits&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;each&amp;nbsp;pattern.&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;the&amp;nbsp;Dispatcher&amp;nbsp;View&amp;nbsp;pattern,&amp;nbsp;the&amp;nbsp;dispatcher&amp;nbsp;is&amp;nbsp;responsible&amp;nbsp;for&amp;nbsp;choosing&amp;nbsp;and&amp;nbsp;providing&amp;nbsp;the&lt;br&gt;
mechanism&amp;nbsp;to&amp;nbsp;statically&amp;nbsp;or&amp;nbsp;dynamically&amp;nbsp;present&amp;nbsp;the&amp;nbsp;subsequent&amp;nbsp;view&amp;nbsp;to&amp;nbsp;the&amp;nbsp;user.&lt;br&gt;
The&amp;nbsp;members&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Dispatcher&amp;nbsp;View&amp;nbsp;pattern&amp;nbsp;are&amp;nbsp;as&amp;nbsp;follows:&lt;br&gt;
-&amp;nbsp;Front&amp;nbsp;controller&lt;br&gt;
-&amp;nbsp;Dispatcher&lt;br&gt;
-&amp;nbsp;Helper&lt;br&gt;
-&amp;nbsp;View&lt;br&gt;
-&amp;nbsp;View&amp;nbsp;helper&lt;br&gt;
&lt;br&gt;
=======================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Service&amp;nbsp;to&amp;nbsp;Worker&lt;br&gt;
http://www.corej2eepatterns.com/Patterns/ServiceToWorker.htm&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;Service&amp;nbsp;to&amp;nbsp;Worker&amp;nbsp;design&amp;nbsp;pattern&amp;nbsp;assembles&amp;nbsp;two&amp;nbsp;patterns,&amp;nbsp;Front&amp;nbsp;Controller&amp;nbsp;and&amp;nbsp;View&amp;nbsp;Helper,&amp;nbsp;into&lt;br&gt;
a&amp;nbsp;microframework&amp;nbsp;with&amp;nbsp;a&amp;nbsp;dispatcher&amp;nbsp;component&amp;nbsp;to&amp;nbsp;utilize&amp;nbsp;the&amp;nbsp;benefits&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;each&amp;nbsp;pattern.&lt;br&gt;
The&amp;nbsp;Service&amp;nbsp;to&amp;nbsp;Worker&amp;nbsp;pattern&amp;nbsp;is&amp;nbsp;a&amp;nbsp;combination&amp;nbsp;of&amp;nbsp;a&amp;nbsp;dispatcher&amp;nbsp;with&amp;nbsp;views&amp;nbsp;and&amp;nbsp;helpers&amp;nbsp;to&amp;nbsp;handle&lt;br&gt;
client&amp;nbsp;requests&amp;nbsp;and&amp;nbsp;to&amp;nbsp;generate&amp;nbsp;dynamic&amp;nbsp;content&amp;nbsp;as&amp;nbsp;the&amp;nbsp;response.&amp;nbsp;The&amp;nbsp;Service&amp;nbsp;to&amp;nbsp;Worker&amp;nbsp;pattern&amp;nbsp;can&lt;br&gt;
be&amp;nbsp;used&amp;nbsp;in&amp;nbsp;an&amp;nbsp;application&amp;nbsp;when&amp;nbsp;the&amp;nbsp;application&amp;nbsp;requires&amp;nbsp;dynamic&amp;nbsp;content&amp;nbsp;generation.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Problem&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;problem&amp;nbsp;is&amp;nbsp;a&amp;nbsp;combination&amp;nbsp;of&amp;nbsp;the&amp;nbsp;problems&amp;nbsp;solved&amp;nbsp;by&amp;nbsp;the&amp;nbsp;Front&amp;nbsp;Controller&amp;nbsp;and&amp;nbsp;View&amp;nbsp;Helper&amp;nbsp;patterns&amp;nbsp;in&lt;br&gt;
the&amp;nbsp;presentation&amp;nbsp;tier.&amp;nbsp;There&amp;nbsp;is&amp;nbsp;no&amp;nbsp;centralized&amp;nbsp;component&amp;nbsp;for&amp;nbsp;managing&amp;nbsp;access&amp;nbsp;control,&amp;nbsp;content&amp;nbsp;retrieval,&lt;br&gt;
or&amp;nbsp;view&amp;nbsp;management,&amp;nbsp;and&amp;nbsp;there&amp;nbsp;is&amp;nbsp;duplicate&amp;nbsp;control&amp;nbsp;code&amp;nbsp;scattered&amp;nbsp;throughout&amp;nbsp;various&amp;nbsp;views.&lt;br&gt;
Additionally,&amp;nbsp;business&amp;nbsp;logic&amp;nbsp;and&amp;nbsp;presentation&amp;nbsp;formatting&amp;nbsp;logic&amp;nbsp;are&amp;nbsp;intermingled&amp;nbsp;within&amp;nbsp;these&amp;nbsp;views,&lt;br&gt;
making&amp;nbsp;the&amp;nbsp;system&amp;nbsp;less&amp;nbsp;flexible,&amp;nbsp;less&amp;nbsp;reusable,&amp;nbsp;and&amp;nbsp;generally&amp;nbsp;less&amp;nbsp;resilient&amp;nbsp;to&amp;nbsp;change.&lt;br&gt;
&lt;br&gt;
Intermingling&amp;nbsp;business&amp;nbsp;logic&amp;nbsp;with&amp;nbsp;view&amp;nbsp;processing&amp;nbsp;also&amp;nbsp;reduces&amp;nbsp;modularity&amp;nbsp;and&amp;nbsp;provides&amp;nbsp;a&amp;nbsp;poor&lt;br&gt;
separation&amp;nbsp;of&amp;nbsp;roles&amp;nbsp;among&amp;nbsp;Web&amp;nbsp;production&amp;nbsp;and&amp;nbsp;software&amp;nbsp;development&amp;nbsp;teams.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Solution&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
Combine&amp;nbsp;a&amp;nbsp;controller&amp;nbsp;and&amp;nbsp;dispatcher&amp;nbsp;with&amp;nbsp;views&amp;nbsp;and&amp;nbsp;helpers&amp;nbsp;(see&amp;nbsp;"Front&amp;nbsp;Controller"&amp;nbsp;on&amp;nbsp;page&amp;nbsp;172&amp;nbsp;and&lt;br&gt;
"View&amp;nbsp;Helper"&amp;nbsp;on&amp;nbsp;page&amp;nbsp;186)&amp;nbsp;to&amp;nbsp;handle&amp;nbsp;client&amp;nbsp;requests&amp;nbsp;and&amp;nbsp;prepare&amp;nbsp;a&amp;nbsp;dynamic&amp;nbsp;presentation&amp;nbsp;as&amp;nbsp;the&amp;nbsp;response.&lt;br&gt;
Controllers&amp;nbsp;delegate&amp;nbsp;content&amp;nbsp;retrieval&amp;nbsp;to&amp;nbsp;helpers,&amp;nbsp;which&amp;nbsp;manage&amp;nbsp;the&amp;nbsp;population&amp;nbsp;of&amp;nbsp;the&amp;nbsp;intermediate&amp;nbsp;model&lt;br&gt;
for&amp;nbsp;the&amp;nbsp;view.&amp;nbsp;A&amp;nbsp;dispatcher&amp;nbsp;is&amp;nbsp;responsible&amp;nbsp;for&amp;nbsp;view&amp;nbsp;management&amp;nbsp;and&amp;nbsp;navigation&amp;nbsp;and&amp;nbsp;can&amp;nbsp;be&amp;nbsp;encapsulated&amp;nbsp;either&lt;br&gt;
within&amp;nbsp;a&amp;nbsp;controller&amp;nbsp;or&amp;nbsp;a&amp;nbsp;separate&amp;nbsp;component.&lt;br&gt;
&lt;br&gt;
https://community.oracle.com/thread/1660995?start=0&amp;tstart=0&lt;br&gt;
========================================================</questionanswer>
  </question>
</questions>
