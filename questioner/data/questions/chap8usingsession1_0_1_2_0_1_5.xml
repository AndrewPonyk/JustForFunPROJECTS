<?xml version="1.0" encoding="UTF-8"?>
<questions id="1_0_1_2_0_1_5" name="chap8UsingSession" nofquestions="5" nofsubcategories="0" filename="chap8usingsession1_0_1_2_0_1_5.xml">
  <question id="1_0_1_2_0_1_5:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hibernate&amp;nbsp;transaction&amp;nbsp;isolation&amp;nbsp;levels,&amp;nbsp;describe.&lt;br&gt;
How&amp;nbsp;to&amp;nbsp;get&amp;nbsp;connection&amp;nbsp;from&amp;nbsp;session&amp;nbsp;(In&amp;nbsp;hibernate&amp;nbsp;4&amp;nbsp;it&amp;nbsp;was&amp;nbsp;changed)&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>2)&amp;nbsp;Previously&amp;nbsp;in&amp;nbsp;hibernate&amp;nbsp;3&amp;nbsp;was&amp;nbsp;a&amp;nbsp;method&amp;nbsp;session.getConnection&lt;br&gt;
Example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
session.connection().setTransactionIsolation(&lt;br&gt;
Connection.TRANSACTION_SERIALIZABLE);&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;hibernate&amp;nbsp;4&amp;nbsp;this&amp;nbsp;code&amp;nbsp;looks&amp;nbsp;like&amp;nbsp;:&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.doWork(&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new&amp;nbsp;Work()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;execute(Connection&amp;nbsp;connection)&amp;nbsp;throws&amp;nbsp;SQLException&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;connection.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);&lt;br&gt;
=====================================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Isolation&amp;nbsp;levels&amp;nbsp;in&amp;nbsp;HIBERNATE&lt;br&gt;
For&amp;nbsp;me&amp;nbsp;in&amp;nbsp;Hibernate&amp;nbsp;4&amp;nbsp;and&amp;nbsp;Mysql&amp;nbsp;5&amp;nbsp;works&amp;nbsp;isolation&amp;nbsp;levels&amp;nbsp;REPETABLE_READ&amp;nbsp;and&amp;nbsp;SERIALIZABLE&lt;br&gt;
(READCOMMITED&amp;nbsp;and&amp;nbsp;READUNCOMMITED&amp;nbsp;throws&amp;nbsp;exception&amp;nbsp;when&amp;nbsp;concurrent&amp;nbsp;transactions&amp;nbsp;save&amp;nbsp;data)&lt;br&gt;
&lt;br&gt;
---------&lt;br&gt;
Look&amp;nbsp;on&amp;nbsp;example&amp;nbsp;&lt;br&gt;
&lt;br&gt;
IN&amp;nbsp;this&amp;nbsp;example&amp;nbsp;we&amp;nbsp;have&amp;nbsp;two&amp;nbsp;transactions&amp;nbsp;in&amp;nbsp;two&amp;nbsp;threads&amp;nbsp;(using&amp;nbsp;sleep&amp;nbsp;model&amp;nbsp;slow&amp;nbsp;operations)&lt;br&gt;
&lt;br&gt;
First&amp;nbsp;transcation&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Second&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;beginTransaction(),&amp;nbsp;readAll&amp;nbsp;data&lt;br&gt;
Thread.sleep(1000)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
beginTransaction()&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
Thread.sleep(2000)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
save&amp;nbsp;3&amp;nbsp;entities,&amp;nbsp;commit&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Thread.sleep(4000)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;insert&amp;nbsp;one&amp;nbsp;row,&amp;nbsp;read&amp;nbsp;all&amp;nbsp;data&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;ch8;&lt;br&gt;
import&amp;nbsp;ch7.JPASessionUtil;&lt;br&gt;
import&amp;nbsp;org.hibernate.Session;&lt;br&gt;
import&amp;nbsp;org.hibernate.Transaction;&lt;br&gt;
import&amp;nbsp;org.hibernate.jdbc.Work;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.sql.Connection;&lt;br&gt;
import&amp;nbsp;java.sql.SQLException;&lt;br&gt;
import&amp;nbsp;java.util.List;&lt;br&gt;
&lt;br&gt;
//&amp;nbsp;Table&amp;nbsp;8-2.&amp;nbsp;JDBC&amp;nbsp;Isolation&amp;nbsp;Levels&lt;br&gt;
/*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;None&amp;nbsp;Anything&amp;nbsp;is&amp;nbsp;permitted;&amp;nbsp;the&amp;nbsp;database&amp;nbsp;or&amp;nbsp;driver&amp;nbsp;does&amp;nbsp;not&amp;nbsp;support&amp;nbsp;transactions.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1&amp;nbsp;Read&amp;nbsp;Uncommitted&amp;nbsp;Dirty,&amp;nbsp;nonrepeatable,&amp;nbsp;and&amp;nbsp;phantom&amp;nbsp;reads&amp;nbsp;are&amp;nbsp;permitted.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2&amp;nbsp;Read&amp;nbsp;Committed&amp;nbsp;Nonrepeatable&amp;nbsp;reads&amp;nbsp;and&amp;nbsp;phantom&amp;nbsp;reads&amp;nbsp;are&amp;nbsp;permitted.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4&amp;nbsp;Repeatable&amp;nbsp;Read&amp;nbsp;Phantom&amp;nbsp;reads&amp;nbsp;are&amp;nbsp;permitted.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;8&amp;nbsp;Serializable&amp;nbsp;The&amp;nbsp;rule&amp;nbsp;must&amp;nbsp;be&amp;nbsp;obeyed&amp;nbsp;absolutely.&lt;br&gt;
*/&lt;br&gt;
&lt;br&gt;
/*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-A&amp;nbsp;dirty&amp;nbsp;read&amp;nbsp;may&amp;nbsp;see&amp;nbsp;the&amp;nbsp;in-progress&amp;nbsp;changes&amp;nbsp;of&amp;nbsp;an&amp;nbsp;uncommitted&amp;nbsp;transaction.&amp;nbsp;As&amp;nbsp;with&amp;nbsp;the&amp;nbsp;isolation&amp;nbsp;example&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;discussed&amp;nbsp;in&amp;nbsp;the&amp;nbsp;preceding&amp;nbsp;sidebar,&amp;nbsp;it&amp;nbsp;could&amp;nbsp;see&amp;nbsp;the&amp;nbsp;wrong&amp;nbsp;ZIP&amp;nbsp;code&amp;nbsp;for&amp;nbsp;an&amp;nbsp;address.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&amp;nbsp;A&amp;nbsp;nonrepeatable&amp;nbsp;read&amp;nbsp;sees&amp;nbsp;different&amp;nbsp;data&amp;nbsp;for&amp;nbsp;the&amp;nbsp;same&amp;nbsp;query.&amp;nbsp;For&amp;nbsp;example,&amp;nbsp;it&amp;nbsp;might&amp;nbsp;determine&amp;nbsp;a&amp;nbsp;specific&amp;nbsp;userâ€™s&amp;nbsp;ZIP&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;code&amp;nbsp;at&amp;nbsp;the&amp;nbsp;beginning&amp;nbsp;of&amp;nbsp;the&amp;nbsp;transaction&amp;nbsp;and&amp;nbsp;again&amp;nbsp;at&amp;nbsp;the&amp;nbsp;end,&amp;nbsp;and&amp;nbsp;get&amp;nbsp;a&amp;nbsp;different&amp;nbsp;answer&amp;nbsp;both&amp;nbsp;times&amp;nbsp;without&amp;nbsp;making&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;any&amp;nbsp;updates.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&amp;nbsp;A&amp;nbsp;phantom&amp;nbsp;read&amp;nbsp;sees&amp;nbsp;different&amp;nbsp;numbers&amp;nbsp;of&amp;nbsp;rows&amp;nbsp;for&amp;nbsp;the&amp;nbsp;same&amp;nbsp;query.&amp;nbsp;For&amp;nbsp;example,&amp;nbsp;it&amp;nbsp;might&amp;nbsp;see&amp;nbsp;100&amp;nbsp;users&amp;nbsp;in&amp;nbsp;the&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;database&amp;nbsp;at&amp;nbsp;the&amp;nbsp;beginning&amp;nbsp;of&amp;nbsp;the&amp;nbsp;query&amp;nbsp;and&amp;nbsp;105&amp;nbsp;at&amp;nbsp;the&amp;nbsp;end&amp;nbsp;without&amp;nbsp;making&amp;nbsp;any&amp;nbsp;updates.&lt;br&gt;
*/&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;ch8TransactionLevelsExampleProgram&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;throws&amp;nbsp;InterruptedException&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Transaction&amp;nbsp;isolation&amp;nbsp;levels&amp;nbsp;example&amp;nbsp;:&amp;nbsp;");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Thread&amp;nbsp;t1&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Thread(new&amp;nbsp;Runnable()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;run()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;firstTransaction();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Thread&amp;nbsp;t2&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Thread(new&amp;nbsp;Runnable()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;run()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;secondTransaction();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t1.start();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t2.start();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t1.join();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t2.join();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JPASessionUtil.closeAllEntityManagerFactories();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;firstTransaction(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Session&amp;nbsp;session&amp;nbsp;=&amp;nbsp;JPASessionUtil.getSession("utiljpa");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.doWork(&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new&amp;nbsp;Work()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;execute(Connection&amp;nbsp;connection)&amp;nbsp;throws&amp;nbsp;SQLException&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;connection.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{Thread.sleep(1000);}&amp;nbsp;catch&amp;nbsp;(InterruptedException&amp;nbsp;e)&amp;nbsp;{e.printStackTrace();}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Transaction&amp;nbsp;transaction&amp;nbsp;=&amp;nbsp;session.beginTransaction();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("First&amp;nbsp;transaction&amp;nbsp;start&amp;nbsp;");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TransactionEntity&amp;nbsp;andrew&amp;nbsp;=&amp;nbsp;new&amp;nbsp;TransactionEntity();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;andrew.setName("Andrew");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;andrew.setAge(23);&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TransactionEntity&amp;nbsp;andrew18&amp;nbsp;=&amp;nbsp;new&amp;nbsp;TransactionEntity();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;andrew18.setName("Andrew");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;andrew18.setAge(18);&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TransactionEntity&amp;nbsp;andrew10&amp;nbsp;=&amp;nbsp;new&amp;nbsp;TransactionEntity();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;andrew10.setName("Andrew10");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;andrew10.setAge(10);&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{Thread.sleep(2000);}&amp;nbsp;catch&amp;nbsp;(InterruptedException&amp;nbsp;e)&amp;nbsp;{e.printStackTrace();}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.save(andrew);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.save(andrew18);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.save(andrew10);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.commit();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("First&amp;nbsp;transaction&amp;nbsp;commit");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;secondTransaction(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Session&amp;nbsp;session&amp;nbsp;=&amp;nbsp;JPASessionUtil.getSession("utiljpa");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.doWork(&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new&amp;nbsp;Work()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;execute(Connection&amp;nbsp;connection)&amp;nbsp;throws&amp;nbsp;SQLException&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;connection.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Transaction&amp;nbsp;transaction&amp;nbsp;=&amp;nbsp;session.beginTransaction();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Second&amp;nbsp;transaction&amp;nbsp;start"&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&lt;TransactionEntity&gt;&amp;nbsp;people0&amp;nbsp;=&amp;nbsp;session.createQuery("from&amp;nbsp;TransactionEntity&amp;nbsp;p&amp;nbsp;where&amp;nbsp;p.name='Andrew'").list();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Count&amp;nbsp;on&amp;nbsp;start&amp;nbsp;=&amp;nbsp;"&amp;nbsp;+&amp;nbsp;people0.size());&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{Thread.sleep(4000);}&amp;nbsp;catch&amp;nbsp;(InterruptedException&amp;nbsp;e)&amp;nbsp;{e.printStackTrace();}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&lt;TransactionEntity&gt;&amp;nbsp;people&amp;nbsp;=&amp;nbsp;session.createQuery("from&amp;nbsp;TransactionEntity&amp;nbsp;p&amp;nbsp;where&amp;nbsp;p.name='Andrew'").list();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Count&amp;nbsp;on&amp;nbsp;the&amp;nbsp;end&amp;nbsp;=&amp;nbsp;"&amp;nbsp;+&amp;nbsp;people.size());&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TransactionEntity&amp;nbsp;john&amp;nbsp;=&amp;nbsp;new&amp;nbsp;TransactionEntity();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;john.setName("John");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.save(john);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.commit();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Second&amp;nbsp;transaction&amp;nbsp;commit");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
USING&amp;nbsp;Connection.TRANSACTION_REPEATABLE_READ&amp;nbsp;OUTPUT&amp;nbsp;IS&amp;nbsp;:&amp;nbsp;&lt;br&gt;
Second&amp;nbsp;transaction&amp;nbsp;start&lt;br&gt;
Hibernate:&amp;nbsp;select&amp;nbsp;transactio0_.id&amp;nbsp;as&amp;nbsp;id1_19_,&amp;nbsp;transactio0_.age&amp;nbsp;as&amp;nbsp;age2_19_,&amp;nbsp;transactio0_.name&amp;nbsp;as&amp;nbsp;name3_19_&amp;nbsp;from&amp;nbsp;TransactionEntity&amp;nbsp;transactio0_&amp;nbsp;where&amp;nbsp;transactio0_.name='Andrew'&lt;br&gt;
Count&amp;nbsp;on&amp;nbsp;start&amp;nbsp;=&amp;nbsp;0&lt;br&gt;
First&amp;nbsp;transaction&amp;nbsp;start&amp;nbsp;&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;TransactionEntity&amp;nbsp;(age,&amp;nbsp;name)&amp;nbsp;values&amp;nbsp;(?,&amp;nbsp;?)&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;TransactionEntity&amp;nbsp;(age,&amp;nbsp;name)&amp;nbsp;values&amp;nbsp;(?,&amp;nbsp;?)&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;TransactionEntity&amp;nbsp;(age,&amp;nbsp;name)&amp;nbsp;values&amp;nbsp;(?,&amp;nbsp;?)&lt;br&gt;
Hibernate:&amp;nbsp;select&amp;nbsp;transactio0_.id&amp;nbsp;as&amp;nbsp;id1_19_,&amp;nbsp;transactio0_.age&amp;nbsp;as&amp;nbsp;age2_19_,&amp;nbsp;transactio0_.name&amp;nbsp;as&amp;nbsp;name3_19_&amp;nbsp;from&amp;nbsp;TransactionEntity&amp;nbsp;transactio0_&amp;nbsp;where&amp;nbsp;transactio0_.name='Andrew'&lt;br&gt;
Count&amp;nbsp;on&amp;nbsp;the&amp;nbsp;end&amp;nbsp;=&amp;nbsp;0&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;TransactionEntity&amp;nbsp;(age,&amp;nbsp;name)&amp;nbsp;values&amp;nbsp;(?,&amp;nbsp;?)&lt;br&gt;
First&amp;nbsp;transaction&amp;nbsp;commit&lt;br&gt;
Second&amp;nbsp;transaction&amp;nbsp;commit&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
--------------&lt;br&gt;
USING&amp;nbsp;Connection.TRANSACTION_SERIALIZABLE&amp;nbsp;output&amp;nbsp;is&amp;nbsp;:&amp;nbsp;&lt;br&gt;
Second&amp;nbsp;transaction&amp;nbsp;start&lt;br&gt;
Hibernate:&amp;nbsp;select&amp;nbsp;transactio0_.id&amp;nbsp;as&amp;nbsp;id1_19_,&amp;nbsp;transactio0_.age&amp;nbsp;as&amp;nbsp;age2_19_,&amp;nbsp;transactio0_.name&amp;nbsp;as&amp;nbsp;name3_19_&amp;nbsp;from&amp;nbsp;TransactionEntity&amp;nbsp;transactio0_&amp;nbsp;where&amp;nbsp;transactio0_.name='Andrew'&lt;br&gt;
Count&amp;nbsp;on&amp;nbsp;start&amp;nbsp;=&amp;nbsp;0&lt;br&gt;
First&amp;nbsp;transaction&amp;nbsp;start&amp;nbsp;&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;TransactionEntity&amp;nbsp;(age,&amp;nbsp;name)&amp;nbsp;values&amp;nbsp;(?,&amp;nbsp;?)&lt;br&gt;
Hibernate:&amp;nbsp;select&amp;nbsp;transactio0_.id&amp;nbsp;as&amp;nbsp;id1_19_,&amp;nbsp;transactio0_.age&amp;nbsp;as&amp;nbsp;age2_19_,&amp;nbsp;transactio0_.name&amp;nbsp;as&amp;nbsp;name3_19_&amp;nbsp;from&amp;nbsp;TransactionEntity&amp;nbsp;transactio0_&amp;nbsp;where&amp;nbsp;transactio0_.name='Andrew'&lt;br&gt;
Count&amp;nbsp;on&amp;nbsp;the&amp;nbsp;end&amp;nbsp;=&amp;nbsp;0&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;TransactionEntity&amp;nbsp;(age,&amp;nbsp;name)&amp;nbsp;values&amp;nbsp;(?,&amp;nbsp;?)&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;TransactionEntity&amp;nbsp;(age,&amp;nbsp;name)&amp;nbsp;values&amp;nbsp;(?,&amp;nbsp;?)&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;TransactionEntity&amp;nbsp;(age,&amp;nbsp;name)&amp;nbsp;values&amp;nbsp;(?,&amp;nbsp;?)&lt;br&gt;
Second&amp;nbsp;transaction&amp;nbsp;commit&lt;br&gt;
First&amp;nbsp;transaction&amp;nbsp;commit&lt;br&gt;
&lt;br&gt;
Using&amp;nbsp;serializable&amp;nbsp;first&amp;nbsp;transaction&amp;nbsp;can&amp;nbsp;save&amp;nbsp;3&amp;nbsp;entities&amp;nbsp;only&amp;nbsp;after&amp;nbsp;second&amp;nbsp;transcation&amp;nbsp;performs&amp;nbsp;commit&amp;nbsp;!!!&lt;br&gt;
-------------------</questionanswer>
  </question>
  <question id="1_0_1_2_0_1_5:1" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hibernate&amp;nbsp;Session&amp;nbsp;object,&amp;nbsp;main&amp;nbsp;methods,&amp;nbsp;describe.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>https://docs.jboss.org/hibernate/core/4.0/javadocs/org/hibernate/Session.html&lt;br&gt;
=================================================&lt;br&gt;
public&amp;nbsp;interface&amp;nbsp;Session&lt;br&gt;
extends&amp;nbsp;SharedSessionContract&lt;br&gt;
The&amp;nbsp;main&amp;nbsp;runtime&amp;nbsp;interface&amp;nbsp;between&amp;nbsp;a&amp;nbsp;Java&amp;nbsp;application&amp;nbsp;and&amp;nbsp;Hibernate.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;central&amp;nbsp;API&amp;nbsp;class&amp;nbsp;abstracting&amp;nbsp;the&amp;nbsp;notion&amp;nbsp;of&amp;nbsp;a&amp;nbsp;persistence&amp;nbsp;service.&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;lifecycle&amp;nbsp;of&amp;nbsp;a&amp;nbsp;Session&amp;nbsp;is&amp;nbsp;bounded&amp;nbsp;by&amp;nbsp;the&amp;nbsp;beginning&amp;nbsp;and&amp;nbsp;end&amp;nbsp;of&amp;nbsp;a&amp;nbsp;logical&amp;nbsp;transaction.&amp;nbsp;(Long&amp;nbsp;transactions&amp;nbsp;might&amp;nbsp;span&amp;nbsp;several&amp;nbsp;database&amp;nbsp;transactions.)&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;main&amp;nbsp;function&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Session&amp;nbsp;is&amp;nbsp;to&amp;nbsp;offer&amp;nbsp;create,&amp;nbsp;read&amp;nbsp;and&amp;nbsp;delete&amp;nbsp;operations&amp;nbsp;for&amp;nbsp;instances&amp;nbsp;of&amp;nbsp;mapped&amp;nbsp;entity&amp;nbsp;classes.&amp;nbsp;Instances&amp;nbsp;may&amp;nbsp;exist&amp;nbsp;in&amp;nbsp;one&amp;nbsp;of&amp;nbsp;three&amp;nbsp;states:&lt;br&gt;
&lt;br&gt;
transient:&amp;nbsp;never&amp;nbsp;persistent,&amp;nbsp;not&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;any&amp;nbsp;Session&lt;br&gt;
persistent:&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;a&amp;nbsp;unique&amp;nbsp;Session&lt;br&gt;
detached:&amp;nbsp;previously&amp;nbsp;persistent,&amp;nbsp;not&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;any&amp;nbsp;Session&lt;br&gt;
&lt;br&gt;
Transient&amp;nbsp;instances&amp;nbsp;may&amp;nbsp;be&amp;nbsp;made&amp;nbsp;persistent&amp;nbsp;by&amp;nbsp;calling&amp;nbsp;save(),&amp;nbsp;persist()&amp;nbsp;or&amp;nbsp;saveOrUpdate().&amp;nbsp;Persistent&amp;nbsp;instances&amp;nbsp;may&amp;nbsp;be&amp;nbsp;made&lt;br&gt;
transient&amp;nbsp;by&amp;nbsp;calling&amp;nbsp;delete().&amp;nbsp;Any&amp;nbsp;instance&amp;nbsp;returned&amp;nbsp;by&amp;nbsp;a&amp;nbsp;get()&amp;nbsp;or&amp;nbsp;load()&amp;nbsp;method&amp;nbsp;is&amp;nbsp;persistent.&lt;br&gt;
Detached&amp;nbsp;instances&amp;nbsp;may&amp;nbsp;be&amp;nbsp;made&amp;nbsp;persistent&amp;nbsp;by&amp;nbsp;calling&amp;nbsp;update(),&amp;nbsp;saveOrUpdate(),&amp;nbsp;lock()&amp;nbsp;or&amp;nbsp;replicate().&amp;nbsp;The&amp;nbsp;state&amp;nbsp;of&amp;nbsp;a&amp;nbsp;transient&lt;br&gt;
or&amp;nbsp;detached&amp;nbsp;instance&amp;nbsp;may&amp;nbsp;also&amp;nbsp;be&amp;nbsp;made&amp;nbsp;persistent&amp;nbsp;as&amp;nbsp;a&amp;nbsp;new&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;by&amp;nbsp;calling&amp;nbsp;merge().&lt;br&gt;
&lt;br&gt;
save()&amp;nbsp;and&amp;nbsp;persist()&amp;nbsp;result&amp;nbsp;in&amp;nbsp;an&amp;nbsp;SQL&amp;nbsp;INSERT,&amp;nbsp;delete()&amp;nbsp;in&amp;nbsp;an&amp;nbsp;SQL&amp;nbsp;DELETE&amp;nbsp;and&amp;nbsp;update()&amp;nbsp;or&amp;nbsp;merge()&amp;nbsp;in&amp;nbsp;an&amp;nbsp;SQL&amp;nbsp;UPDATE.&amp;nbsp;Changes&amp;nbsp;to&amp;nbsp;persistent&amp;nbsp;instances&amp;nbsp;are&amp;nbsp;detected&amp;nbsp;at&amp;nbsp;flush&amp;nbsp;time&amp;nbsp;and&amp;nbsp;also&amp;nbsp;result&amp;nbsp;in&amp;nbsp;an&amp;nbsp;SQL&amp;nbsp;UPDATE.&amp;nbsp;saveOrUpdate()&amp;nbsp;and&amp;nbsp;replicate()&amp;nbsp;result&amp;nbsp;in&amp;nbsp;either&amp;nbsp;an&amp;nbsp;INSERT&amp;nbsp;or&amp;nbsp;an&amp;nbsp;UPDATE.&lt;br&gt;
&lt;br&gt;
It&amp;nbsp;is&amp;nbsp;not&amp;nbsp;intended&amp;nbsp;that&amp;nbsp;implementors&amp;nbsp;be&amp;nbsp;threadsafe.&amp;nbsp;Instead&amp;nbsp;each&amp;nbsp;thread/transaction&amp;nbsp;should&amp;nbsp;obtain&amp;nbsp;its&amp;nbsp;own&amp;nbsp;instance&amp;nbsp;from&amp;nbsp;a&amp;nbsp;SessionFactory.&lt;br&gt;
&lt;br&gt;
A&amp;nbsp;Session&amp;nbsp;instance&amp;nbsp;is&amp;nbsp;serializable&amp;nbsp;if&amp;nbsp;its&amp;nbsp;persistent&amp;nbsp;classes&amp;nbsp;are&amp;nbsp;serializable.&lt;br&gt;
&lt;br&gt;
A&amp;nbsp;typical&amp;nbsp;transaction&amp;nbsp;should&amp;nbsp;use&amp;nbsp;the&amp;nbsp;following&amp;nbsp;idiom:&lt;br&gt;
&lt;br&gt;
&amp;nbsp;Session&amp;nbsp;sess&amp;nbsp;=&amp;nbsp;factory.openSession();&lt;br&gt;
&amp;nbsp;Transaction&amp;nbsp;tx;&lt;br&gt;
&amp;nbsp;try&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tx&amp;nbsp;=&amp;nbsp;sess.beginTransaction();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//do&amp;nbsp;some&amp;nbsp;work&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tx.commit();&lt;br&gt;
&amp;nbsp;}&lt;br&gt;
&amp;nbsp;catch&amp;nbsp;(Exception&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(tx!=null)&amp;nbsp;tx.rollback();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;e;&lt;br&gt;
&amp;nbsp;}&lt;br&gt;
&amp;nbsp;finally&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sess.close();&lt;br&gt;
&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&lt;br&gt;
&lt;br&gt;
If&amp;nbsp;the&amp;nbsp;Session&amp;nbsp;throws&amp;nbsp;an&amp;nbsp;exception,&amp;nbsp;the&amp;nbsp;transaction&amp;nbsp;must&amp;nbsp;be&amp;nbsp;rolled&amp;nbsp;back&amp;nbsp;and&amp;nbsp;the&amp;nbsp;session&amp;nbsp;discarded.&lt;br&gt;
The&amp;nbsp;internal&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Session&amp;nbsp;might&amp;nbsp;not&amp;nbsp;be&amp;nbsp;consistent&amp;nbsp;with&amp;nbsp;the&amp;nbsp;database&amp;nbsp;after&amp;nbsp;the&amp;nbsp;exception&amp;nbsp;occurs.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Method&amp;nbsp;Summary&lt;br&gt;
&amp;nbsp;Session.LockRequest&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buildLockRequest(LockOptions&amp;nbsp;lockOptions)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Build&amp;nbsp;a&amp;nbsp;LockRequest&amp;nbsp;that&amp;nbsp;specifies&amp;nbsp;the&amp;nbsp;LockMode,&amp;nbsp;pessimistic&amp;nbsp;lock&amp;nbsp;timeout&amp;nbsp;and&amp;nbsp;lock&amp;nbsp;scope.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cancelQuery()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Cancel&amp;nbsp;the&amp;nbsp;execution&amp;nbsp;of&amp;nbsp;the&amp;nbsp;current&amp;nbsp;query.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;clear()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Completely&amp;nbsp;clear&amp;nbsp;the&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;Connection&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;close()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;End&amp;nbsp;the&amp;nbsp;session&amp;nbsp;by&amp;nbsp;releasing&amp;nbsp;the&amp;nbsp;JDBC&amp;nbsp;connection&amp;nbsp;and&amp;nbsp;cleaning&amp;nbsp;up.&lt;br&gt;
&amp;nbsp;boolean&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;contains(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Check&amp;nbsp;if&amp;nbsp;this&amp;nbsp;instance&amp;nbsp;is&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;this&amp;nbsp;Session.&lt;br&gt;
&amp;nbsp;Query&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;createFilter(Object&amp;nbsp;collection,&amp;nbsp;String&amp;nbsp;queryString)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;Query&amp;nbsp;instance&amp;nbsp;for&amp;nbsp;the&amp;nbsp;given&amp;nbsp;collection&amp;nbsp;and&amp;nbsp;filter&amp;nbsp;string.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;delete(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Remove&amp;nbsp;a&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;from&amp;nbsp;the&amp;nbsp;datastore.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;delete(String&amp;nbsp;entityName,&amp;nbsp;Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Remove&amp;nbsp;a&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;from&amp;nbsp;the&amp;nbsp;datastore.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;disableFetchProfile(String&amp;nbsp;name)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Disable&amp;nbsp;a&amp;nbsp;particular&amp;nbsp;fetch&amp;nbsp;profile&amp;nbsp;on&amp;nbsp;this&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;disableFilter(String&amp;nbsp;filterName)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Disable&amp;nbsp;the&amp;nbsp;named&amp;nbsp;filter&amp;nbsp;for&amp;nbsp;the&amp;nbsp;current&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;Connection&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;disconnect()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Disconnect&amp;nbsp;the&amp;nbsp;session&amp;nbsp;from&amp;nbsp;its&amp;nbsp;underlying&amp;nbsp;JDBC&amp;nbsp;connection.&lt;br&gt;
&lt;T&gt;&amp;nbsp;T&lt;br&gt;
doReturningWork(ReturningWork&lt;T&gt;&amp;nbsp;work)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Controller&amp;nbsp;for&amp;nbsp;allowing&amp;nbsp;users&amp;nbsp;to&amp;nbsp;perform&amp;nbsp;JDBC&amp;nbsp;related&amp;nbsp;work&amp;nbsp;using&amp;nbsp;the&amp;nbsp;Connection&amp;nbsp;managed&amp;nbsp;by&amp;nbsp;this&amp;nbsp;Session,&amp;nbsp;returning&amp;nbsp;the&amp;nbsp;result&amp;nbsp;from&amp;nbsp;calling&amp;nbsp;work.execute()&amp;nbsp;(ReturningWork.execute(Connection)/&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;doWork(Work&amp;nbsp;work)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Controller&amp;nbsp;for&amp;nbsp;allowing&amp;nbsp;users&amp;nbsp;to&amp;nbsp;perform&amp;nbsp;JDBC&amp;nbsp;related&amp;nbsp;work&amp;nbsp;using&amp;nbsp;the&amp;nbsp;Connection&amp;nbsp;managed&amp;nbsp;by&amp;nbsp;this&amp;nbsp;Session.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;enableFetchProfile(String&amp;nbsp;name)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Enable&amp;nbsp;a&amp;nbsp;particular&amp;nbsp;fetch&amp;nbsp;profile&amp;nbsp;on&amp;nbsp;this&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;Filter&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;enableFilter(String&amp;nbsp;filterName)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Enable&amp;nbsp;the&amp;nbsp;named&amp;nbsp;filter&amp;nbsp;for&amp;nbsp;this&amp;nbsp;current&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;evict(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Remove&amp;nbsp;this&amp;nbsp;instance&amp;nbsp;from&amp;nbsp;the&amp;nbsp;session&amp;nbsp;cache.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;flush()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Force&amp;nbsp;this&amp;nbsp;session&amp;nbsp;to&amp;nbsp;flush.&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;get(Class&amp;nbsp;clazz,&amp;nbsp;Serializable&amp;nbsp;id)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Return&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;entity&amp;nbsp;class&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;identifier,&amp;nbsp;or&amp;nbsp;null&amp;nbsp;if&amp;nbsp;there&amp;nbsp;is&amp;nbsp;no&amp;nbsp;such&amp;nbsp;persistent&amp;nbsp;instance.&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;get(Class&amp;nbsp;clazz,&amp;nbsp;Serializable&amp;nbsp;id,&amp;nbsp;LockMode&amp;nbsp;lockMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Deprecated.&amp;nbsp;LockMode&amp;nbsp;parameter&amp;nbsp;should&amp;nbsp;be&amp;nbsp;replaced&amp;nbsp;with&amp;nbsp;LockOptions&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;get(Class&amp;nbsp;clazz,&amp;nbsp;Serializable&amp;nbsp;id,&amp;nbsp;LockOptions&amp;nbsp;lockOptions)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Return&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;entity&amp;nbsp;class&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;identifier,&amp;nbsp;or&amp;nbsp;null&amp;nbsp;if&amp;nbsp;there&amp;nbsp;is&amp;nbsp;no&amp;nbsp;such&amp;nbsp;persistent&amp;nbsp;instance.&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;get(String&amp;nbsp;entityName,&amp;nbsp;Serializable&amp;nbsp;id)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Return&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;named&amp;nbsp;entity&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;identifier,&amp;nbsp;or&amp;nbsp;null&amp;nbsp;if&amp;nbsp;there&amp;nbsp;is&amp;nbsp;no&amp;nbsp;such&amp;nbsp;persistent&amp;nbsp;instance.&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;get(String&amp;nbsp;entityName,&amp;nbsp;Serializable&amp;nbsp;id,&amp;nbsp;LockMode&amp;nbsp;lockMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Deprecated.&amp;nbsp;LockMode&amp;nbsp;parameter&amp;nbsp;should&amp;nbsp;be&amp;nbsp;replaced&amp;nbsp;with&amp;nbsp;LockOptions&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;get(String&amp;nbsp;entityName,&amp;nbsp;Serializable&amp;nbsp;id,&amp;nbsp;LockOptions&amp;nbsp;lockOptions)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Return&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;entity&amp;nbsp;class&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;identifier,&amp;nbsp;or&amp;nbsp;null&amp;nbsp;if&amp;nbsp;there&amp;nbsp;is&amp;nbsp;no&amp;nbsp;such&amp;nbsp;persistent&amp;nbsp;instance.&lt;br&gt;
&amp;nbsp;CacheMode&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getCacheMode()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;current&amp;nbsp;cache&amp;nbsp;mode.&lt;br&gt;
&amp;nbsp;LockMode&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getCurrentLockMode(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Determine&amp;nbsp;the&amp;nbsp;current&amp;nbsp;lock&amp;nbsp;mode&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;object.&lt;br&gt;
&amp;nbsp;Filter&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getEnabledFilter(String&amp;nbsp;filterName)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Retrieve&amp;nbsp;a&amp;nbsp;currently&amp;nbsp;enabled&amp;nbsp;filter&amp;nbsp;by&amp;nbsp;name.&lt;br&gt;
&amp;nbsp;String&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getEntityName(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Return&amp;nbsp;the&amp;nbsp;entity&amp;nbsp;name&amp;nbsp;for&amp;nbsp;a&amp;nbsp;persistent&amp;nbsp;entity&lt;br&gt;
&amp;nbsp;FlushMode&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getFlushMode()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;current&amp;nbsp;flush&amp;nbsp;mode&amp;nbsp;for&amp;nbsp;this&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;Serializable&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getIdentifier(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Return&amp;nbsp;the&amp;nbsp;identifier&amp;nbsp;value&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;entity&amp;nbsp;as&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;this&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;LobHelper&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getLobHelper()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Retrieve&amp;nbsp;this&amp;nbsp;session's&amp;nbsp;helper/delegate&amp;nbsp;for&amp;nbsp;creating&amp;nbsp;LOB&amp;nbsp;instances.&lt;br&gt;
&amp;nbsp;SessionFactory&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getSessionFactory()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;session&amp;nbsp;factory&amp;nbsp;which&amp;nbsp;created&amp;nbsp;this&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;SessionStatistics&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getStatistics()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;statistics&amp;nbsp;for&amp;nbsp;this&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;TypeHelper&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getTypeHelper()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Convenience&amp;nbsp;access&amp;nbsp;to&amp;nbsp;the&amp;nbsp;TypeHelper&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;this&amp;nbsp;session's&amp;nbsp;SessionFactory.&lt;br&gt;
&amp;nbsp;boolean&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;isConnected()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Check&amp;nbsp;if&amp;nbsp;the&amp;nbsp;session&amp;nbsp;is&amp;nbsp;currently&amp;nbsp;connected.&lt;br&gt;
&amp;nbsp;boolean&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;isDefaultReadOnly()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Will&amp;nbsp;entities&amp;nbsp;and&amp;nbsp;proxies&amp;nbsp;that&amp;nbsp;are&amp;nbsp;loaded&amp;nbsp;into&amp;nbsp;this&amp;nbsp;session&amp;nbsp;be&amp;nbsp;made&amp;nbsp;read-only&amp;nbsp;by&amp;nbsp;default?&amp;nbsp;To&amp;nbsp;determine&amp;nbsp;the&amp;nbsp;read-only/modifiable&amp;nbsp;setting&amp;nbsp;for&amp;nbsp;a&amp;nbsp;particular&amp;nbsp;entity&amp;nbsp;or&amp;nbsp;proxy:&lt;br&gt;
&amp;nbsp;boolean&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;isDirty()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Does&amp;nbsp;this&amp;nbsp;session&amp;nbsp;contain&amp;nbsp;any&amp;nbsp;changes&amp;nbsp;which&amp;nbsp;must&amp;nbsp;be&amp;nbsp;synchronized&amp;nbsp;with&amp;nbsp;the&amp;nbsp;database?&amp;nbsp;In&amp;nbsp;other&amp;nbsp;words,&amp;nbsp;would&amp;nbsp;any&amp;nbsp;DML&amp;nbsp;operations&amp;nbsp;be&amp;nbsp;executed&amp;nbsp;if&amp;nbsp;we&amp;nbsp;flushed&amp;nbsp;this&amp;nbsp;session?&lt;br&gt;
&amp;nbsp;boolean&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;isFetchProfileEnabled(String&amp;nbsp;name)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Is&amp;nbsp;a&amp;nbsp;particular&amp;nbsp;fetch&amp;nbsp;profile&amp;nbsp;enabled&amp;nbsp;on&amp;nbsp;this&amp;nbsp;session?&lt;br&gt;
&amp;nbsp;boolean&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;isOpen()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Check&amp;nbsp;if&amp;nbsp;the&amp;nbsp;session&amp;nbsp;is&amp;nbsp;still&amp;nbsp;open.&lt;br&gt;
&amp;nbsp;boolean&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;isReadOnly(Object&amp;nbsp;entityOrProxy)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Is&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;entity&amp;nbsp;or&amp;nbsp;proxy&amp;nbsp;read-only?&amp;nbsp;To&amp;nbsp;get&amp;nbsp;the&amp;nbsp;default&amp;nbsp;read-only/modifiable&amp;nbsp;setting&amp;nbsp;used&amp;nbsp;for&amp;nbsp;entities&amp;nbsp;and&amp;nbsp;proxies&amp;nbsp;that&amp;nbsp;are&amp;nbsp;loaded&amp;nbsp;into&amp;nbsp;the&amp;nbsp;session:&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;load(Class&amp;nbsp;theClass,&amp;nbsp;Serializable&amp;nbsp;id)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Return&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;entity&amp;nbsp;class&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;identifier,&amp;nbsp;assuming&amp;nbsp;that&amp;nbsp;the&amp;nbsp;instance&amp;nbsp;exists.&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;load(Class&amp;nbsp;theClass,&amp;nbsp;Serializable&amp;nbsp;id,&amp;nbsp;LockMode&amp;nbsp;lockMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Deprecated.&amp;nbsp;LockMode&amp;nbsp;parameter&amp;nbsp;should&amp;nbsp;be&amp;nbsp;replaced&amp;nbsp;with&amp;nbsp;LockOptions&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;load(Class&amp;nbsp;theClass,&amp;nbsp;Serializable&amp;nbsp;id,&amp;nbsp;LockOptions&amp;nbsp;lockOptions)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Return&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;entity&amp;nbsp;class&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;identifier,&amp;nbsp;obtaining&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;lock&amp;nbsp;mode,&amp;nbsp;assuming&amp;nbsp;the&amp;nbsp;instance&amp;nbsp;exists.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;load(Object&amp;nbsp;object,&amp;nbsp;Serializable&amp;nbsp;id)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Read&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;state&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;identifier&amp;nbsp;into&amp;nbsp;the&amp;nbsp;given&amp;nbsp;transient&amp;nbsp;instance.&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;load(String&amp;nbsp;entityName,&amp;nbsp;Serializable&amp;nbsp;id)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Return&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;entity&amp;nbsp;class&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;identifier,&amp;nbsp;assuming&amp;nbsp;that&amp;nbsp;the&amp;nbsp;instance&amp;nbsp;exists.&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;load(String&amp;nbsp;entityName,&amp;nbsp;Serializable&amp;nbsp;id,&amp;nbsp;LockMode&amp;nbsp;lockMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Deprecated.&amp;nbsp;LockMode&amp;nbsp;parameter&amp;nbsp;should&amp;nbsp;be&amp;nbsp;replaced&amp;nbsp;with&amp;nbsp;LockOptions&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;load(String&amp;nbsp;entityName,&amp;nbsp;Serializable&amp;nbsp;id,&amp;nbsp;LockOptions&amp;nbsp;lockOptions)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Return&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;entity&amp;nbsp;class&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;identifier,&amp;nbsp;obtaining&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;lock&amp;nbsp;mode,&amp;nbsp;assuming&amp;nbsp;the&amp;nbsp;instance&amp;nbsp;exists.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lock(Object&amp;nbsp;object,&amp;nbsp;LockMode&amp;nbsp;lockMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Deprecated.&amp;nbsp;instead&amp;nbsp;call&amp;nbsp;buildLockRequest(LockMode).lock(object)&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lock(String&amp;nbsp;entityName,&amp;nbsp;Object&amp;nbsp;object,&amp;nbsp;LockMode&amp;nbsp;lockMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Deprecated.&amp;nbsp;instead&amp;nbsp;call&amp;nbsp;buildLockRequest(LockMode).lock(entityName,&amp;nbsp;object)&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;merge(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Copy&amp;nbsp;the&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;object&amp;nbsp;onto&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;object&amp;nbsp;with&amp;nbsp;the&amp;nbsp;same&amp;nbsp;identifier.&lt;br&gt;
&amp;nbsp;Object&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;merge(String&amp;nbsp;entityName,&amp;nbsp;Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Copy&amp;nbsp;the&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;object&amp;nbsp;onto&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;object&amp;nbsp;with&amp;nbsp;the&amp;nbsp;same&amp;nbsp;identifier.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;persist(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Make&amp;nbsp;a&amp;nbsp;transient&amp;nbsp;instance&amp;nbsp;persistent.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;persist(String&amp;nbsp;entityName,&amp;nbsp;Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Make&amp;nbsp;a&amp;nbsp;transient&amp;nbsp;instance&amp;nbsp;persistent.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;reconnect(Connection&amp;nbsp;connection)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Reconnect&amp;nbsp;to&amp;nbsp;the&amp;nbsp;given&amp;nbsp;JDBC&amp;nbsp;connection.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;refresh(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Re-read&amp;nbsp;the&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;instance&amp;nbsp;from&amp;nbsp;the&amp;nbsp;underlying&amp;nbsp;database.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;refresh(Object&amp;nbsp;object,&amp;nbsp;LockMode&amp;nbsp;lockMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Deprecated.&amp;nbsp;LockMode&amp;nbsp;parameter&amp;nbsp;should&amp;nbsp;be&amp;nbsp;replaced&amp;nbsp;with&amp;nbsp;LockOptions&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;refresh(Object&amp;nbsp;object,&amp;nbsp;LockOptions&amp;nbsp;lockOptions)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Re-read&amp;nbsp;the&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;instance&amp;nbsp;from&amp;nbsp;the&amp;nbsp;underlying&amp;nbsp;database,&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;LockMode.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;refresh(String&amp;nbsp;entityName,&amp;nbsp;Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Re-read&amp;nbsp;the&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;instance&amp;nbsp;from&amp;nbsp;the&amp;nbsp;underlying&amp;nbsp;database.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;refresh(String&amp;nbsp;entityName,&amp;nbsp;Object&amp;nbsp;object,&amp;nbsp;LockOptions&amp;nbsp;lockOptions)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Re-read&amp;nbsp;the&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;instance&amp;nbsp;from&amp;nbsp;the&amp;nbsp;underlying&amp;nbsp;database,&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;LockMode.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;replicate(Object&amp;nbsp;object,&amp;nbsp;ReplicationMode&amp;nbsp;replicationMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Persist&amp;nbsp;the&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;detached&amp;nbsp;instance,&amp;nbsp;reusing&amp;nbsp;the&amp;nbsp;current&amp;nbsp;identifier&amp;nbsp;value.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;replicate(String&amp;nbsp;entityName,&amp;nbsp;Object&amp;nbsp;object,&amp;nbsp;ReplicationMode&amp;nbsp;replicationMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Persist&amp;nbsp;the&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;detached&amp;nbsp;instance,&amp;nbsp;reusing&amp;nbsp;the&amp;nbsp;current&amp;nbsp;identifier&amp;nbsp;value.&lt;br&gt;
&amp;nbsp;Serializable&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;save(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Persist&amp;nbsp;the&amp;nbsp;given&amp;nbsp;transient&amp;nbsp;instance,&amp;nbsp;first&amp;nbsp;assigning&amp;nbsp;a&amp;nbsp;generated&amp;nbsp;identifier.&lt;br&gt;
&amp;nbsp;Serializable&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;save(String&amp;nbsp;entityName,&amp;nbsp;Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Persist&amp;nbsp;the&amp;nbsp;given&amp;nbsp;transient&amp;nbsp;instance,&amp;nbsp;first&amp;nbsp;assigning&amp;nbsp;a&amp;nbsp;generated&amp;nbsp;identifier.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;saveOrUpdate(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Either&amp;nbsp;save(Object)&amp;nbsp;or&amp;nbsp;update(Object)&amp;nbsp;the&amp;nbsp;given&amp;nbsp;instance,&amp;nbsp;depending&amp;nbsp;upon&amp;nbsp;resolution&amp;nbsp;of&amp;nbsp;the&amp;nbsp;unsaved-value&amp;nbsp;checks&amp;nbsp;(see&amp;nbsp;the&amp;nbsp;manual&amp;nbsp;for&amp;nbsp;discussion&amp;nbsp;of&amp;nbsp;unsaved-value&amp;nbsp;checking).&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;saveOrUpdate(String&amp;nbsp;entityName,&amp;nbsp;Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Either&amp;nbsp;save(String,&amp;nbsp;Object)&amp;nbsp;or&amp;nbsp;update(String,&amp;nbsp;Object)&amp;nbsp;the&amp;nbsp;given&amp;nbsp;instance,&amp;nbsp;depending&amp;nbsp;upon&amp;nbsp;resolution&amp;nbsp;of&amp;nbsp;the&amp;nbsp;unsaved-value&amp;nbsp;checks&amp;nbsp;(see&amp;nbsp;the&amp;nbsp;manual&amp;nbsp;for&amp;nbsp;discussion&amp;nbsp;of&amp;nbsp;unsaved-value&amp;nbsp;checking).&lt;br&gt;
&amp;nbsp;SharedSessionBuilder&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sessionWithOptions()&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Obtain&amp;nbsp;a&amp;nbsp;Session&amp;nbsp;builder&amp;nbsp;with&amp;nbsp;the&amp;nbsp;ability&amp;nbsp;to&amp;nbsp;grab&amp;nbsp;certain&amp;nbsp;information&amp;nbsp;from&amp;nbsp;this&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setCacheMode(CacheMode&amp;nbsp;cacheMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Set&amp;nbsp;the&amp;nbsp;cache&amp;nbsp;mode.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setDefaultReadOnly(boolean&amp;nbsp;readOnly)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Change&amp;nbsp;the&amp;nbsp;default&amp;nbsp;for&amp;nbsp;entities&amp;nbsp;and&amp;nbsp;proxies&amp;nbsp;loaded&amp;nbsp;into&amp;nbsp;this&amp;nbsp;session&amp;nbsp;from&amp;nbsp;modifiable&amp;nbsp;to&amp;nbsp;read-only&amp;nbsp;mode,&amp;nbsp;or&amp;nbsp;from&amp;nbsp;modifiable&amp;nbsp;to&amp;nbsp;read-only&amp;nbsp;mode.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setFlushMode(FlushMode&amp;nbsp;flushMode)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Set&amp;nbsp;the&amp;nbsp;flush&amp;nbsp;mode&amp;nbsp;for&amp;nbsp;this&amp;nbsp;session.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setReadOnly(Object&amp;nbsp;entityOrProxy,&amp;nbsp;boolean&amp;nbsp;readOnly)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Set&amp;nbsp;an&amp;nbsp;unmodified&amp;nbsp;persistent&amp;nbsp;object&amp;nbsp;to&amp;nbsp;read-only&amp;nbsp;mode,&amp;nbsp;or&amp;nbsp;a&amp;nbsp;read-only&amp;nbsp;object&amp;nbsp;to&amp;nbsp;modifiable&amp;nbsp;mode.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;update(Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Update&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;with&amp;nbsp;the&amp;nbsp;identifier&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;detached&amp;nbsp;instance.&lt;br&gt;
&amp;nbsp;void&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;update(String&amp;nbsp;entityName,&amp;nbsp;Object&amp;nbsp;object)&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Update&amp;nbsp;the&amp;nbsp;persistent&amp;nbsp;instance&amp;nbsp;with&amp;nbsp;the&amp;nbsp;identifier&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;detached&amp;nbsp;instance.</questionanswer>
  </question>
  <question id="1_0_1_2_0_1_5:2" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Deadlock&amp;nbsp;when&amp;nbsp;saving&amp;nbsp;entities&amp;nbsp;using&amp;nbsp;Session&amp;nbsp;in&amp;nbsp;hibernate,&amp;nbsp;descrbie.&lt;br&gt;
Provide&amp;nbsp;example.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Locking&lt;br&gt;
A&amp;nbsp;database&amp;nbsp;can&amp;nbsp;conform&amp;nbsp;to&amp;nbsp;these&amp;nbsp;various&amp;nbsp;levels&amp;nbsp;of&amp;nbsp;isolation&amp;nbsp;in&amp;nbsp;a&amp;nbsp;number&amp;nbsp;of&amp;nbsp;ways,&amp;nbsp;and&amp;nbsp;you&amp;nbsp;will&amp;nbsp;need&amp;nbsp;a&amp;nbsp;working&lt;br&gt;
knowledge&amp;nbsp;of&amp;nbsp;locking&amp;nbsp;to&amp;nbsp;elicit&amp;nbsp;the&amp;nbsp;desired&amp;nbsp;behavior&amp;nbsp;and&amp;nbsp;performance&amp;nbsp;from&amp;nbsp;your&amp;nbsp;application&amp;nbsp;in&amp;nbsp;all&amp;nbsp;circumstances.&lt;br&gt;
To&amp;nbsp;prevent&amp;nbsp;simultaneous&amp;nbsp;access&amp;nbsp;to&amp;nbsp;data,&amp;nbsp;the&amp;nbsp;database&amp;nbsp;itself&amp;nbsp;will&amp;nbsp;acquire&amp;nbsp;a&amp;nbsp;lock&amp;nbsp;on&amp;nbsp;that&amp;nbsp;data.&amp;nbsp;This&amp;nbsp;can&amp;nbsp;be&amp;nbsp;acquired&lt;br&gt;
for&amp;nbsp;the&amp;nbsp;momentary&amp;nbsp;operation&amp;nbsp;on&amp;nbsp;the&amp;nbsp;data&amp;nbsp;only,&amp;nbsp;or&amp;nbsp;it&amp;nbsp;can&amp;nbsp;be&amp;nbsp;retained&amp;nbsp;until&amp;nbsp;the&amp;nbsp;end&amp;nbsp;of&amp;nbsp;the&amp;nbsp;transaction.&amp;nbsp;The&amp;nbsp;former&amp;nbsp;is&lt;br&gt;
called&amp;nbsp;optimistic&amp;nbsp;locking&amp;nbsp;and&amp;nbsp;the&amp;nbsp;latter&amp;nbsp;is&amp;nbsp;called&amp;nbsp;pessimistic&amp;nbsp;locking.&lt;br&gt;
The&amp;nbsp;Read&amp;nbsp;Uncommitted&amp;nbsp;isolation&amp;nbsp;level&amp;nbsp;always&amp;nbsp;acquires&amp;nbsp;optimistic&amp;nbsp;locks,&amp;nbsp;whereas&amp;nbsp;the&amp;nbsp;Serializable&amp;nbsp;isolation&amp;nbsp;level&lt;br&gt;
will&amp;nbsp;only&amp;nbsp;acquire&amp;nbsp;pessimistic&amp;nbsp;locks.&amp;nbsp;Some&amp;nbsp;databases&amp;nbsp;offer&amp;nbsp;a&amp;nbsp;feature&amp;nbsp;that&amp;nbsp;allows&amp;nbsp;you&amp;nbsp;to&amp;nbsp;append&amp;nbsp;the&amp;nbsp;FOR&amp;nbsp;UPDATE&amp;nbsp;query&amp;nbsp;to&lt;br&gt;
a&amp;nbsp;select&amp;nbsp;operation,&amp;nbsp;which&amp;nbsp;requires&amp;nbsp;the&amp;nbsp;database&amp;nbsp;to&amp;nbsp;acquire&amp;nbsp;a&amp;nbsp;pessimistic&amp;nbsp;lock&amp;nbsp;even&amp;nbsp;in&amp;nbsp;the&amp;nbsp;lower&amp;nbsp;isolation&amp;nbsp;levels.&lt;br&gt;
Hibernate&amp;nbsp;provides&amp;nbsp;some&amp;nbsp;support&amp;nbsp;for&amp;nbsp;this&amp;nbsp;feature&amp;nbsp;when&amp;nbsp;it&amp;nbsp;is&amp;nbsp;available,&amp;nbsp;and&amp;nbsp;takes&amp;nbsp;it&amp;nbsp;somewhat&amp;nbsp;further&amp;nbsp;by&amp;nbsp;adding&lt;br&gt;
facilities&amp;nbsp;that&amp;nbsp;describe&amp;nbsp;additional&amp;nbsp;degrees&amp;nbsp;of&amp;nbsp;isolation&amp;nbsp;obtainable&amp;nbsp;from&amp;nbsp;Hibernateâ€™s&amp;nbsp;own&amp;nbsp;cache.&lt;br&gt;
The&amp;nbsp;LockMode&amp;nbsp;object&amp;nbsp;controls&amp;nbsp;this&amp;nbsp;fine-grained&amp;nbsp;isolation&amp;nbsp;(see&amp;nbsp;Table&amp;nbsp;8-3).&amp;nbsp;It&amp;nbsp;is&amp;nbsp;only&amp;nbsp;applicable&amp;nbsp;to&amp;nbsp;the&amp;nbsp;get()&amp;nbsp;methods,&lt;br&gt;
so&amp;nbsp;it&amp;nbsp;is&amp;nbsp;limited;&amp;nbsp;however,&amp;nbsp;when&amp;nbsp;possible,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;preferable&amp;nbsp;to&amp;nbsp;the&amp;nbsp;direct&amp;nbsp;control&amp;nbsp;of&amp;nbsp;isolation&amp;nbsp;mentioned&amp;nbsp;previously.&lt;br&gt;
&lt;br&gt;
Mode&amp;nbsp;Description&lt;br&gt;
NONE&amp;nbsp;Reads&amp;nbsp;from&amp;nbsp;the&amp;nbsp;database&amp;nbsp;only&amp;nbsp;if&amp;nbsp;the&amp;nbsp;object&amp;nbsp;is&amp;nbsp;not&amp;nbsp;available&amp;nbsp;from&amp;nbsp;the&amp;nbsp;caches.&lt;br&gt;
READ&amp;nbsp;Reads&amp;nbsp;from&amp;nbsp;the&amp;nbsp;database&amp;nbsp;regardless&amp;nbsp;of&amp;nbsp;the&amp;nbsp;contents&amp;nbsp;of&amp;nbsp;the&amp;nbsp;caches.&lt;br&gt;
UPGRADE&amp;nbsp;Obtains&amp;nbsp;a&amp;nbsp;dialect-specific&amp;nbsp;upgrade&amp;nbsp;lock&amp;nbsp;for&amp;nbsp;the&amp;nbsp;data&amp;nbsp;to&amp;nbsp;be&amp;nbsp;accessed&amp;nbsp;(if&amp;nbsp;this&amp;nbsp;is&amp;nbsp;available&amp;nbsp;from&lt;br&gt;
your&amp;nbsp;database).&lt;br&gt;
UPGRADE_NOWAIT&amp;nbsp;Behaves&amp;nbsp;like&amp;nbsp;UPGRADE,&amp;nbsp;but&amp;nbsp;when&amp;nbsp;support&amp;nbsp;is&amp;nbsp;available&amp;nbsp;from&amp;nbsp;the&amp;nbsp;database&amp;nbsp;and&amp;nbsp;dialect,&amp;nbsp;the&amp;nbsp;method&lt;br&gt;
will&amp;nbsp;fail&amp;nbsp;with&amp;nbsp;a&amp;nbsp;locking&amp;nbsp;exception&amp;nbsp;immediately.&amp;nbsp;Without&amp;nbsp;this&amp;nbsp;option,&amp;nbsp;or&amp;nbsp;on&amp;nbsp;databases&amp;nbsp;for&amp;nbsp;which&amp;nbsp;it&lt;br&gt;
is&amp;nbsp;not&amp;nbsp;supported,&amp;nbsp;the&amp;nbsp;query&amp;nbsp;must&amp;nbsp;wait&amp;nbsp;for&amp;nbsp;a&amp;nbsp;lock&amp;nbsp;to&amp;nbsp;be&amp;nbsp;granted&amp;nbsp;(or&amp;nbsp;for&amp;nbsp;a&amp;nbsp;timeout&amp;nbsp;to&amp;nbsp;occur).&lt;br&gt;
&lt;br&gt;
=============================&lt;br&gt;
Two&amp;nbsp;threads&amp;nbsp;of&amp;nbsp;execution&amp;nbsp;can&amp;nbsp;get&amp;nbsp;into&amp;nbsp;a&amp;nbsp;situation&amp;nbsp;in&amp;nbsp;which&amp;nbsp;each&amp;nbsp;is&amp;nbsp;waiting&amp;nbsp;for&amp;nbsp;the&amp;nbsp;other&amp;nbsp;to&amp;nbsp;release&amp;nbsp;a&amp;nbsp;resource&amp;nbsp;that&amp;nbsp;it&lt;br&gt;
needs.&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example&amp;nbsp;of&amp;nbsp;deadlock&lt;br&gt;
&lt;br&gt;
Looking&amp;nbsp;at&amp;nbsp;the&amp;nbsp;database&amp;nbsp;after&amp;nbsp;completion&amp;nbsp;EXAMPLE,&amp;nbsp;you&amp;nbsp;will&amp;nbsp;see&amp;nbsp;that&amp;nbsp;the&amp;nbsp;test&amp;nbsp;user&amp;nbsp;has&amp;nbsp;been&amp;nbsp;replaced&lt;br&gt;
with&amp;nbsp;either&amp;nbsp;jeff&amp;nbsp;or&amp;nbsp;dave&amp;nbsp;in&amp;nbsp;both&amp;nbsp;tables&amp;nbsp;(you&amp;nbsp;will&amp;nbsp;never&amp;nbsp;see&amp;nbsp;dave&amp;nbsp;from&amp;nbsp;one&amp;nbsp;thread&amp;nbsp;and&amp;nbsp;jeff&amp;nbsp;from&amp;nbsp;the&amp;nbsp;other).&amp;nbsp;Though&amp;nbsp;it&amp;nbsp;is&lt;br&gt;
not&amp;nbsp;necessary&amp;nbsp;here,&amp;nbsp;because&amp;nbsp;we&amp;nbsp;close&amp;nbsp;the&amp;nbsp;session&amp;nbsp;regardless,&amp;nbsp;in&amp;nbsp;a&amp;nbsp;more&amp;nbsp;extensive&amp;nbsp;application&amp;nbsp;it&amp;nbsp;is&amp;nbsp;important&amp;nbsp;to&amp;nbsp;ensure&lt;br&gt;
that&amp;nbsp;the&amp;nbsp;session&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;a&amp;nbsp;deadlock&amp;nbsp;or&amp;nbsp;any&amp;nbsp;other&amp;nbsp;Hibernate&amp;nbsp;exception&amp;nbsp;is&amp;nbsp;closed&amp;nbsp;and&amp;nbsp;never&amp;nbsp;used&amp;nbsp;again,&amp;nbsp;because&lt;br&gt;
otherwise&amp;nbsp;the&amp;nbsp;cache&amp;nbsp;may&amp;nbsp;be&amp;nbsp;left&amp;nbsp;in&amp;nbsp;a&amp;nbsp;corrupted&amp;nbsp;state.&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;com.hibernatebook.session.deadlock;&lt;br&gt;
import&amp;nbsp;java.sql.Connection;&lt;br&gt;
import&amp;nbsp;java.sql.SQLException;&lt;br&gt;
import&amp;nbsp;org.hibernate.HibernateException;&lt;br&gt;
import&amp;nbsp;org.hibernate.Query;&lt;br&gt;
import&amp;nbsp;org.hibernate.Session;&lt;br&gt;
import&amp;nbsp;org.hibernate.SessionFactory;&lt;br&gt;
import&amp;nbsp;org.hibernate.Transaction;&lt;br&gt;
import&amp;nbsp;org.hibernate.cfg.Configuration;&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;GenerateDeadlock&amp;nbsp;{&lt;br&gt;
private&amp;nbsp;static&amp;nbsp;SessionFactory&amp;nbsp;factory&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Configuration().configure()&lt;br&gt;
.buildSessionFactory();&lt;br&gt;
public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;createUser(String&amp;nbsp;username)&amp;nbsp;throws&amp;nbsp;HibernateException&amp;nbsp;{&lt;br&gt;
Session&amp;nbsp;session&amp;nbsp;=&amp;nbsp;factory.openSession();&lt;br&gt;
try&amp;nbsp;{&lt;br&gt;
session.beginTransaction();&lt;br&gt;
//&amp;nbsp;Normal&amp;nbsp;usage&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Session&amp;nbsp;here...&lt;br&gt;
Publisher&amp;nbsp;p&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Publisher(username);&lt;br&gt;
Subscriber&amp;nbsp;s&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Subscriber(username);&lt;br&gt;
session.saveOrUpdate(p);&lt;br&gt;
session.saveOrUpdate(s);&lt;br&gt;
//&amp;nbsp;Commit&amp;nbsp;the&amp;nbsp;transaction&lt;br&gt;
session.getTransaction().commit();&lt;br&gt;
}&amp;nbsp;catch&amp;nbsp;(HibernateException&amp;nbsp;e1)&amp;nbsp;{&lt;br&gt;
rollback(session);&lt;br&gt;
throw&amp;nbsp;e1;&lt;br&gt;
}&amp;nbsp;finally&amp;nbsp;{&lt;br&gt;
//&amp;nbsp;Close&amp;nbsp;the&amp;nbsp;session&lt;br&gt;
close(session);&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;reset(Session&amp;nbsp;session,&amp;nbsp;int&amp;nbsp;isolation)&amp;nbsp;{&lt;br&gt;
if&amp;nbsp;(isolation&amp;nbsp;&gt;=&amp;nbsp;0)&amp;nbsp;{&lt;br&gt;
try&amp;nbsp;{&lt;br&gt;
session.connection().setTransactionIsolation(isolation);&lt;br&gt;
}&amp;nbsp;catch&amp;nbsp;(SQLException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
System.err.println("Could&amp;nbsp;not&amp;nbsp;reset&amp;nbsp;the&amp;nbsp;isolation&amp;nbsp;level:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;e);&lt;br&gt;
}&amp;nbsp;catch&amp;nbsp;(HibernateException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
System.err.println("Could&amp;nbsp;not&amp;nbsp;reset&amp;nbsp;the&amp;nbsp;isolation&amp;nbsp;level:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;e);&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;close(Session&amp;nbsp;session)&amp;nbsp;{&lt;br&gt;
try&amp;nbsp;{&lt;br&gt;
session.close();&lt;br&gt;
}&amp;nbsp;catch&amp;nbsp;(HibernateException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
System.err.println("Could&amp;nbsp;not&amp;nbsp;close&amp;nbsp;the&amp;nbsp;session:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;e);&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;rollback(Session&amp;nbsp;session)&amp;nbsp;{&lt;br&gt;
try&amp;nbsp;{&lt;br&gt;
Transaction&amp;nbsp;tx&amp;nbsp;=&amp;nbsp;session.getTransaction();&lt;br&gt;
if&amp;nbsp;(tx.isActive())&lt;br&gt;
tx.rollback();&lt;br&gt;
}&amp;nbsp;catch&amp;nbsp;(HibernateException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
System.err.println("Could&amp;nbsp;not&amp;nbsp;rollback&amp;nbsp;the&amp;nbsp;session:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;e);&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;argv)&amp;nbsp;{&lt;br&gt;
System.out.println("Creating&amp;nbsp;test&amp;nbsp;user...");&lt;br&gt;
createUser("test");&lt;br&gt;
System.out.println("Proceeding&amp;nbsp;to&amp;nbsp;main&amp;nbsp;test...");&lt;br&gt;
Session&amp;nbsp;s1&amp;nbsp;=&amp;nbsp;factory.openSession();&lt;br&gt;
Session&amp;nbsp;s2&amp;nbsp;=&amp;nbsp;factory.openSession();&lt;br&gt;
try&amp;nbsp;{&lt;br&gt;
s1.beginTransaction();&lt;br&gt;
s2.beginTransaction();&lt;br&gt;
System.out.println("Update&amp;nbsp;1");&lt;br&gt;
Query&amp;nbsp;q1&amp;nbsp;=&amp;nbsp;s1.createQuery("from&amp;nbsp;Publisher");&lt;br&gt;
Publisher&amp;nbsp;pub1&amp;nbsp;=&amp;nbsp;(Publisher)&amp;nbsp;q1.uniqueResult();&lt;br&gt;
pub1.setUsername("jeff");&lt;br&gt;
s1.flush();&lt;br&gt;
System.out.println("Update&amp;nbsp;2");&lt;br&gt;
Query&amp;nbsp;q2&amp;nbsp;=&amp;nbsp;s2.createQuery("from&amp;nbsp;Subscriber");&lt;br&gt;
Subscriber&amp;nbsp;sub1&amp;nbsp;=&amp;nbsp;(Subscriber)&amp;nbsp;q2.uniqueResult();&lt;br&gt;
sub1.setUsername("dave");&lt;br&gt;
s2.flush();&lt;br&gt;
System.out.println("Update&amp;nbsp;3");&lt;br&gt;
Query&amp;nbsp;q3&amp;nbsp;=&amp;nbsp;s1.createQuery("from&amp;nbsp;Subscriber");&lt;br&gt;
Subscriber&amp;nbsp;sub2&amp;nbsp;=&amp;nbsp;(Subscriber)&amp;nbsp;q3.uniqueResult();&lt;br&gt;
sub2.setUsername("jeff");&lt;br&gt;
s1.flush();&lt;br&gt;
System.out.println("Update&amp;nbsp;4");&lt;br&gt;
Query&amp;nbsp;q4&amp;nbsp;=&amp;nbsp;s2.createQuery("from&amp;nbsp;Publisher");&lt;br&gt;
Publisher&amp;nbsp;pub2&amp;nbsp;=&amp;nbsp;(Publisher)&amp;nbsp;q4.uniqueResult();&lt;br&gt;
pub2.setUsername("dave");&lt;br&gt;
s2.flush();&lt;br&gt;
s1.getTransaction().commit();&lt;br&gt;
s2.getTransaction().commit();&lt;br&gt;
}&amp;nbsp;catch&amp;nbsp;(RuntimeException&amp;nbsp;e1)&amp;nbsp;{&lt;br&gt;
e1.printStackTrace();&lt;br&gt;
//&amp;nbsp;Run&amp;nbsp;the&amp;nbsp;boilerplate&amp;nbsp;to&amp;nbsp;roll&amp;nbsp;back&amp;nbsp;the&amp;nbsp;sessions&lt;br&gt;
rollback(s1);&lt;br&gt;
rollback(s2);&lt;br&gt;
throw&amp;nbsp;e1;&lt;br&gt;
}&amp;nbsp;finally&amp;nbsp;{&lt;br&gt;
//&amp;nbsp;Run&amp;nbsp;the&amp;nbsp;boilerplate&amp;nbsp;to&amp;nbsp;close&amp;nbsp;the&amp;nbsp;sessions&lt;br&gt;
close(s1);&lt;br&gt;
close(s2);&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
}</questionanswer>
  </question>
  <question id="1_0_1_2_0_1_5:3" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Is&amp;nbsp;hibernate's&amp;nbsp;session&amp;nbsp;thread&amp;nbsp;safe&amp;nbsp;?&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>It&amp;nbsp;is&amp;nbsp;not&amp;nbsp;intended&amp;nbsp;that&amp;nbsp;implementors&amp;nbsp;be&amp;nbsp;threadsafe.&amp;nbsp;Instead&amp;nbsp;each&amp;nbsp;thread/transaction&lt;br&gt;
should&amp;nbsp;obtain&amp;nbsp;its&amp;nbsp;own&amp;nbsp;instance&amp;nbsp;from&amp;nbsp;a&amp;nbsp;SessionFactory.&lt;br&gt;
=================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hibernate&amp;nbsp;session&amp;nbsp;and&amp;nbsp;threads&amp;nbsp;do&amp;nbsp;not&amp;nbsp;mix.&lt;br&gt;
&lt;br&gt;
You&amp;nbsp;should&amp;nbsp;not&amp;nbsp;use&amp;nbsp;a&amp;nbsp;session&amp;nbsp;from&amp;nbsp;multiple&amp;nbsp;threads&amp;nbsp;at&amp;nbsp;once,&amp;nbsp;and&amp;nbsp;I&amp;nbsp;recommend&amp;nbsp;you&amp;nbsp;only&amp;nbsp;use&amp;nbsp;a&lt;br&gt;
session&amp;nbsp;from&amp;nbsp;a&amp;nbsp;single&amp;nbsp;thread.&amp;nbsp;DB&amp;nbsp;session&amp;nbsp;implementations&amp;nbsp;are&amp;nbsp;not&amp;nbsp;even&amp;nbsp;required&amp;nbsp;to&amp;nbsp;be&amp;nbsp;theadsafe.&lt;br&gt;
&lt;br&gt;
You&amp;nbsp;also&amp;nbsp;must&amp;nbsp;consider&amp;nbsp;what&amp;nbsp;happens&amp;nbsp;to&amp;nbsp;the&amp;nbsp;transactions&amp;nbsp;when&amp;nbsp;you&amp;nbsp;start&amp;nbsp;doing&amp;nbsp;things&amp;nbsp;in&amp;nbsp;multiple&amp;nbsp;threads.&lt;br&gt;
Transactions&amp;nbsp;are&amp;nbsp;tied&amp;nbsp;to&amp;nbsp;the&amp;nbsp;current&amp;nbsp;thread.&amp;nbsp;This&amp;nbsp;becomes&amp;nbsp;quickly&amp;nbsp;mindblowing&amp;nbsp;and&amp;nbsp;you&amp;nbsp;enter&amp;nbsp;areas&amp;nbsp;where&lt;br&gt;
the&amp;nbsp;implementers&amp;nbsp;have&amp;nbsp;not&amp;nbsp;tested&amp;nbsp;their&amp;nbsp;products.&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;the&amp;nbsp;end&amp;nbsp;life&amp;nbsp;is&amp;nbsp;too&amp;nbsp;short&amp;nbsp;to&amp;nbsp;get&amp;nbsp;lost&amp;nbsp;in&amp;nbsp;that&amp;nbsp;swamp.</questionanswer>
  </question>
  <question id="1_0_1_2_0_1_5:4" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hibernate&amp;nbsp;first&amp;nbsp;level&amp;nbsp;cache,&amp;nbsp;describe.&amp;nbsp;Provide&amp;nbsp;example.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Hibernate&amp;nbsp;provides&amp;nbsp;an&amp;nbsp;in-built&lt;br&gt;
caching&amp;nbsp;mechanism&amp;nbsp;known&amp;nbsp;as&amp;nbsp;the&amp;nbsp;first-level&amp;nbsp;cache&amp;nbsp;(L1&amp;nbsp;cache).&lt;br&gt;
&lt;br&gt;
Following&amp;nbsp;are&amp;nbsp;some&amp;nbsp;properties&amp;nbsp;of&amp;nbsp;the&amp;nbsp;first-level&amp;nbsp;cache:&lt;br&gt;
-&amp;nbsp;It&amp;nbsp;is&amp;nbsp;enabled&amp;nbsp;by&amp;nbsp;default.&amp;nbsp;We&amp;nbsp;cannot&amp;nbsp;disable&amp;nbsp;it&amp;nbsp;even&amp;nbsp;if&amp;nbsp;we&amp;nbsp;want&amp;nbsp;to.&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;scope&amp;nbsp;of&amp;nbsp;the&amp;nbsp;first-level&amp;nbsp;cache&amp;nbsp;is&amp;nbsp;limited&amp;nbsp;to&amp;nbsp;a&amp;nbsp;particular&amp;nbsp;Session&amp;nbsp;object&amp;nbsp;only;&amp;nbsp;the&lt;br&gt;
other&amp;nbsp;Session&amp;nbsp;objects&amp;nbsp;cannot&amp;nbsp;access&amp;nbsp;it.&lt;br&gt;
-&amp;nbsp;All&amp;nbsp;cached&amp;nbsp;objects&amp;nbsp;are&amp;nbsp;destroyed&amp;nbsp;once&amp;nbsp;the&amp;nbsp;session&amp;nbsp;is&amp;nbsp;closed.&lt;br&gt;
-&amp;nbsp;If&amp;nbsp;we&amp;nbsp;request&amp;nbsp;for&amp;nbsp;an&amp;nbsp;object,&amp;nbsp;hibernate&amp;nbsp;returns&amp;nbsp;the&amp;nbsp;object&amp;nbsp;from&amp;nbsp;the&amp;nbsp;cache&amp;nbsp;only&amp;nbsp;if&amp;nbsp;the&lt;br&gt;
requested&amp;nbsp;object&amp;nbsp;is&amp;nbsp;found&amp;nbsp;in&amp;nbsp;the&amp;nbsp;cache;&amp;nbsp;otherwise,&amp;nbsp;a&amp;nbsp;database&amp;nbsp;call&amp;nbsp;is&amp;nbsp;initiated.&lt;br&gt;
-&amp;nbsp;We&amp;nbsp;can&amp;nbsp;use&amp;nbsp;Session.evict(Object&amp;nbsp;object)&amp;nbsp;to&amp;nbsp;remove&amp;nbsp;single&amp;nbsp;objects&amp;nbsp;from&amp;nbsp;the&lt;br&gt;
session&amp;nbsp;cache.&lt;br&gt;
-&amp;nbsp;The&amp;nbsp;Session.clear()&amp;nbsp;method&amp;nbsp;is&amp;nbsp;used&amp;nbsp;to&amp;nbsp;clear&amp;nbsp;all&amp;nbsp;the&amp;nbsp;cached&amp;nbsp;objects&amp;nbsp;from&lt;br&gt;
the&amp;nbsp;session.&lt;br&gt;
&lt;br&gt;
=====&lt;br&gt;
Hibernate&amp;nbsp;stores&amp;nbsp;an&amp;nbsp;object&amp;nbsp;in&amp;nbsp;the&amp;nbsp;cache&amp;nbsp;only&amp;nbsp;if&amp;nbsp;one&amp;nbsp;of&amp;nbsp;the&amp;nbsp;following&amp;nbsp;operations&amp;nbsp;is&amp;nbsp;completed:&lt;br&gt;
*&amp;nbsp;Save&lt;br&gt;
*&amp;nbsp;Update&lt;br&gt;
*&amp;nbsp;Get&lt;br&gt;
*&amp;nbsp;Load&lt;br&gt;
*&amp;nbsp;List&lt;br&gt;
&lt;br&gt;
L1&amp;nbsp;is&amp;nbsp;not&amp;nbsp;used&amp;nbsp;when&amp;nbsp;use&amp;nbsp;QUERIES&amp;nbsp;!!!!!!!!!!!!!!!&lt;br&gt;
&lt;br&gt;
There&amp;nbsp;are&amp;nbsp;two&amp;nbsp;more&amp;nbsp;methods&amp;nbsp;that&amp;nbsp;are&amp;nbsp;used&amp;nbsp;to&amp;nbsp;remove&amp;nbsp;a&amp;nbsp;cached&amp;nbsp;object:&lt;br&gt;
-&amp;nbsp;evict(Object&amp;nbsp;object):&amp;nbsp;This&amp;nbsp;method&amp;nbsp;removes&amp;nbsp;a&amp;nbsp;particular&amp;nbsp;object&amp;nbsp;from&amp;nbsp;the&amp;nbsp;session&lt;br&gt;
-&amp;nbsp;clear():&amp;nbsp;This&amp;nbsp;method&amp;nbsp;removes&amp;nbsp;all&amp;nbsp;the&amp;nbsp;objects&amp;nbsp;from&amp;nbsp;the&amp;nbsp;session&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
=========================&lt;br&gt;
Example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
&lt;br&gt;
1)&amp;nbsp;Entity&lt;br&gt;
package&amp;nbsp;ch8;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.persistence.*;&lt;br&gt;
&lt;br&gt;
@Entity&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;CacheEntity&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Id&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@GeneratedValue(strategy&amp;nbsp;=&amp;nbsp;GenerationType.AUTO)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Integer&amp;nbsp;id;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Column(unique&amp;nbsp;=&amp;nbsp;true)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;name;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Integer&amp;nbsp;getId()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;id;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setId(Integer&amp;nbsp;id)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.id&amp;nbsp;=&amp;nbsp;id;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getName()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setName(String&amp;nbsp;name)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.name&amp;nbsp;=&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;Program&amp;nbsp;:&amp;nbsp;&lt;br&gt;
package&amp;nbsp;ch8;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;ch7.JPASessionUtil;&lt;br&gt;
import&amp;nbsp;org.hibernate.Session;&lt;br&gt;
import&amp;nbsp;org.hibernate.Transaction;&lt;br&gt;
import&amp;nbsp;org.hibernate.jdbc.Work;&lt;br&gt;
import&amp;nbsp;util.SessionUtil;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.io.IOException;&lt;br&gt;
import&amp;nbsp;java.sql.Connection;&lt;br&gt;
import&amp;nbsp;java.sql.SQLException;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;ch8ExampleCachingProgram&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Cache&amp;nbsp;in&amp;nbsp;hibernate");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testL1CacheUsingGet();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SessionUtil.closeFactory();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;void&amp;nbsp;testL1CacheUsingGet()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Session&amp;nbsp;session&amp;nbsp;=&amp;nbsp;SessionUtil.getSession();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*&amp;nbsp;insert&amp;nbsp;record&amp;nbsp;with&amp;nbsp;id=10&amp;nbsp;to&amp;nbsp;db&amp;nbsp;:&amp;nbsp;&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;CacheEntity&amp;nbsp;values&amp;nbsp;(10,&amp;nbsp;'abc');*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.in.read();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch&amp;nbsp;(IOException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Transaction&amp;nbsp;transaction&amp;nbsp;=&amp;nbsp;session.beginTransaction();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CacheEntity&amp;nbsp;c1&amp;nbsp;=&amp;nbsp;new&amp;nbsp;CacheEntity();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c1.setName("c1");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.save(c1);&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CacheEntity&amp;nbsp;ec&amp;nbsp;=&amp;nbsp;(CacheEntity)&amp;nbsp;session.load(CacheEntity.class,&amp;nbsp;10);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(ec.getName());&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//session.clear();&amp;nbsp;//&amp;nbsp;uncomment&amp;nbsp;this&amp;nbsp;to&amp;nbsp;clear&amp;nbsp;L1&amp;nbsp;cache&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ec&amp;nbsp;=&amp;nbsp;(CacheEntity)&amp;nbsp;session.load(CacheEntity.class,&amp;nbsp;10);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(ec.getName());&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.doWork(new&amp;nbsp;Work()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;execute(Connection&amp;nbsp;connection)&amp;nbsp;throws&amp;nbsp;SQLException&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(connection.getTransactionIsolation());&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.commit();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.close();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;IS&amp;nbsp;:&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;CacheEntity&amp;nbsp;(name)&amp;nbsp;values&amp;nbsp;(?)&lt;br&gt;
Hibernate:&amp;nbsp;select&amp;nbsp;cacheentit0_.id&amp;nbsp;as&amp;nbsp;id1_3_0_,&amp;nbsp;cacheentit0_.name&amp;nbsp;as&amp;nbsp;name2_3_0_&amp;nbsp;from&amp;nbsp;CacheEntity&amp;nbsp;cacheentit0_&amp;nbsp;where&amp;nbsp;cacheentit0_.id=?&lt;br&gt;
abc&lt;br&gt;
abc&lt;br&gt;
8&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
!!!&amp;nbsp;Note&amp;nbsp;:&amp;nbsp;only&amp;nbsp;one&amp;nbsp;select&amp;nbsp;is&amp;nbsp;performed&amp;nbsp;&lt;br&gt;
////////////////&lt;br&gt;
&lt;br&gt;
----&amp;nbsp;If&amp;nbsp;we&amp;nbsp;uncomment&amp;nbsp;line&amp;nbsp;:&amp;nbsp;session.clear();&lt;br&gt;
OUTPUT&amp;nbsp;will&amp;nbsp;be&amp;nbsp;:&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;CacheEntity&amp;nbsp;(name)&amp;nbsp;values&amp;nbsp;(?)&lt;br&gt;
Hibernate:&amp;nbsp;select&amp;nbsp;cacheentit0_.id&amp;nbsp;as&amp;nbsp;id1_3_0_,&amp;nbsp;cacheentit0_.name&amp;nbsp;as&amp;nbsp;name2_3_0_&amp;nbsp;from&amp;nbsp;CacheEntity&amp;nbsp;cacheentit0_&amp;nbsp;where&amp;nbsp;cacheentit0_.id=?&lt;br&gt;
abc&lt;br&gt;
Hibernate:&amp;nbsp;select&amp;nbsp;cacheentit0_.id&amp;nbsp;as&amp;nbsp;id1_3_0_,&amp;nbsp;cacheentit0_.name&amp;nbsp;as&amp;nbsp;name2_3_0_&amp;nbsp;from&amp;nbsp;CacheEntity&amp;nbsp;cacheentit0_&amp;nbsp;where&amp;nbsp;cacheentit0_.id=?&lt;br&gt;
abc&lt;br&gt;
8</questionanswer>
  </question>
</questions>
