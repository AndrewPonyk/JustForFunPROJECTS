<?xml version="1.0" encoding="UTF-8"?>
<questions id="0_2_0_1_0" name="LearnJSOOP_From_Articles" nofquestions="12" nofsubcategories="0" filename="learnjsoop_from_articles0_2_0_1_0.xml">
  <question id="0_2_0_1_0:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;When&amp;nbsp;is&amp;nbsp;the&amp;nbsp;&amp;quot;var&amp;quot;&amp;nbsp;need&amp;nbsp;in&amp;nbsp;js?&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>The&amp;nbsp;var&amp;nbsp;keyword&amp;nbsp;is&amp;nbsp;never&amp;nbsp;"needed".&amp;nbsp;However&amp;nbsp;if&amp;nbsp;you&amp;nbsp;don't&amp;nbsp;use&amp;nbsp;it&amp;nbsp;then&amp;nbsp;the&amp;nbsp;variable&amp;nbsp;that&amp;nbsp;you&amp;nbsp;are&amp;nbsp;declaring&lt;br&gt;
will&amp;nbsp;be&amp;nbsp;exposed&amp;nbsp;in&amp;nbsp;the&amp;nbsp;global&amp;nbsp;scope&amp;nbsp;(i.e.&amp;nbsp;as&amp;nbsp;a&amp;nbsp;property&amp;nbsp;on&amp;nbsp;the&amp;nbsp;window&amp;nbsp;object).&lt;br&gt;
Usually&amp;nbsp;this&amp;nbsp;is&amp;nbsp;not&amp;nbsp;what&amp;nbsp;you&amp;nbsp;want.&lt;br&gt;
&lt;br&gt;
Doing&amp;nbsp;it&amp;nbsp;like&amp;nbsp;this:&lt;br&gt;
&lt;br&gt;
for(i=0;&amp;nbsp;i&lt;&amp;nbsp;array.length;&amp;nbsp;i++){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;//bababa&lt;br&gt;
}&lt;br&gt;
...will&amp;nbsp;create&amp;nbsp;a&amp;nbsp;variable&amp;nbsp;called&amp;nbsp;i&amp;nbsp;in&amp;nbsp;the&amp;nbsp;global&amp;nbsp;scope.&amp;nbsp;If&amp;nbsp;someone&amp;nbsp;else&amp;nbsp;happened&amp;nbsp;to&amp;nbsp;also&amp;nbsp;be&amp;nbsp;using&amp;nbsp;a&amp;nbsp;global&amp;nbsp;i&lt;br&gt;
variable,&amp;nbsp;then&amp;nbsp;you've&amp;nbsp;just&amp;nbsp;overwritten&amp;nbsp;their&amp;nbsp;variable.&lt;br&gt;
================================================&lt;br&gt;
Another&amp;nbsp;example&amp;nbsp;&lt;br&gt;
function&amp;nbsp;Person(name){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;temp&amp;nbsp;=&amp;nbsp;"tempvalue";&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
if&amp;nbsp;you&amp;nbsp;do&amp;nbsp;:&lt;br&gt;
&amp;nbsp;p&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Person("rob");&lt;br&gt;
you'll&amp;nbsp;have&amp;nbsp;temp&amp;nbsp;in&amp;nbsp;global&amp;nbsp;scope&amp;nbsp;!!!&lt;br&gt;
so&amp;nbsp;console.log(window.temp)&amp;nbsp;will&amp;nbsp;print&amp;nbsp;"tempvalue"</questionanswer>
  </question>
  <question id="0_2_0_1_0:1" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;What&amp;nbsp;is&amp;nbsp;the&amp;nbsp;difference&amp;nbsp;between&amp;nbsp;call&amp;nbsp;and&amp;nbsp;apply&amp;nbsp;in&amp;nbsp;Javascript?&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Both&amp;nbsp;call&amp;nbsp;and&amp;nbsp;apply&amp;nbsp;perform&amp;nbsp;very&amp;nbsp;similar&amp;nbsp;functions:&amp;nbsp;they&amp;nbsp;execute&amp;nbsp;a&amp;nbsp;function&amp;nbsp;in&amp;nbsp;the&amp;nbsp;context,&lt;br&gt;
or&amp;nbsp;scope,&amp;nbsp;of&amp;nbsp;the&amp;nbsp;first&amp;nbsp;argument&amp;nbsp;that&amp;nbsp;you&amp;nbsp;pass&amp;nbsp;to&amp;nbsp;them.&amp;nbsp;Also,&amp;nbsp;they're&amp;nbsp;both&amp;nbsp;functions&amp;nbsp;that&amp;nbsp;can&amp;nbsp;only&lt;br&gt;
be&amp;nbsp;called&amp;nbsp;on&amp;nbsp;other&amp;nbsp;functions.&amp;nbsp;&lt;br&gt;
&lt;br&gt;
==============&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The&amp;nbsp;difference&amp;nbsp;is&amp;nbsp;that&amp;nbsp;apply&amp;nbsp;lets&amp;nbsp;you&amp;nbsp;invoke&amp;nbsp;the&amp;nbsp;function&amp;nbsp;with&amp;nbsp;arguments&amp;nbsp;as&amp;nbsp;an&amp;nbsp;array;&amp;nbsp;call&amp;nbsp;requires&amp;nbsp;the&lt;br&gt;
parameters&amp;nbsp;be&amp;nbsp;listed&amp;nbsp;explicitly.&amp;nbsp;A&amp;nbsp;useful&amp;nbsp;mnemonic&amp;nbsp;is&amp;nbsp;"A&amp;nbsp;for&amp;nbsp;array&amp;nbsp;and&amp;nbsp;C&amp;nbsp;for&amp;nbsp;comma."&lt;br&gt;
&lt;br&gt;
Look&amp;nbsp;on&amp;nbsp;example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
unction&amp;nbsp;theFunction(name,&amp;nbsp;profession)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("Object&amp;nbsp;name&amp;nbsp;"&amp;nbsp;+&amp;nbsp;this.name&amp;nbsp;+&amp;nbsp;";&amp;nbsp;My&amp;nbsp;name&amp;nbsp;is&amp;nbsp;"&amp;nbsp;+&amp;nbsp;name&amp;nbsp;+&amp;nbsp;"&amp;nbsp;and&amp;nbsp;I&amp;nbsp;am&amp;nbsp;a&amp;nbsp;"&amp;nbsp;+&amp;nbsp;profession&amp;nbsp;+&amp;nbsp;".");&lt;br&gt;
}&lt;br&gt;
theFunction("John",&amp;nbsp;"fireman");&amp;nbsp;&amp;nbsp;//&amp;nbsp;OUTPUT&amp;nbsp;:&amp;nbsp;Object&amp;nbsp;name&amp;nbsp;;&amp;nbsp;My&amp;nbsp;name&amp;nbsp;is&amp;nbsp;John&amp;nbsp;and&amp;nbsp;I&amp;nbsp;am&amp;nbsp;a&amp;nbsp;fireman.&amp;nbsp;&lt;br&gt;
theFunction.apply(undefined,&amp;nbsp;["Susan",&amp;nbsp;"school&amp;nbsp;teacher"]);//&amp;nbsp;OUTPUT&amp;nbsp;&amp;nbsp;:Object&amp;nbsp;name&amp;nbsp;;&amp;nbsp;My&amp;nbsp;name&amp;nbsp;is&amp;nbsp;Susan&amp;nbsp;and&amp;nbsp;I&amp;nbsp;am&amp;nbsp;a&amp;nbsp;school&amp;nbsp;teacher.&amp;nbsp;&lt;br&gt;
theFunction.call(p1,&amp;nbsp;"Claude",&amp;nbsp;"mathematician");&amp;nbsp;//&amp;nbsp;OUTPUT&amp;nbsp;:&amp;nbsp;Object&amp;nbsp;name&amp;nbsp;andrew;&amp;nbsp;My&amp;nbsp;name&amp;nbsp;is&amp;nbsp;Claude&amp;nbsp;and&amp;nbsp;I&amp;nbsp;am&amp;nbsp;a&amp;nbsp;mathematician.</questionanswer>
  </question>
  <question id="0_2_0_1_0:2" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;OOP&amp;nbsp;in&amp;nbsp;Javascript,&amp;nbsp;describe.&amp;nbsp;What&amp;nbsp;is&amp;nbsp;prototype&amp;nbsp;and&amp;nbsp;constructor&amp;nbsp;?&amp;nbsp;&lt;br&gt;
What&amp;nbsp;are&amp;nbsp;public/privileged/private&amp;nbsp;methods&amp;nbsp;?&amp;nbsp;What&amp;nbsp;are&amp;nbsp;public/private&amp;nbsp;variables&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;?&amp;nbsp;&lt;br&gt;
What&amp;nbsp;are&amp;nbsp;&amp;quot;static&amp;quot;&amp;nbsp;variables&amp;nbsp;?&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>http://phrogz.net/js/classes/OOPinJS.html&lt;br&gt;
===================================&lt;br&gt;
!!!&amp;nbsp;Private&amp;nbsp;variable&amp;nbsp;is&amp;nbsp;variable&amp;nbsp;inside&amp;nbsp;function&amp;nbsp;with&amp;nbsp;var&amp;nbsp;keyword;&lt;br&gt;
!!!&amp;nbsp;Pubilc&amp;nbsp;variables&amp;nbsp;are&amp;nbsp;variables&amp;nbsp;with&amp;nbsp;'this'&amp;nbsp;keyword&amp;nbsp;:&amp;nbsp;&amp;nbsp;this.&lt;name&gt;&amp;nbsp;&lt;br&gt;
!!!&amp;nbsp;Privileged&amp;nbsp;methods&amp;nbsp;are&amp;nbsp;functions&amp;nbsp;which&amp;nbsp;are&amp;nbsp;are&amp;nbsp;defined&amp;nbsp;inside&amp;nbsp;object&amp;nbsp;function&amp;nbsp;,&lt;br&gt;
and&amp;nbsp;have&amp;nbsp;acces&amp;nbsp;to&amp;nbsp;'this'&amp;nbsp;and&amp;nbsp;private&amp;nbsp;variables&amp;nbsp;(this.func&amp;nbsp;=&amp;nbsp;func(){}...)&lt;br&gt;
!!!&amp;nbsp;Public&amp;nbsp;methods&amp;nbsp;are&amp;nbsp;methods&amp;nbsp;defined&amp;nbsp;using&amp;nbsp;&lt;CLASSNAME&gt;.prorotype.method&amp;nbsp;=&amp;nbsp;function()...&lt;br&gt;
they&amp;nbsp;have&amp;nbsp;access&amp;nbsp;to&amp;nbsp;'this',&amp;nbsp;but&amp;nbsp;dont&amp;nbsp;have&amp;nbsp;acces&amp;nbsp;to&amp;nbsp;private&amp;nbsp;variables&amp;nbsp;and&amp;nbsp;methods.&lt;br&gt;
&lt;br&gt;
!!!&amp;nbsp;Static&amp;nbsp;variables&amp;nbsp;are&amp;nbsp;very&amp;nbsp;interesting:&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!&amp;nbsp;Inside&amp;nbsp;object&amp;nbsp;function&amp;nbsp;you&amp;nbsp;can&amp;nbsp;access&amp;nbsp;static&amp;nbsp;context&amp;nbsp;with&amp;nbsp;:&amp;nbsp;'this.constructor.&lt;static_variable&gt;'&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!&amp;nbsp;Outside&amp;nbsp;of&amp;nbsp;object&amp;nbsp;function&amp;nbsp;with&amp;nbsp;:&amp;nbsp;&lt;CLASSNAME&gt;.&lt;static_variable&gt;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;And&amp;nbsp;main&amp;nbsp;TERMS&amp;nbsp;in&amp;nbsp;OOP&amp;nbsp;in&amp;nbsp;JS&amp;nbsp;are&amp;nbsp;:&amp;nbsp;'prototype'&amp;nbsp;and&amp;nbsp;'constructor',&amp;nbsp;they&amp;nbsp;also&amp;nbsp;are&amp;nbsp;using&amp;nbsp;during&amp;nbsp;inheritance&lt;br&gt;
&lt;br&gt;
JAVASCRIPT&amp;nbsp;'prototype'&amp;nbsp;is&amp;nbsp;pointer&amp;nbsp;to&amp;nbsp;another&amp;nbsp;object&amp;nbsp;(using&amp;nbsp;in&amp;nbsp;inhreriatance&amp;nbsp;chains&amp;nbsp;!!!&amp;nbsp;understand&amp;nbsp;this&amp;nbsp;!!!!)&lt;br&gt;
&lt;br&gt;
Good&amp;nbsp;Example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
script&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;Person(n,&amp;nbsp;race){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;test&amp;nbsp;=&amp;nbsp;n;&amp;nbsp;//&amp;nbsp;test&amp;nbsp;become&amp;nbsp;global&amp;nbsp;variable&amp;nbsp;because&amp;nbsp;there&amp;nbsp;is&amp;nbsp;no&amp;nbsp;'var'&amp;nbsp;to&amp;nbsp;be&amp;nbsp;private,&amp;nbsp;or&amp;nbsp;'this'&amp;nbsp;to&amp;nbsp;be&amp;nbsp;public&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;setting&amp;nbsp;'static'&amp;nbsp;variable,&amp;nbsp;&amp;nbsp;'this.consturtor'&amp;nbsp;is&amp;nbsp;like&amp;nbsp;name&amp;nbsp;of&amp;nbsp;class&amp;nbsp;,&amp;nbsp;but&amp;nbsp;&amp;nbsp;'this.consturtor'&amp;nbsp;works&amp;nbsp;only&amp;nbsp;inside&amp;nbsp;function&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.constructor.population++;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;************************************************************************&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;PRIVATE&amp;nbsp;VARIABLES&amp;nbsp;AND&amp;nbsp;FUNCTIONS&amp;nbsp;//&amp;nbsp;!!!&amp;nbsp;ONLY&amp;nbsp;PRIVELEGED&amp;nbsp;METHODS&amp;nbsp;MAY&amp;nbsp;VIEW/EDIT/INVOKE&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;alive&amp;nbsp;=&amp;nbsp;true,&amp;nbsp;age&amp;nbsp;=&amp;nbsp;1,&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;maxAge&amp;nbsp;=&amp;nbsp;70&amp;nbsp;+&amp;nbsp;(&amp;nbsp;Math.round(&amp;nbsp;Math.random()*15)&amp;nbsp;+&amp;nbsp;Math.round(&amp;nbsp;Math.random()*15)),&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;myName&amp;nbsp;=&amp;nbsp;n&amp;nbsp;?&amp;nbsp;n&amp;nbsp;:&amp;nbsp;"John&amp;nbsp;Smith",&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weight&amp;nbsp;=&amp;nbsp;1;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;makeOlder(){&amp;nbsp;return&amp;nbsp;alive&amp;nbsp;=&amp;nbsp;(&amp;nbsp;++age&amp;nbsp;&lt;=&amp;nbsp;maxAge&amp;nbsp;)}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;************************************************************************&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;PRIVILEGED&amp;nbsp;METHODS&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;MAY&amp;nbsp;BE&amp;nbsp;INVOKED&amp;nbsp;PUBLICLY&amp;nbsp;AND&amp;nbsp;MAY&amp;nbsp;ACCESS&amp;nbsp;PRIVATE&amp;nbsp;ITEMS&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;MAY&amp;nbsp;NOT&amp;nbsp;BE&amp;nbsp;CHANGED;&amp;nbsp;MAY&amp;nbsp;BE&amp;nbsp;REPLACED&amp;nbsp;WITH&amp;nbsp;PUBLIC&amp;nbsp;FLAVORS&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.toString&amp;nbsp;=&amp;nbsp;this.getName&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{return&amp;nbsp;myName;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.eat&amp;nbsp;=&amp;nbsp;function(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(makeOlder()){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.dirtFactor++;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weight&amp;nbsp;=&amp;nbsp;weight&amp;nbsp;*&amp;nbsp;3;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}else{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(myName&amp;nbsp;+&amp;nbsp;"&amp;nbsp;:&amp;nbsp;'Cant&amp;nbsp;eat,&amp;nbsp;i&amp;nbsp;am&amp;nbsp;dead'")&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.exercise&amp;nbsp;=&amp;nbsp;function(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(makeOlder()){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.dirtFactor++;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;&amp;nbsp;weight&amp;nbsp;/=&amp;nbsp;2;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.weight&amp;nbsp;=&amp;nbsp;function(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;weight;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.getRace&amp;nbsp;=&amp;nbsp;function(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;race;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.getAge&amp;nbsp;=&amp;nbsp;function(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;age;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.getName&amp;nbsp;=&amp;nbsp;function(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;myName;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.muchTimePasses&amp;nbsp;=&amp;nbsp;function(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;age+=50;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.dirtFactor&amp;nbsp;=&amp;nbsp;10;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;************************************************************************&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;PUBLIC&amp;nbsp;PROPERTIES&amp;nbsp;--&amp;nbsp;ANYONE&amp;nbsp;MAY&amp;nbsp;READ/WRITE&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.clothing="nothing/naked";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.dirtFactor=0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;************************************************************************&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;PUBLIC&amp;nbsp;METHODS&amp;nbsp;--&amp;nbsp;ANYONE&amp;nbsp;MAY&amp;nbsp;READ/WRITE&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Person.prototype.beCool&amp;nbsp;=&amp;nbsp;function(){this.clothing&amp;nbsp;=&amp;nbsp;"khakis&amp;nbsp;and&amp;nbsp;black&amp;nbsp;shirt"}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Person.prototype.shower&amp;nbsp;=&amp;nbsp;function(){this.dirtFactor&amp;nbsp;=&amp;nbsp;2}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Person.prototype.showLegs&amp;nbsp;=&amp;nbsp;function(){console.log(this+"&amp;nbsp;has&amp;nbsp;"+this.legs+"&amp;nbsp;legs")}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Person.prototype.amputate&amp;nbsp;=&amp;nbsp;function(){&amp;nbsp;this.legs--&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;************************************************************************&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;PROTOTYOPE&amp;nbsp;PROERTIES&amp;nbsp;--&amp;nbsp;ANYONE&amp;nbsp;MAY&amp;nbsp;READ/WRITE&amp;nbsp;(but&amp;nbsp;may&amp;nbsp;be&amp;nbsp;overridden)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Person.prototype.legs=2;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;************************************************************************&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;STATIC&amp;nbsp;PROPERTIES&amp;nbsp;--&amp;nbsp;ANYONE&amp;nbsp;MAY&amp;nbsp;READ/WRITE&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Person.population&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&lt;br&gt;
/script&gt;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;script&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;///////////////////////////////////////////////////////////&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Usage&amp;nbsp;of&amp;nbsp;Person&amp;nbsp;class&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;gk=new&amp;nbsp;Person("Gavin","caucasian");&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//New&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Person&amp;nbsp;object&amp;nbsp;created.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;lk=new&amp;nbsp;Person("Lisa","caucasian");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("There&amp;nbsp;are&amp;nbsp;now&amp;nbsp;"&amp;nbsp;+&amp;nbsp;Person.population&amp;nbsp;+&amp;nbsp;"&amp;nbsp;people")&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gk.showLegs();&amp;nbsp;lk.showLegs();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gk.eat();gk.eat();gk.eat();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("gk&amp;nbsp;weight&amp;nbsp;now&amp;nbsp;is&amp;nbsp;:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;gk.weight())&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gk.exercise();gk.beCool();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("gk&amp;nbsp;weight&amp;nbsp;now&amp;nbsp;is&amp;nbsp;:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;gk.weight());&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gk.muchTimePasses();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("Age&amp;nbsp;of&amp;nbsp;gk&amp;nbsp;is&amp;nbsp;:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;gk.getAge())&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gk.muchTimePasses();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gk.eat();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("end&amp;nbsp;of&amp;nbsp;example&amp;nbsp;from&amp;nbsp;article");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("============================");&lt;br&gt;
&lt;/script&gt;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;:&amp;nbsp;&lt;br&gt;
There&amp;nbsp;are&amp;nbsp;now&amp;nbsp;2&amp;nbsp;people&lt;br&gt;
Gavin&amp;nbsp;has&amp;nbsp;2&amp;nbsp;legs&amp;nbsp;tutorial1phrogz_net.html:77&lt;br&gt;
Lisa&amp;nbsp;has&amp;nbsp;2&amp;nbsp;legs&amp;nbsp;tutorial1phrogz_net.html:77&lt;br&gt;
gk&amp;nbsp;weight&amp;nbsp;now&amp;nbsp;is&amp;nbsp;:&amp;nbsp;27&lt;br&gt;
gk&amp;nbsp;weight&amp;nbsp;now&amp;nbsp;is&amp;nbsp;:&amp;nbsp;13.5&lt;br&gt;
Age&amp;nbsp;of&amp;nbsp;gk&amp;nbsp;is&amp;nbsp;:&amp;nbsp;55&lt;br&gt;
Gavin&amp;nbsp;:&amp;nbsp;'Cant&amp;nbsp;eat,&amp;nbsp;i&amp;nbsp;am&amp;nbsp;dead'&amp;nbsp;tutorial1phrogz_net.html:36&lt;br&gt;
end&amp;nbsp;of&amp;nbsp;example&amp;nbsp;from&amp;nbsp;article&lt;br&gt;</questionanswer>
  </question>
  <question id="0_2_0_1_0:3" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Javascript&amp;nbsp;inheritance,&amp;nbsp;describe.(prototype,&amp;nbsp;constructor...)&lt;br&gt;
What&amp;nbsp;is&amp;nbsp;'instanceof'&amp;nbsp;operator&amp;nbsp;in&amp;nbsp;JS&amp;nbsp;?&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>http://phrogz.net/js/classes/OOPinJS2.html&lt;br&gt;
======================================&lt;br&gt;
Prototype&amp;nbsp;is&amp;nbsp;a&amp;nbsp;property&amp;nbsp;of&amp;nbsp;object&amp;nbsp;which&amp;nbsp;contains&amp;nbsp;pointer&amp;nbsp;to&amp;nbsp;another&amp;nbsp;(inherited)&amp;nbsp;object&amp;nbsp;!!&amp;nbsp;REMEMBER&lt;br&gt;
&lt;br&gt;
Most&amp;nbsp;interesting&amp;nbsp;part&amp;nbsp;from&amp;nbsp;example&lt;br&gt;
..&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Inheritance&amp;nbsp;begin&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Cat.prototype&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Mammal();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Cat.prototype.constructor&amp;nbsp;=&amp;nbsp;Cat;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Cat.prototype.parent&amp;nbsp;=&amp;nbsp;Mammal.prototype;&amp;nbsp;//&amp;nbsp;need&amp;nbsp;to&amp;nbsp;add&amp;nbsp;possiblity&amp;nbsp;to&amp;nbsp;call&amp;nbsp;parent&amp;nbsp;methods&lt;br&gt;
...&lt;br&gt;
========&lt;br&gt;
Example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;Mammal(name){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.name&amp;nbsp;=&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.offspring&amp;nbsp;=&amp;nbsp;[];&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mammal.prototype.haveABaby&amp;nbsp;=&amp;nbsp;function(babyName){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;newBaby&amp;nbsp;=&amp;nbsp;new&amp;nbsp;&amp;nbsp;this.constructor(babyName);&amp;nbsp;//&amp;nbsp;create&amp;nbsp;instance&amp;nbsp;using&amp;nbsp;constructor&amp;nbsp;property!!!!&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.offspring.push(newBaby);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mammal.prototype.toString&amp;nbsp;=&amp;nbsp;function(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;"[&amp;nbsp;Mammal&amp;nbsp;:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;this.name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;Cat(name){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.parent.constructor.call(this,&amp;nbsp;name);&amp;nbsp;//&amp;nbsp;call&amp;nbsp;parent&amp;nbsp;constructor,&amp;nbsp;parent&amp;nbsp;we&amp;nbsp;set&amp;nbsp;during&amp;nbsp;inheritance&amp;nbsp;&amp;nbsp;Cat.prototype.parent&amp;nbsp;=&amp;nbsp;Mammal.prototype;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;additional&amp;nbsp;functionality&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.concreteType&amp;nbsp;=&amp;nbsp;"Cat";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Inheritance&amp;nbsp;begin&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Cat.prototype&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Mammal();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Cat.prototype.constructor&amp;nbsp;=&amp;nbsp;Cat;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Cat.prototype.parent&amp;nbsp;=&amp;nbsp;Mammal.prototype;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Cat.prototype.toString&amp;nbsp;=&amp;nbsp;function(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.constructor.stat&amp;nbsp;=&amp;nbsp;"stat";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;"[&amp;nbsp;Cat&amp;nbsp;:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;this.name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
///////////&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;c&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Cat("Jerry");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;m&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Mammal("rob");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c.haveABaby("Jerry&amp;nbsp;baby&amp;nbsp;1");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c.haveABaby("Jerry&amp;nbsp;baby&amp;nbsp;2");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(c.toString());&amp;nbsp;//&amp;nbsp;Jerry&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(m.toString());&amp;nbsp;//&amp;nbsp;rob&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(c.concreteType);&amp;nbsp;//&amp;nbsp;Cat&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("Children&amp;nbsp;of&amp;nbsp;Jerry&amp;nbsp;:&amp;nbsp;");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c.offspring.forEach(function(item){console.log(item.name&amp;nbsp;+&amp;nbsp;":"&amp;nbsp;+&amp;nbsp;item.concreteType)})&amp;nbsp;//&amp;nbsp;Jerrybaby1,&amp;nbsp;Jerrybaby2&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("----------------&amp;nbsp;instanceof&amp;nbsp;example&amp;nbsp;------");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(c&amp;nbsp;instanceof&amp;nbsp;Mammal);&amp;nbsp;//&amp;nbsp;true&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(c&amp;nbsp;instanceof&amp;nbsp;Cat);&amp;nbsp;//&amp;nbsp;true&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(m&amp;nbsp;instanceof&amp;nbsp;Mammal);&amp;nbsp;//true&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(m&amp;nbsp;instanceof&amp;nbsp;Cat);&amp;nbsp;//false&lt;br&gt;</questionanswer>
  </question>
  <question id="0_2_0_1_0:4" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Use&amp;nbsp;of&amp;nbsp;the&amp;nbsp;JavaScript&amp;nbsp;'bind'&amp;nbsp;method,&amp;nbsp;describe.&lt;br&gt;
Provide&amp;nbsp;example.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>The&amp;nbsp;bind()&amp;nbsp;method&amp;nbsp;creates&amp;nbsp;a&amp;nbsp;new&amp;nbsp;function&amp;nbsp;that,&amp;nbsp;when&amp;nbsp;called,&amp;nbsp;has&amp;nbsp;its&amp;nbsp;this&amp;nbsp;keyword&amp;nbsp;set&amp;nbsp;to&amp;nbsp;the&amp;nbsp;provided&lt;br&gt;
value,&amp;nbsp;with&amp;nbsp;a&amp;nbsp;given&amp;nbsp;sequence&amp;nbsp;of&amp;nbsp;arguments&amp;nbsp;preceding&amp;nbsp;any&amp;nbsp;provided&amp;nbsp;when&lt;br&gt;
the&amp;nbsp;new&amp;nbsp;function&amp;nbsp;is&amp;nbsp;called.&lt;br&gt;
Syntax&lt;br&gt;
fun.bind(thisArg[,&amp;nbsp;arg1[,&amp;nbsp;arg2[,&amp;nbsp;...]]])&lt;br&gt;
Parameters&lt;br&gt;
&lt;br&gt;
thisArg&lt;br&gt;
The&amp;nbsp;value&amp;nbsp;to&amp;nbsp;be&amp;nbsp;passed&amp;nbsp;as&amp;nbsp;the&amp;nbsp;this&amp;nbsp;parameter&amp;nbsp;to&amp;nbsp;the&amp;nbsp;target&amp;nbsp;function&amp;nbsp;when&amp;nbsp;the&amp;nbsp;bound&amp;nbsp;function&amp;nbsp;is&lt;br&gt;
called.&amp;nbsp;The&amp;nbsp;value&amp;nbsp;is&amp;nbsp;ignored&amp;nbsp;if&amp;nbsp;the&amp;nbsp;bound&amp;nbsp;function&amp;nbsp;is&amp;nbsp;constructed&amp;nbsp;using&amp;nbsp;the&amp;nbsp;new&amp;nbsp;operator.&lt;br&gt;
arg1,&amp;nbsp;arg2,&amp;nbsp;...&lt;br&gt;
Arguments&amp;nbsp;to&amp;nbsp;prepend&amp;nbsp;to&amp;nbsp;arguments&amp;nbsp;provided&amp;nbsp;to&amp;nbsp;the&amp;nbsp;bound&amp;nbsp;function&amp;nbsp;when&amp;nbsp;invoking&amp;nbsp;the&amp;nbsp;target&amp;nbsp;function.&lt;br&gt;
&lt;br&gt;
==================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;sendRequest(url,&amp;nbsp;callback)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data&amp;nbsp;=&amp;nbsp;5;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;callback(data);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;myObj&amp;nbsp;=&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;num:&amp;nbsp;10,&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;callback:&amp;nbsp;function&amp;nbsp;(data)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.num&amp;nbsp;+=&amp;nbsp;data;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(this.num)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;loadData:&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sendRequest("google",&amp;nbsp;this.callback.bind(this))&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;OUTPUT&amp;nbsp;:&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;myObj.loadData();&amp;nbsp;//&amp;nbsp;15&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;myObj.loadData();&amp;nbsp;//&amp;nbsp;20&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;myObj.loadData();&amp;nbsp;//&amp;nbsp;25&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;OUTPUT&amp;nbsp;:&amp;nbsp;&amp;nbsp;IF&amp;nbsp;WE&amp;nbsp;REMOVE&amp;nbsp;bind(this)&amp;nbsp;,&lt;br&gt;
/*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;myObj.loadData();&amp;nbsp;//&amp;nbsp;NaN&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;myObj.loadData();&amp;nbsp;//&amp;nbsp;NaN&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;myObj.loadData();&amp;nbsp;//&amp;nbsp;NaN&lt;br&gt;
*/</questionanswer>
  </question>
  <question id="0_2_0_1_0:5" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Can&amp;nbsp;I&amp;nbsp;name&amp;nbsp;a&amp;nbsp;javascript&amp;nbsp;function&amp;nbsp;and&amp;nbsp;execute&lt;br&gt;
it&amp;nbsp;immediately?&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>https://en.wikipedia.org/wiki/Immediately-invoked_function_expression&lt;br&gt;
================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IIFE&lt;br&gt;
An&amp;nbsp;immediately-invoked&amp;nbsp;function&amp;nbsp;expression&amp;nbsp;(or&amp;nbsp;IIFE,&amp;nbsp;pronounced&amp;nbsp;"iffy"[1])&amp;nbsp;is&amp;nbsp;a&amp;nbsp;JavaScript&amp;nbsp;design&amp;nbsp;pattern&lt;br&gt;
which&amp;nbsp;produces&amp;nbsp;a&amp;nbsp;lexical&amp;nbsp;scope&amp;nbsp;using&amp;nbsp;JavaScript's&amp;nbsp;function&amp;nbsp;scoping.&amp;nbsp;Immediately-invoked&amp;nbsp;function&amp;nbsp;expressions&lt;br&gt;
can&amp;nbsp;be&amp;nbsp;used&amp;nbsp;to&amp;nbsp;avoid&amp;nbsp;variable&amp;nbsp;hoisting&amp;nbsp;from&amp;nbsp;within&amp;nbsp;blocks,&amp;nbsp;protect&amp;nbsp;against&amp;nbsp;polluting&amp;nbsp;the&amp;nbsp;global&amp;nbsp;environment&lt;br&gt;
and&amp;nbsp;simultaneously&amp;nbsp;allow&amp;nbsp;public&amp;nbsp;access&amp;nbsp;to&amp;nbsp;methods&amp;nbsp;while&amp;nbsp;retaining&amp;nbsp;privacy&amp;nbsp;for&amp;nbsp;variables&amp;nbsp;defined&amp;nbsp;within&amp;nbsp;the&amp;nbsp;function.&lt;br&gt;
This&amp;nbsp;pattern&amp;nbsp;has&amp;nbsp;been&amp;nbsp;referred&amp;nbsp;to&amp;nbsp;as&amp;nbsp;a&amp;nbsp;self-executing&amp;nbsp;anonymous&amp;nbsp;function,[2]&amp;nbsp;but&amp;nbsp;Ben&amp;nbsp;Alman&amp;nbsp;introduced&lt;br&gt;
the&amp;nbsp;term&amp;nbsp;IIFE&amp;nbsp;as&amp;nbsp;a&amp;nbsp;more&amp;nbsp;semantically&amp;nbsp;accurate&amp;nbsp;term&amp;nbsp;for&amp;nbsp;the&amp;nbsp;pattern,&amp;nbsp;shortly&amp;nbsp;after&amp;nbsp;its&amp;nbsp;discussion&amp;nbsp;arose&amp;nbsp;on&amp;nbsp;comp.lang.javascript&lt;br&gt;
&lt;br&gt;
There&amp;nbsp;are&amp;nbsp;two&amp;nbsp;ways&amp;nbsp;to&amp;nbsp;define&amp;nbsp;a&amp;nbsp;function&amp;nbsp;in&amp;nbsp;JavaScript.&lt;br&gt;
-&amp;nbsp;A&amp;nbsp;function&amp;nbsp;declaration:&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;foo(){&amp;nbsp;...&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
-&amp;nbsp;and&amp;nbsp;a&amp;nbsp;function&amp;nbsp;expression,&amp;nbsp;which&amp;nbsp;is&amp;nbsp;ANY&amp;nbsp;way&amp;nbsp;of&amp;nbsp;defining&amp;nbsp;a&amp;nbsp;function&amp;nbsp;other&amp;nbsp;than&amp;nbsp;the&amp;nbsp;above:&lt;br&gt;
var&amp;nbsp;foo&amp;nbsp;=&amp;nbsp;function(){};&lt;br&gt;
(function(){})();&lt;br&gt;
var&amp;nbsp;foo&amp;nbsp;=&amp;nbsp;{bar&amp;nbsp;:&amp;nbsp;function(){}};&lt;br&gt;
&lt;br&gt;
=----------&lt;br&gt;
Ex1:&lt;br&gt;
(function&amp;nbsp;(){console.log("000")})()&lt;br&gt;
OUTPUT&amp;nbsp;:&lt;br&gt;
000&amp;nbsp;&lt;br&gt;
&lt;br&gt;
---------------&lt;br&gt;
(function&amp;nbsp;fff(){console.log("000")})()&lt;br&gt;
000&amp;nbsp;&lt;br&gt;
fff()&lt;br&gt;
OUTPUT&amp;nbsp;:&amp;nbsp;&lt;br&gt;
ReferenceError:&amp;nbsp;fff&amp;nbsp;is&amp;nbsp;not&amp;nbsp;defined&lt;br&gt;
----------------&lt;br&gt;
&lt;br&gt;
var&amp;nbsp;temp&amp;nbsp;=&amp;nbsp;"1234";&lt;br&gt;
(function&amp;nbsp;(arg){console.log(this.temp&amp;nbsp;+":"+arg)})("567")&lt;br&gt;
OUTPUT&amp;nbsp;:&amp;nbsp;&lt;br&gt;
1234:567</questionanswer>
  </question>
  <question id="0_2_0_1_0:6" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;What&amp;nbsp;is&amp;nbsp;__proto__&amp;nbsp;property&amp;nbsp;of&amp;nbsp;JS&amp;nbsp;objects&amp;nbsp;?&amp;nbsp;&lt;br&gt;
__proto__&amp;nbsp;VS&amp;nbsp;prototype&amp;nbsp;in&amp;nbsp;JavaScript.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>prototype&amp;nbsp;&amp;nbsp;&amp;nbsp;is&amp;nbsp;a&amp;nbsp;property&amp;nbsp;of&amp;nbsp;a&amp;nbsp;Function&amp;nbsp;object.&amp;nbsp;It&amp;nbsp;is&amp;nbsp;the&amp;nbsp;prototype&amp;nbsp;of&amp;nbsp;objects&amp;nbsp;constructed&amp;nbsp;by&amp;nbsp;that&amp;nbsp;function.&lt;br&gt;
__proto__&amp;nbsp;&amp;nbsp;&amp;nbsp;is&amp;nbsp;internal&amp;nbsp;property&amp;nbsp;of&amp;nbsp;an&amp;nbsp;object,&amp;nbsp;pointing&amp;nbsp;to&amp;nbsp;its&amp;nbsp;prototype.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
function&amp;nbsp;Point(x,&amp;nbsp;y)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.x&amp;nbsp;=&amp;nbsp;x;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.y&amp;nbsp;=&amp;nbsp;y;&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
var&amp;nbsp;myPoint&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Point();&lt;br&gt;
&lt;br&gt;
//&amp;nbsp;the&amp;nbsp;following&amp;nbsp;are&amp;nbsp;all&amp;nbsp;true&lt;br&gt;
myPoint.__proto__&amp;nbsp;==&amp;nbsp;Point.prototype&lt;br&gt;
myPoint.__proto__.__proto__&amp;nbsp;==&amp;nbsp;Object.prototype&lt;br&gt;
myPoint&amp;nbsp;instanceof&amp;nbsp;Point;&lt;br&gt;
myPoint&amp;nbsp;instanceof&amp;nbsp;Object;&lt;br&gt;
=======================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;My&amp;nbsp;example&amp;nbsp;&amp;nbsp;:&lt;br&gt;
function&amp;nbsp;Foo(){}&lt;br&gt;
a&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Foo()&lt;br&gt;
b&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Foo()&lt;br&gt;
&lt;br&gt;
Foo.prototype.say1&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(){console.log(1)}&lt;br&gt;
//a.prototype.say2&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(){console.log(2)}&amp;nbsp;//&amp;nbsp;error&lt;br&gt;
a.__proto__.say3&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(){console.log(3)}&amp;nbsp;//&amp;nbsp;OK&lt;br&gt;
&lt;br&gt;
a.say1()&amp;nbsp;//&amp;nbsp;1&amp;nbsp;&lt;br&gt;
b.say1()&amp;nbsp;//&amp;nbsp;1&lt;br&gt;
a.say3()&amp;nbsp;//&amp;nbsp;3&lt;br&gt;
b.say3()&amp;nbsp;//&amp;nbsp;3</questionanswer>
  </question>
  <question id="0_2_0_1_0:7" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Methods&amp;nbsp;in&amp;nbsp;Object&amp;nbsp;class,&amp;nbsp;describe.&lt;br&gt;
The&amp;nbsp;difference&amp;nbsp;between&amp;nbsp;Object.create()&amp;nbsp;and&amp;nbsp;new&amp;nbsp;SomeFunction(),&amp;nbsp;describe?&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&lt;br&gt;
===============================================&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Methods&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Object&amp;nbsp;constructor&lt;br&gt;
&lt;br&gt;
Object.assign()&lt;br&gt;
Creates&amp;nbsp;a&amp;nbsp;new&amp;nbsp;object&amp;nbsp;by&amp;nbsp;copying&amp;nbsp;the&amp;nbsp;values&amp;nbsp;of&amp;nbsp;all&amp;nbsp;enumerable&amp;nbsp;own&amp;nbsp;properties&amp;nbsp;from&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&amp;nbsp;source&amp;nbsp;objects&amp;nbsp;to&amp;nbsp;a&amp;nbsp;target&amp;nbsp;object.&lt;br&gt;
Object.create()&lt;br&gt;
Creates&amp;nbsp;a&amp;nbsp;new&amp;nbsp;object&amp;nbsp;with&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;prototype&amp;nbsp;object&amp;nbsp;and&amp;nbsp;properties.&lt;br&gt;
Object.defineProperty()&lt;br&gt;
Adds&amp;nbsp;the&amp;nbsp;named&amp;nbsp;property&amp;nbsp;described&amp;nbsp;by&amp;nbsp;a&amp;nbsp;given&amp;nbsp;descriptor&amp;nbsp;to&amp;nbsp;an&amp;nbsp;object.&lt;br&gt;
Object.defineProperties()&lt;br&gt;
Adds&amp;nbsp;the&amp;nbsp;named&amp;nbsp;properties&amp;nbsp;described&amp;nbsp;by&amp;nbsp;the&amp;nbsp;given&amp;nbsp;descriptors&amp;nbsp;to&amp;nbsp;an&amp;nbsp;object.&lt;br&gt;
Object.entries()&amp;nbsp;&lt;br&gt;
Returns&amp;nbsp;an&amp;nbsp;array&amp;nbsp;of&amp;nbsp;a&amp;nbsp;given&amp;nbsp;object's&amp;nbsp;own&amp;nbsp;enumerable&amp;nbsp;property&amp;nbsp;[key,&amp;nbsp;value]&amp;nbsp;pairs.&lt;br&gt;
Object.freeze()&lt;br&gt;
Freezes&amp;nbsp;an&amp;nbsp;object:&amp;nbsp;other&amp;nbsp;code&amp;nbsp;can't&amp;nbsp;delete&amp;nbsp;or&amp;nbsp;change&amp;nbsp;any&amp;nbsp;properties.&lt;br&gt;
Object.getOwnPropertyDescriptor()&lt;br&gt;
Returns&amp;nbsp;a&amp;nbsp;property&amp;nbsp;descriptor&amp;nbsp;for&amp;nbsp;a&amp;nbsp;named&amp;nbsp;property&amp;nbsp;on&amp;nbsp;an&amp;nbsp;object.&lt;br&gt;
Object.getOwnPropertyNames()&lt;br&gt;
Returns&amp;nbsp;an&amp;nbsp;array&amp;nbsp;containing&amp;nbsp;the&amp;nbsp;names&amp;nbsp;of&amp;nbsp;all&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;object's&amp;nbsp;own&amp;nbsp;enumerable&amp;nbsp;and&amp;nbsp;non-enumerable&amp;nbsp;properties.&lt;br&gt;
Object.getOwnPropertySymbols()&lt;br&gt;
Returns&amp;nbsp;an&amp;nbsp;array&amp;nbsp;of&amp;nbsp;all&amp;nbsp;symbol&amp;nbsp;properties&amp;nbsp;found&amp;nbsp;directly&amp;nbsp;upon&amp;nbsp;a&amp;nbsp;given&amp;nbsp;object.&lt;br&gt;
Object.getPrototypeOf()&lt;br&gt;
Returns&amp;nbsp;the&amp;nbsp;prototype&amp;nbsp;of&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;object.&lt;br&gt;
Object.is()&lt;br&gt;
Compares&amp;nbsp;if&amp;nbsp;two&amp;nbsp;values&amp;nbsp;are&amp;nbsp;distinguishable&amp;nbsp;(ie.&amp;nbsp;the&amp;nbsp;same)&lt;br&gt;
Object.isExtensible()&lt;br&gt;
Determines&amp;nbsp;if&amp;nbsp;extending&amp;nbsp;of&amp;nbsp;an&amp;nbsp;object&amp;nbsp;is&amp;nbsp;allowed.&lt;br&gt;
Object.isFrozen()&lt;br&gt;
Determines&amp;nbsp;if&amp;nbsp;an&amp;nbsp;object&amp;nbsp;was&amp;nbsp;frozen.&lt;br&gt;
Object.isSealed()&lt;br&gt;
Determines&amp;nbsp;if&amp;nbsp;an&amp;nbsp;object&amp;nbsp;is&amp;nbsp;sealed.&lt;br&gt;
Object.keys()&lt;br&gt;
Returns&amp;nbsp;an&amp;nbsp;array&amp;nbsp;containing&amp;nbsp;the&amp;nbsp;names&amp;nbsp;of&amp;nbsp;all&amp;nbsp;of&amp;nbsp;the&amp;nbsp;given&amp;nbsp;object's&amp;nbsp;own&amp;nbsp;enumerable&amp;nbsp;properties.&lt;br&gt;
Object.observe()&amp;nbsp;&lt;br&gt;
Asynchronously&amp;nbsp;observes&amp;nbsp;changes&amp;nbsp;to&amp;nbsp;an&amp;nbsp;object.&lt;br&gt;
Object.getNotifier()&amp;nbsp;&lt;br&gt;
Get&amp;nbsp;a&amp;nbsp;notifier&amp;nbsp;with&amp;nbsp;which&amp;nbsp;to&amp;nbsp;create&amp;nbsp;object&amp;nbsp;changes&amp;nbsp;manually.&lt;br&gt;
Object.preventExtensions()&lt;br&gt;
Prevents&amp;nbsp;any&amp;nbsp;extensions&amp;nbsp;of&amp;nbsp;an&amp;nbsp;object.&lt;br&gt;
Object.seal()&lt;br&gt;
Prevents&amp;nbsp;other&amp;nbsp;code&amp;nbsp;from&amp;nbsp;deleting&amp;nbsp;properties&amp;nbsp;of&amp;nbsp;an&amp;nbsp;object.&lt;br&gt;
Object.setPrototypeOf()&lt;br&gt;
Sets&amp;nbsp;the&amp;nbsp;prototype&amp;nbsp;(i.e.,&amp;nbsp;the&amp;nbsp;internal&amp;nbsp;[[Prototype]]&amp;nbsp;property)&lt;br&gt;
Object.unobserve()&amp;nbsp;&lt;br&gt;
Unobserves&amp;nbsp;changes&amp;nbsp;to&amp;nbsp;an&amp;nbsp;object.&lt;br&gt;
Object.values()&amp;nbsp;&lt;br&gt;
Returns&amp;nbsp;an&amp;nbsp;array&amp;nbsp;of&amp;nbsp;a&amp;nbsp;given&amp;nbsp;object's&amp;nbsp;own&amp;nbsp;enumerable&amp;nbsp;values.&lt;br&gt;
==============================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object.create&lt;br&gt;
The&amp;nbsp;Object.create()&amp;nbsp;method&amp;nbsp;creates&amp;nbsp;a&amp;nbsp;new&amp;nbsp;object&amp;nbsp;with&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;prototype&amp;nbsp;object&amp;nbsp;and&amp;nbsp;properties.&lt;br&gt;
&lt;br&gt;
Syntax&lt;br&gt;
Object.create(proto[,&amp;nbsp;propertiesObject])&lt;br&gt;
&lt;br&gt;
Parameters&lt;br&gt;
&lt;br&gt;
proto&lt;br&gt;
The&amp;nbsp;object&amp;nbsp;which&amp;nbsp;should&amp;nbsp;be&amp;nbsp;the&amp;nbsp;prototype&amp;nbsp;of&amp;nbsp;the&amp;nbsp;newly-created&amp;nbsp;object.&lt;br&gt;
propertiesObject&lt;br&gt;
Optional.&amp;nbsp;If&amp;nbsp;specified&amp;nbsp;and&amp;nbsp;not&amp;nbsp;undefined,&amp;nbsp;an&amp;nbsp;object&amp;nbsp;whose&amp;nbsp;enumerable&amp;nbsp;own&amp;nbsp;properties&amp;nbsp;(that&amp;nbsp;is,&amp;nbsp;those&amp;nbsp;properties&amp;nbsp;defined&amp;nbsp;upon&amp;nbsp;itself&amp;nbsp;and&amp;nbsp;not&amp;nbsp;enumerable&amp;nbsp;properties&amp;nbsp;along&amp;nbsp;its&amp;nbsp;prototype&amp;nbsp;chain)&amp;nbsp;specify&amp;nbsp;property&amp;nbsp;descriptors&amp;nbsp;to&amp;nbsp;be&amp;nbsp;added&amp;nbsp;to&amp;nbsp;the&amp;nbsp;newly-created&amp;nbsp;object,&amp;nbsp;with&amp;nbsp;the&amp;nbsp;corresponding&amp;nbsp;property&amp;nbsp;names.&amp;nbsp;These&amp;nbsp;properties&amp;nbsp;correspond&amp;nbsp;to&amp;nbsp;the&amp;nbsp;second&amp;nbsp;argument&amp;nbsp;of&amp;nbsp;Object.defineProperties().&lt;br&gt;
&lt;br&gt;
~~!!!!!!!!!!!!!!!!!!!!!!&lt;br&gt;
------&gt;&gt;&gt;&gt;&gt;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!!!!!!!!!!!!!!!!&amp;nbsp;Understanding&amp;nbsp;the&amp;nbsp;difference&amp;nbsp;between&amp;nbsp;Object.create()&amp;nbsp;and&amp;nbsp;new&amp;nbsp;SomeFunction()&lt;br&gt;
Very&amp;nbsp;simply&amp;nbsp;said,&amp;nbsp;new&amp;nbsp;X&amp;nbsp;is&amp;nbsp;Object.create(X.prototype)&amp;nbsp;with&amp;nbsp;additionally&amp;nbsp;running&amp;nbsp;the&amp;nbsp;constructor&amp;nbsp;function.&lt;br&gt;
(And&amp;nbsp;giving&amp;nbsp;the&amp;nbsp;constructor&amp;nbsp;the&amp;nbsp;chance&amp;nbsp;to&amp;nbsp;return&amp;nbsp;the&amp;nbsp;actual&amp;nbsp;object&amp;nbsp;that&amp;nbsp;should&amp;nbsp;be&amp;nbsp;the&amp;nbsp;result&amp;nbsp;of&amp;nbsp;the&amp;nbsp;expression&amp;nbsp;instead&amp;nbsp;of&amp;nbsp;this.)&lt;br&gt;
That’s&amp;nbsp;it.&amp;nbsp;:)&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;:&lt;br&gt;
function&amp;nbsp;Foo(){this.v&amp;nbsp;=&amp;nbsp;"v";this.say1=&amp;nbsp;function(){console.log(1)}}&lt;br&gt;
a&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Foo();&lt;br&gt;
b&amp;nbsp;=&amp;nbsp;Object.create(Foo);&amp;nbsp;//&amp;nbsp;silly,&amp;nbsp;dont&amp;nbsp;do&amp;nbsp;this.&lt;br&gt;
c&amp;nbsp;=&amp;nbsp;Object.create(new&amp;nbsp;Foo())&lt;br&gt;
p&amp;nbsp;=&amp;nbsp;Object.create(Foo.prototype)&lt;br&gt;
&lt;br&gt;
//&amp;nbsp;remember&amp;nbsp;that&amp;nbsp;instanceof&amp;nbsp;check&amp;nbsp;constructor&amp;nbsp;!!!!&amp;nbsp;&lt;br&gt;
a&amp;nbsp;instanceof&amp;nbsp;Foo;&amp;nbsp;//&amp;nbsp;true&lt;br&gt;
b&amp;nbsp;instanceof&amp;nbsp;Foo&amp;nbsp;;&amp;nbsp;//&amp;nbsp;false&lt;br&gt;
c&amp;nbsp;instanceof&amp;nbsp;Foo;&amp;nbsp;//&amp;nbsp;true&lt;br&gt;
p&amp;nbsp;instanceof&amp;nbsp;Foo&amp;nbsp;//&amp;nbsp;true&lt;br&gt;
&lt;br&gt;
a.say1();&amp;nbsp;//1&lt;br&gt;
b.say1();&amp;nbsp;//&amp;nbsp;error&lt;br&gt;
c.say1();&amp;nbsp;//&amp;nbsp;1&lt;br&gt;
=================================================&lt;br&gt;
P.S&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;instanceof&amp;nbsp;operator&amp;nbsp;tests&amp;nbsp;whether&amp;nbsp;an&amp;nbsp;object&amp;nbsp;has&amp;nbsp;in&amp;nbsp;its&amp;nbsp;prototype&amp;nbsp;chain&amp;nbsp;the&amp;nbsp;prototype&amp;nbsp;property&amp;nbsp;of&amp;nbsp;a&amp;nbsp;constructor.&lt;br&gt;
&lt;br&gt;
Syntax&lt;br&gt;
object&amp;nbsp;instanceof&amp;nbsp;constructor&lt;br&gt;
&lt;br&gt;</questionanswer>
  </question>
  <question id="0_2_0_1_0:8" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Javascript&amp;nbsp;inheritance&amp;nbsp;patterns,&amp;nbsp;describe.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>http://davidshariff.com/blog/javascript-inheritance-patterns/#first-article&lt;br&gt;
=============================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Pseudoclassical&amp;nbsp;pattern(prototypal)&lt;br&gt;
The&amp;nbsp;Pseudoclassical&amp;nbsp;pattern&amp;nbsp;tries&amp;nbsp;to&amp;nbsp;replicate&amp;nbsp;inheritance&amp;nbsp;in&amp;nbsp;a&amp;nbsp;way&amp;nbsp;that&amp;nbsp;is&amp;nbsp;familiar&amp;nbsp;to&amp;nbsp;those&amp;nbsp;who&amp;nbsp;come&amp;nbsp;from&amp;nbsp;a&amp;nbsp;Java&amp;nbsp;or&amp;nbsp;C&lt;br&gt;
like&amp;nbsp;background.&amp;nbsp;By&amp;nbsp;using&amp;nbsp;Pseudoclassical&amp;nbsp;inheritance,&amp;nbsp;we&amp;nbsp;attempt&amp;nbsp;to&amp;nbsp;recreate&amp;nbsp;classic&amp;nbsp;programming&amp;nbsp;language’s&amp;nbsp;behavior&lt;br&gt;
by&amp;nbsp;using&amp;nbsp;class&amp;nbsp;wide&amp;nbsp;inheritance&amp;nbsp;and&amp;nbsp;where&amp;nbsp;objects&amp;nbsp;are&amp;nbsp;instances&amp;nbsp;of&amp;nbsp;those&amp;nbsp;classes.&lt;br&gt;
&lt;br&gt;
A&amp;nbsp;pattern&amp;nbsp;which&amp;nbsp;uses&amp;nbsp;a&amp;nbsp;constructor&amp;nbsp;function&amp;nbsp;and&amp;nbsp;the&amp;nbsp;new&amp;nbsp;operator,&amp;nbsp;combined&amp;nbsp;with&amp;nbsp;a&amp;nbsp;prototype&amp;nbsp;added&amp;nbsp;to&amp;nbsp;the&lt;br&gt;
constructor&amp;nbsp;is&amp;nbsp;said&amp;nbsp;to&amp;nbsp;be&amp;nbsp;Pseudoclassical.&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;JavaScript,&amp;nbsp;one&amp;nbsp;way&amp;nbsp;to&amp;nbsp;do&amp;nbsp;this&amp;nbsp;inheritance&amp;nbsp;is:&lt;br&gt;
&amp;nbsp;1)Invoke&amp;nbsp;a&amp;nbsp;constructor&amp;nbsp;function.&lt;br&gt;
&amp;nbsp;2)Point&amp;nbsp;a&amp;nbsp;child’s&amp;nbsp;prototype&amp;nbsp;to&amp;nbsp;the&amp;nbsp;parent’s&amp;nbsp;prototype&amp;nbsp;for&amp;nbsp;inheritance&amp;nbsp;to&amp;nbsp;occur.&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
/**&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Point&amp;nbsp;a&amp;nbsp;child's&amp;nbsp;prototype&amp;nbsp;to&amp;nbsp;a&amp;nbsp;parent's&amp;nbsp;prototype&lt;br&gt;
&amp;nbsp;**/&lt;br&gt;
var&amp;nbsp;extendObj&amp;nbsp;=&amp;nbsp;function(childObj,&amp;nbsp;parentObj)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;childObj.prototype&amp;nbsp;=&amp;nbsp;new&amp;nbsp;parentObj;&lt;br&gt;
};&lt;br&gt;
&lt;br&gt;
//&amp;nbsp;base&amp;nbsp;human&amp;nbsp;object&lt;br&gt;
var&amp;nbsp;Human&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{};&lt;br&gt;
//&amp;nbsp;inhertiable&amp;nbsp;attributes&amp;nbsp;/&amp;nbsp;methods&lt;br&gt;
Human.prototype&amp;nbsp;=&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name:&amp;nbsp;'',&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gender:&amp;nbsp;'',&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;planetOfBirth:&amp;nbsp;'Earth',&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sayGender:&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(this.name&amp;nbsp;+&amp;nbsp;'&amp;nbsp;says&amp;nbsp;my&amp;nbsp;gender&amp;nbsp;is&amp;nbsp;'&amp;nbsp;+&amp;nbsp;this.gender);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sayPlanet:&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(this.name&amp;nbsp;+&amp;nbsp;'&amp;nbsp;was&amp;nbsp;born&amp;nbsp;on&amp;nbsp;'&amp;nbsp;+&amp;nbsp;this.planetOfBirth);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
};&lt;br&gt;
&lt;br&gt;
//&amp;nbsp;male&lt;br&gt;
var&amp;nbsp;Male&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(name)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.gender&amp;nbsp;=&amp;nbsp;'Male';&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.name&amp;nbsp;=&amp;nbsp;'David';&lt;br&gt;
};&lt;br&gt;
//&amp;nbsp;inherits&amp;nbsp;human&lt;br&gt;
extendObj(Male,&amp;nbsp;Human);&lt;br&gt;
&lt;br&gt;
//&amp;nbsp;female&lt;br&gt;
var&amp;nbsp;Female&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(name)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.name&amp;nbsp;=&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.gender&amp;nbsp;=&amp;nbsp;'Female';&lt;br&gt;
};&lt;br&gt;
//&amp;nbsp;inherits&amp;nbsp;human&lt;br&gt;
extendObj(Female,&amp;nbsp;Human);&lt;br&gt;
&lt;br&gt;
//&amp;nbsp;new&amp;nbsp;instances&lt;br&gt;
var&amp;nbsp;david&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Male('David');&lt;br&gt;
var&amp;nbsp;jane&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Female('Jane');&lt;br&gt;
&lt;br&gt;
david.sayGender();&amp;nbsp;//&amp;nbsp;David&amp;nbsp;says&amp;nbsp;my&amp;nbsp;gender&amp;nbsp;is&amp;nbsp;Male&lt;br&gt;
jane.sayGender();&amp;nbsp;//&amp;nbsp;Jane&amp;nbsp;says&amp;nbsp;my&amp;nbsp;gender&amp;nbsp;is&amp;nbsp;Female&lt;br&gt;
&lt;br&gt;
Male.prototype.planetOfBirth&amp;nbsp;=&amp;nbsp;'Mars';&lt;br&gt;
david.sayPlanet();&amp;nbsp;//&amp;nbsp;David&amp;nbsp;was&amp;nbsp;born&amp;nbsp;on&amp;nbsp;Mars&lt;br&gt;
jane.sayPlanet();&amp;nbsp;//&amp;nbsp;Jane&amp;nbsp;was&amp;nbsp;born&amp;nbsp;on&amp;nbsp;Mars&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;:&amp;nbsp;&lt;br&gt;
David&amp;nbsp;says&amp;nbsp;my&amp;nbsp;gender&amp;nbsp;is&amp;nbsp;Male&amp;nbsp;&lt;br&gt;
Jane&amp;nbsp;says&amp;nbsp;my&amp;nbsp;gender&amp;nbsp;is&amp;nbsp;Female&amp;nbsp;&lt;br&gt;
David&amp;nbsp;was&amp;nbsp;born&amp;nbsp;on&amp;nbsp;Mars&lt;br&gt;
Jane&amp;nbsp;was&amp;nbsp;born&amp;nbsp;on&amp;nbsp;Earth&amp;nbsp;&lt;br&gt;
&lt;br&gt;
=========================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Functional&amp;nbsp;pattern&amp;nbsp;(parasitic)&lt;br&gt;
Another&amp;nbsp;pattern&amp;nbsp;you&amp;nbsp;can&amp;nbsp;use&amp;nbsp;to&amp;nbsp;achieve&amp;nbsp;inheritance&amp;nbsp;in&amp;nbsp;JavaScript&amp;nbsp;is&amp;nbsp;by&amp;nbsp;Douglas&amp;nbsp;Crockford,&amp;nbsp;called&amp;nbsp;Functional&amp;nbsp;inheritance.&lt;br&gt;
This&amp;nbsp;pattern&amp;nbsp;allows&amp;nbsp;one&amp;nbsp;object&amp;nbsp;to&amp;nbsp;inherit&amp;nbsp;from&amp;nbsp;another,&amp;nbsp;take&amp;nbsp;the&amp;nbsp;result&amp;nbsp;and&amp;nbsp;augment&amp;nbsp;it&amp;nbsp;at&amp;nbsp;the&amp;nbsp;child&amp;nbsp;level&amp;nbsp;to&amp;nbsp;achieve&lt;br&gt;
inheritance.&amp;nbsp;What&amp;nbsp;this&amp;nbsp;really&amp;nbsp;means,&amp;nbsp;is&amp;nbsp;you&amp;nbsp;create&amp;nbsp;an&amp;nbsp;object&amp;nbsp;as&amp;nbsp;your&amp;nbsp;parent,&amp;nbsp;pass&amp;nbsp;the&amp;nbsp;child&amp;nbsp;object&amp;nbsp;to&amp;nbsp;the&amp;nbsp;parent&amp;nbsp;to&lt;br&gt;
inherit&amp;nbsp;/&amp;nbsp;apply&amp;nbsp;its&amp;nbsp;properties,&amp;nbsp;and&amp;nbsp;return&amp;nbsp;the&amp;nbsp;resulting&amp;nbsp;object&amp;nbsp;back&amp;nbsp;to&amp;nbsp;the&amp;nbsp;child,&lt;br&gt;
who&amp;nbsp;can&amp;nbsp;then&amp;nbsp;augment&amp;nbsp;its&amp;nbsp;own&amp;nbsp;properties&amp;nbsp;to&amp;nbsp;the&amp;nbsp;object&amp;nbsp;returned&amp;nbsp;from&amp;nbsp;the&amp;nbsp;parent.&lt;br&gt;
&lt;br&gt;
var&amp;nbsp;human&amp;nbsp;=&amp;nbsp;function(name)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;that&amp;nbsp;=&amp;nbsp;{};&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;that.name&amp;nbsp;=&amp;nbsp;name&amp;nbsp;||&amp;nbsp;'';&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;that.gender&amp;nbsp;=&amp;nbsp;'';&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;that.planetOfBirth&amp;nbsp;=&amp;nbsp;'Earth';&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;that.sayGender&amp;nbsp;=&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(that.name&amp;nbsp;+&amp;nbsp;'&amp;nbsp;says&amp;nbsp;my&amp;nbsp;gender&amp;nbsp;is&amp;nbsp;'&amp;nbsp;+&amp;nbsp;that.gender);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;};&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;that.sayPlanet&amp;nbsp;=&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(that.name&amp;nbsp;+&amp;nbsp;'&amp;nbsp;was&amp;nbsp;born&amp;nbsp;on&amp;nbsp;'&amp;nbsp;+&amp;nbsp;that.planetOfBirth);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;};&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;that;&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
var&amp;nbsp;male&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(name)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;that&amp;nbsp;=&amp;nbsp;human(name);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;that.gender&amp;nbsp;=&amp;nbsp;'Male';&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;that;&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
var&amp;nbsp;female&amp;nbsp;=&amp;nbsp;function&amp;nbsp;(name)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;that&amp;nbsp;=&amp;nbsp;human(name);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;that.gender&amp;nbsp;=&amp;nbsp;'Female';&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;that;&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
var&amp;nbsp;david&amp;nbsp;=&amp;nbsp;male('David');&lt;br&gt;
var&amp;nbsp;jane&amp;nbsp;=&amp;nbsp;female('Jane');&lt;br&gt;
&lt;br&gt;
david.sayGender();&amp;nbsp;//&amp;nbsp;David&amp;nbsp;says&amp;nbsp;my&amp;nbsp;gender&amp;nbsp;is&amp;nbsp;Male&lt;br&gt;
jane.sayGender();&amp;nbsp;//&amp;nbsp;Jane&amp;nbsp;says&amp;nbsp;my&amp;nbsp;gender&amp;nbsp;is&amp;nbsp;Female&lt;br&gt;
&lt;br&gt;
david.planetOfBirth&amp;nbsp;=&amp;nbsp;'Mars';&lt;br&gt;
david.sayPlanet();&amp;nbsp;//&amp;nbsp;David&amp;nbsp;was&amp;nbsp;born&amp;nbsp;on&amp;nbsp;Mars&lt;br&gt;
jane.sayPlanet();&amp;nbsp;//&amp;nbsp;Jane&amp;nbsp;was&amp;nbsp;born&amp;nbsp;on&amp;nbsp;Earth&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;:&amp;nbsp;&lt;br&gt;
David&amp;nbsp;says&amp;nbsp;my&amp;nbsp;gender&amp;nbsp;is&amp;nbsp;Male&amp;nbsp;&lt;br&gt;
Jane&amp;nbsp;says&amp;nbsp;my&amp;nbsp;gender&amp;nbsp;is&amp;nbsp;Female&amp;nbsp;&lt;br&gt;
David&amp;nbsp;was&amp;nbsp;born&amp;nbsp;on&amp;nbsp;Mars&amp;nbsp;&lt;br&gt;
Jane&amp;nbsp;was&amp;nbsp;born&amp;nbsp;on&amp;nbsp;Earth&amp;nbsp;&lt;br&gt;
====================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ecmascript&amp;nbsp;6&amp;nbsp;('Class'&amp;nbsp;keyword)&lt;br&gt;
class&amp;nbsp;has&amp;nbsp;been&amp;nbsp;a&amp;nbsp;reserved&amp;nbsp;keyword&amp;nbsp;in&amp;nbsp;JavaScript&amp;nbsp;since&amp;nbsp;the&amp;nbsp;beginning,&amp;nbsp;and&amp;nbsp;now&amp;nbsp;there&amp;nbsp;is&amp;nbsp;finally&amp;nbsp;a&lt;br&gt;
use&amp;nbsp;for&amp;nbsp;it.&amp;nbsp;Class&amp;nbsp;definitions&amp;nbsp;in&amp;nbsp;JavaScript&amp;nbsp;look&amp;nbsp;a&amp;nbsp;lot&amp;nbsp;like&amp;nbsp;they&amp;nbsp;do&amp;nbsp;in&amp;nbsp;other&amp;nbsp;languages.&lt;br&gt;
&lt;br&gt;
class&amp;nbsp;Animal&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;constructor(type){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.type&amp;nbsp;=&amp;nbsp;type;&lt;br&gt;
&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;static&amp;nbsp;isAnimal(obj,&amp;nbsp;type){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(!Animal.prototype.isPrototypeOf(obj)){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;false;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;type&amp;nbsp;?&amp;nbsp;obj.type&amp;nbsp;===&amp;nbsp;type&amp;nbsp;:&amp;nbsp;true;&lt;br&gt;
&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
class&amp;nbsp;Dog&amp;nbsp;extends&amp;nbsp;Animal&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;constructor(name,&amp;nbsp;breed){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super("dog");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.name&amp;nbsp;=&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.breed&amp;nbsp;=&amp;nbsp;breed;&lt;br&gt;
&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;bark(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("ruff,&amp;nbsp;ruff");&lt;br&gt;
&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;print(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log("The&amp;nbsp;dog&amp;nbsp;"&amp;nbsp;+&amp;nbsp;this.name&amp;nbsp;+&amp;nbsp;"&amp;nbsp;is&amp;nbsp;a&amp;nbsp;"&amp;nbsp;+&amp;nbsp;this.breed);&lt;br&gt;
&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;static&amp;nbsp;isDog(obj){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;Animal.isAnimal(obj,&amp;nbsp;"dog");&lt;br&gt;
&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
var&amp;nbsp;rex&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Dog("Rex","Laika");&lt;br&gt;
rex.print()&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;:&lt;br&gt;
The&amp;nbsp;dog&amp;nbsp;Rex&amp;nbsp;is&amp;nbsp;a&amp;nbsp;Laika</questionanswer>
  </question>
  <question id="0_2_0_1_0:10" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Closures&amp;nbsp;in&amp;nbsp;Javascript,&amp;nbsp;describe,&amp;nbsp;provide&amp;nbsp;examples.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>&lt;br&gt;
In&amp;nbsp;programming&amp;nbsp;languages,&amp;nbsp;closures&amp;nbsp;(also&amp;nbsp;lexical&amp;nbsp;closures&amp;nbsp;or&amp;nbsp;function&amp;nbsp;closures)&amp;nbsp;are&amp;nbsp;a&amp;nbsp;technique&amp;nbsp;for&amp;nbsp;implementing&amp;nbsp;lexically&lt;br&gt;
scoped&amp;nbsp;name&amp;nbsp;binding&amp;nbsp;in&amp;nbsp;languages&amp;nbsp;with&amp;nbsp;first-class&amp;nbsp;functions.&amp;nbsp;Operationally,&amp;nbsp;a&amp;nbsp;closure&amp;nbsp;is&amp;nbsp;a&amp;nbsp;record&amp;nbsp;storing&amp;nbsp;a&amp;nbsp;function[a]&lt;br&gt;
together&amp;nbsp;WITH&amp;nbsp;AN&amp;nbsp;environment:[1]&amp;nbsp;a&amp;nbsp;mapping&amp;nbsp;associating&amp;nbsp;each&amp;nbsp;free&amp;nbsp;variable&amp;nbsp;of&amp;nbsp;the&amp;nbsp;function&amp;nbsp;(variables&amp;nbsp;that&amp;nbsp;are&amp;nbsp;used&amp;nbsp;locally,&lt;br&gt;
but&amp;nbsp;defined&amp;nbsp;in&amp;nbsp;an&amp;nbsp;enclosing&amp;nbsp;scope)&amp;nbsp;with&amp;nbsp;the&amp;nbsp;value&amp;nbsp;or&amp;nbsp;storage&amp;nbsp;location&amp;nbsp;to&amp;nbsp;which&amp;nbsp;the&amp;nbsp;name&amp;nbsp;was&amp;nbsp;bound&amp;nbsp;when&amp;nbsp;the&amp;nbsp;closure&amp;nbsp;was&amp;nbsp;created.&lt;br&gt;
&amp;nbsp;A&amp;nbsp;closure—unlike&amp;nbsp;a&amp;nbsp;plain&amp;nbsp;function—allows&amp;nbsp;the&amp;nbsp;function&amp;nbsp;to&amp;nbsp;access&amp;nbsp;those&amp;nbsp;captured&amp;nbsp;variables&amp;nbsp;through&amp;nbsp;the&amp;nbsp;closure's&lt;br&gt;
reference&amp;nbsp;to&amp;nbsp;them,&amp;nbsp;even&amp;nbsp;when&amp;nbsp;the&amp;nbsp;function&amp;nbsp;is&amp;nbsp;invoked&amp;nbsp;outside&amp;nbsp;their&amp;nbsp;scope.&lt;br&gt;
==========================================&lt;br&gt;
JavaScript&amp;nbsp;variables&amp;nbsp;can&amp;nbsp;belong&amp;nbsp;to&amp;nbsp;the&amp;nbsp;local&amp;nbsp;or&amp;nbsp;global&amp;nbsp;scope.&lt;br&gt;
&lt;br&gt;
Private&amp;nbsp;variables&amp;nbsp;can&amp;nbsp;be&amp;nbsp;made&amp;nbsp;possible&amp;nbsp;with&amp;nbsp;closures.&lt;br&gt;
&lt;br&gt;
-------------&lt;br&gt;
EXAMPLE1&amp;nbsp;:&amp;nbsp;A&amp;nbsp;Counter&amp;nbsp;Dilemma&lt;br&gt;
var&amp;nbsp;counter&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&lt;br&gt;
function&amp;nbsp;add()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;counter&amp;nbsp;+=&amp;nbsp;1;&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
add();&amp;nbsp;//&amp;nbsp;1&lt;br&gt;
add();&amp;nbsp;//&amp;nbsp;2&lt;br&gt;
add();//&amp;nbsp;3&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;problem&amp;nbsp;is,&amp;nbsp;that&amp;nbsp;any&amp;nbsp;script&amp;nbsp;on&amp;nbsp;the&amp;nbsp;page&amp;nbsp;can&amp;nbsp;change&amp;nbsp;the&amp;nbsp;counter,&amp;nbsp;without&amp;nbsp;calling&amp;nbsp;add().&lt;br&gt;
&lt;br&gt;
Closure&amp;nbsp;WAY&amp;nbsp;:&amp;nbsp;&lt;br&gt;
function&amp;nbsp;add()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;counter&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;counter&amp;nbsp;+=&amp;nbsp;1;&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
add();&amp;nbsp;//&amp;nbsp;1&lt;br&gt;
add();&amp;nbsp;//&amp;nbsp;2&lt;br&gt;
add();&amp;nbsp;//&amp;nbsp;3&lt;br&gt;
&lt;br&gt;
===================================================&lt;br&gt;
Example&amp;nbsp;2&amp;nbsp;:&amp;nbsp;&lt;br&gt;
//&amp;nbsp;define&amp;nbsp;a&amp;nbsp;function&amp;nbsp;that&amp;nbsp;increments&amp;nbsp;a&amp;nbsp;counter&amp;nbsp;in&amp;nbsp;a&amp;nbsp;loop&lt;br&gt;
function&amp;nbsp;closureExample()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&lt;&amp;nbsp;3&amp;nbsp;;i++)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setTimeout(function()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log('counter&amp;nbsp;value&amp;nbsp;is&amp;nbsp;'&amp;nbsp;+&amp;nbsp;i);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&amp;nbsp;1000);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&lt;br&gt;
}&lt;br&gt;
//&amp;nbsp;call&amp;nbsp;the&amp;nbsp;example&amp;nbsp;function&lt;br&gt;
closureExample();&amp;nbsp;&amp;nbsp;//&amp;nbsp;3&amp;nbsp;3&amp;nbsp;3&amp;nbsp;&lt;br&gt;
&lt;br&gt;
Closure&amp;nbsp;Way&amp;nbsp;:&amp;nbsp;&lt;br&gt;
function&amp;nbsp;asyncOperation(counter)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setTimeout(function()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log('counter&amp;nbsp;value&amp;nbsp;is&amp;nbsp;'&amp;nbsp;+&amp;nbsp;counter);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&amp;nbsp;1000);&lt;br&gt;
}&lt;br&gt;
&amp;nbsp;&lt;br&gt;
function&amp;nbsp;otherClosureExample()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&lt;&amp;nbsp;3&amp;nbsp;;i++)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;asyncOperation(i);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&amp;nbsp;&lt;br&gt;
otherClosureExample();&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;0&amp;nbsp;1&amp;nbsp;2&lt;br&gt;
=======================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example&amp;nbsp;&lt;br&gt;
This&amp;nbsp;example&amp;nbsp;shows&amp;nbsp;that&amp;nbsp;the&amp;nbsp;closure&amp;nbsp;contains&amp;nbsp;any&amp;nbsp;local&amp;nbsp;variables&amp;nbsp;that&amp;nbsp;were&amp;nbsp;declared&amp;nbsp;inside&amp;nbsp;the&amp;nbsp;outer&lt;br&gt;
function&amp;nbsp;before&amp;nbsp;it&amp;nbsp;exited.&amp;nbsp;Note&amp;nbsp;that&amp;nbsp;the&amp;nbsp;variable&amp;nbsp;alice&amp;nbsp;is&amp;nbsp;actually&amp;nbsp;declared&amp;nbsp;after&amp;nbsp;the&amp;nbsp;anonymous&amp;nbsp;function.&lt;br&gt;
The&amp;nbsp;anonymous&amp;nbsp;function&amp;nbsp;is&amp;nbsp;declared&amp;nbsp;first;&amp;nbsp;and&amp;nbsp;when&amp;nbsp;that&amp;nbsp;function&amp;nbsp;is&amp;nbsp;called&amp;nbsp;it&amp;nbsp;can&amp;nbsp;access&lt;br&gt;
the&amp;nbsp;alice&amp;nbsp;variable&amp;nbsp;because&amp;nbsp;alice&amp;nbsp;is&amp;nbsp;in&amp;nbsp;the&amp;nbsp;same&amp;nbsp;scope&amp;nbsp;(JavaScript&amp;nbsp;does&amp;nbsp;variable&amp;nbsp;hoisting).&amp;nbsp;&lt;br&gt;
&lt;br&gt;
function&amp;nbsp;sayAlice()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;sayAlert&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{&amp;nbsp;alert(alice);&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Local&amp;nbsp;variable&amp;nbsp;that&amp;nbsp;ends&amp;nbsp;up&amp;nbsp;within&amp;nbsp;closure&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;alice&amp;nbsp;=&amp;nbsp;'Hello&amp;nbsp;Alice';&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;sayAlert;&lt;br&gt;
}&lt;br&gt;
sayAlice()();&amp;nbsp;//&amp;nbsp;Hello&amp;nbsp;Alice&lt;br&gt;
&lt;br&gt;
----&lt;br&gt;
&lt;br&gt;
function&amp;nbsp;say667()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Local&amp;nbsp;variable&amp;nbsp;that&amp;nbsp;ends&amp;nbsp;up&amp;nbsp;within&amp;nbsp;closure&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;num&amp;nbsp;=&amp;nbsp;666;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;sayAlert&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{&amp;nbsp;alert(num);&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;num++;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;sayAlert;&lt;br&gt;
}&lt;br&gt;
var&amp;nbsp;sayNumber&amp;nbsp;=&amp;nbsp;say667();&lt;br&gt;
sayNumber();&amp;nbsp;//&amp;nbsp;alerts&amp;nbsp;667&lt;br&gt;
==========================================&lt;br&gt;
One&amp;nbsp;more&amp;nbsp;example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
This&amp;nbsp;final&amp;nbsp;example&amp;nbsp;shows&amp;nbsp;that&amp;nbsp;each&amp;nbsp;call&amp;nbsp;creates&amp;nbsp;a&amp;nbsp;separate&amp;nbsp;closure&amp;nbsp;for&amp;nbsp;the&amp;nbsp;local&amp;nbsp;variables.&amp;nbsp;There&amp;nbsp;is&amp;nbsp;not&amp;nbsp;a&lt;br&gt;
single&amp;nbsp;closure&amp;nbsp;per&amp;nbsp;function&amp;nbsp;declaration.&amp;nbsp;There&amp;nbsp;is&amp;nbsp;a&amp;nbsp;closure&amp;nbsp;for&amp;nbsp;each&amp;nbsp;call&amp;nbsp;to&amp;nbsp;a&amp;nbsp;function.&lt;br&gt;
&lt;br&gt;
function&amp;nbsp;newClosure(someNum,&amp;nbsp;someRef)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Local&amp;nbsp;variables&amp;nbsp;that&amp;nbsp;end&amp;nbsp;up&amp;nbsp;within&amp;nbsp;closure&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;num&amp;nbsp;=&amp;nbsp;someNum;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;anArray&amp;nbsp;=&amp;nbsp;[1,2,3];&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;ref&amp;nbsp;=&amp;nbsp;someRef;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;function(x)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;num&amp;nbsp;+=&amp;nbsp;x;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;anArray.push(num);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;alert('num:&amp;nbsp;'&amp;nbsp;+&amp;nbsp;num&amp;nbsp;+&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'\nanArray&amp;nbsp;'&amp;nbsp;+&amp;nbsp;anArray.toString()&amp;nbsp;+&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'\nref.someVar&amp;nbsp;'&amp;nbsp;+&amp;nbsp;ref.someVar);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
obj&amp;nbsp;=&amp;nbsp;{someVar:&amp;nbsp;4};&lt;br&gt;
fn1&amp;nbsp;=&amp;nbsp;newClosure(4,&amp;nbsp;obj);&lt;br&gt;
fn2&amp;nbsp;=&amp;nbsp;newClosure(5,&amp;nbsp;obj);&lt;br&gt;
fn1(1);&amp;nbsp;//&amp;nbsp;num:&amp;nbsp;5;&amp;nbsp;anArray:&amp;nbsp;1,2,3,5;&amp;nbsp;ref.someVar:&amp;nbsp;4;&lt;br&gt;
fn2(1);&amp;nbsp;//&amp;nbsp;num:&amp;nbsp;6;&amp;nbsp;anArray:&amp;nbsp;1,2,3,6;&amp;nbsp;ref.someVar:&amp;nbsp;4;&lt;br&gt;
obj.someVar++;&lt;br&gt;
fn1(2);&amp;nbsp;//&amp;nbsp;num:&amp;nbsp;7;&amp;nbsp;anArray:&amp;nbsp;1,2,3,5,7;&amp;nbsp;ref.someVar:&amp;nbsp;5;&lt;br&gt;
fn2(2);&amp;nbsp;//&amp;nbsp;num:&amp;nbsp;8;&amp;nbsp;anArray:&amp;nbsp;1,2,3,6,8;&amp;nbsp;ref.someVar:&amp;nbsp;5;</questionanswer>
  </question>
</questions>
