<?xml version="1.0" encoding="UTF-8"?>
<questions id="1_0_1_2_0_0_0" name="Intro_and_Basic_Mapping" nofquestions="1" nofsubcategories="0" filename="intro_and_basic_mapping1_0_1_2_0_0_0.xml">
  <question id="1_0_1_2_0_0_0:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Why&amp;nbsp;you&amp;nbsp;should&amp;nbsp;use&amp;nbsp;ORM&amp;nbsp;systems&amp;nbsp;?&lt;br&gt;
What&amp;nbsp;are&amp;nbsp;advantages&amp;nbsp;and&amp;nbsp;disadvantages&amp;nbsp;of&amp;nbsp;ORM&amp;nbsp;(&amp;nbsp;and&amp;nbsp;particularly&amp;nbsp;Hibernate)&amp;nbsp;?&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>http://blogs.msdn.com/b/gblock/archive/2006/10/26/ten-advantages-of-an-orm.aspx&lt;br&gt;
&lt;br&gt;
Ten&amp;nbsp;advantages&amp;nbsp;of&amp;nbsp;an&amp;nbsp;ORM&amp;nbsp;(Object&amp;nbsp;Relational&amp;nbsp;Mapper):&lt;br&gt;
&lt;br&gt;
1.&amp;nbsp;Facilitates&amp;nbsp;implementing&amp;nbsp;the&amp;nbsp;Domain&amp;nbsp;Model&amp;nbsp;pattern&amp;nbsp;(Thanks&amp;nbsp;Udi).&amp;nbsp;This&amp;nbsp;one&amp;nbsp;reason&lt;br&gt;
supercedes&amp;nbsp;all&amp;nbsp;others.&amp;nbsp;In&amp;nbsp;short&amp;nbsp;using&amp;nbsp;this&amp;nbsp;pattern&amp;nbsp;means&amp;nbsp;that&amp;nbsp;you&amp;nbsp;model&amp;nbsp;entities&lt;br&gt;
based&amp;nbsp;on&amp;nbsp;real&amp;nbsp;business&amp;nbsp;concepts&amp;nbsp;rather&amp;nbsp;than&amp;nbsp;based&amp;nbsp;on&amp;nbsp;your&amp;nbsp;database&amp;nbsp;structure.&lt;br&gt;
ORM&amp;nbsp;tools&amp;nbsp;provide&amp;nbsp;this&amp;nbsp;functionality&amp;nbsp;through&amp;nbsp;mapping&amp;nbsp;between&amp;nbsp;the&amp;nbsp;logical&lt;br&gt;
business&amp;nbsp;model&amp;nbsp;and&amp;nbsp;the&amp;nbsp;physical&amp;nbsp;storage&amp;nbsp;model.&lt;br&gt;
&lt;br&gt;
2.&amp;nbsp;Huge&amp;nbsp;reduction&amp;nbsp;in&amp;nbsp;code.&amp;nbsp;ORM&amp;nbsp;tools&amp;nbsp;provide&amp;nbsp;a&amp;nbsp;host&amp;nbsp;of&amp;nbsp;services&amp;nbsp;thereby&amp;nbsp;allowing&lt;br&gt;
developers&amp;nbsp;to&amp;nbsp;focus&amp;nbsp;on&amp;nbsp;the&amp;nbsp;business&amp;nbsp;logic&amp;nbsp;of&amp;nbsp;the&amp;nbsp;application&amp;nbsp;rather&lt;br&gt;
than&amp;nbsp;repetitive&amp;nbsp;CRUD&amp;nbsp;(Create&amp;nbsp;Read&amp;nbsp;Update&amp;nbsp;Delete)&amp;nbsp;logic.&lt;br&gt;
&lt;br&gt;
3.&amp;nbsp;Changes&amp;nbsp;to&amp;nbsp;the&amp;nbsp;object&amp;nbsp;model&amp;nbsp;are&amp;nbsp;made&amp;nbsp;in&amp;nbsp;one&amp;nbsp;place.&amp;nbsp;One&amp;nbsp;you&amp;nbsp;update&amp;nbsp;your&lt;br&gt;
object&amp;nbsp;definitions,&amp;nbsp;the&amp;nbsp;ORM&amp;nbsp;will&amp;nbsp;automatically&amp;nbsp;use&amp;nbsp;the&amp;nbsp;updated&amp;nbsp;structure&amp;nbsp;for&lt;br&gt;
retrievals&amp;nbsp;and&amp;nbsp;updates.&amp;nbsp;There&amp;nbsp;are&amp;nbsp;no&amp;nbsp;SQL&amp;nbsp;Update,&amp;nbsp;Delete&amp;nbsp;and&amp;nbsp;Insert&amp;nbsp;statements&amp;nbsp;strewn&lt;br&gt;
throughout&amp;nbsp;different&amp;nbsp;layers&amp;nbsp;of&amp;nbsp;the&amp;nbsp;application&amp;nbsp;that&amp;nbsp;need&amp;nbsp;modification.&lt;br&gt;
&lt;br&gt;
4.&amp;nbsp;Rich&amp;nbsp;query&amp;nbsp;capability.&amp;nbsp;ORM&amp;nbsp;tools&amp;nbsp;provide&amp;nbsp;an&amp;nbsp;object&amp;nbsp;oriented&amp;nbsp;query&amp;nbsp;language.&lt;br&gt;
This&amp;nbsp;allows&amp;nbsp;application&amp;nbsp;developers&amp;nbsp;to&amp;nbsp;focus&amp;nbsp;on&amp;nbsp;the&amp;nbsp;object&amp;nbsp;model&amp;nbsp;and&amp;nbsp;not&amp;nbsp;to&amp;nbsp;have&amp;nbsp;to&lt;br&gt;
be&amp;nbsp;concerned&amp;nbsp;with&amp;nbsp;the&amp;nbsp;database&amp;nbsp;structure&amp;nbsp;or&amp;nbsp;SQL&amp;nbsp;semantics.&amp;nbsp;The&amp;nbsp;ORM&amp;nbsp;tool&amp;nbsp;itself&amp;nbsp;will&lt;br&gt;
translate&amp;nbsp;the&amp;nbsp;query&amp;nbsp;language&amp;nbsp;into&amp;nbsp;the&amp;nbsp;appropriate&amp;nbsp;syntax&amp;nbsp;for&amp;nbsp;the&amp;nbsp;database.&lt;br&gt;
&lt;br&gt;
5.&amp;nbsp;Navigation.&amp;nbsp;You&amp;nbsp;can&amp;nbsp;navigate&amp;nbsp;object&amp;nbsp;relationships&amp;nbsp;transparently.&amp;nbsp;Related&amp;nbsp;objects&lt;br&gt;
are&amp;nbsp;automatically&amp;nbsp;loaded&amp;nbsp;as&amp;nbsp;needed.&amp;nbsp;For&amp;nbsp;example&amp;nbsp;if&amp;nbsp;you&amp;nbsp;load&amp;nbsp;a&amp;nbsp;PO&amp;nbsp;and&amp;nbsp;you&amp;nbsp;want&amp;nbsp;to&lt;br&gt;
access&amp;nbsp;it's&amp;nbsp;Customer,&amp;nbsp;you&amp;nbsp;can&amp;nbsp;simply&amp;nbsp;access&amp;nbsp;PO.Customer&amp;nbsp;and&amp;nbsp;the&amp;nbsp;ORM&amp;nbsp;will&amp;nbsp;take&amp;nbsp;care&amp;nbsp;&lt;br&gt;
of&amp;nbsp;loading&amp;nbsp;the&amp;nbsp;data&amp;nbsp;for&amp;nbsp;you&amp;nbsp;without&amp;nbsp;any&amp;nbsp;effort&amp;nbsp;on&amp;nbsp;your&amp;nbsp;part.&lt;br&gt;
&lt;br&gt;
6.&amp;nbsp;Data&amp;nbsp;loads&amp;nbsp;are&amp;nbsp;completely&amp;nbsp;configurable&amp;nbsp;allowing&amp;nbsp;you&amp;nbsp;to&amp;nbsp;load&amp;nbsp;the&amp;nbsp;data&amp;nbsp;appropriate&amp;nbsp;for&lt;br&gt;
each&amp;nbsp;scenario.&amp;nbsp;For&amp;nbsp;example&amp;nbsp;in&amp;nbsp;one&amp;nbsp;scenario&amp;nbsp;you&amp;nbsp;might&amp;nbsp;want&amp;nbsp;to&amp;nbsp;load&amp;nbsp;a&amp;nbsp;list&amp;nbsp;of&amp;nbsp;POs&amp;nbsp;without&lt;br&gt;
any&amp;nbsp;of&amp;nbsp;it's&amp;nbsp;child&amp;nbsp;/&amp;nbsp;related&amp;nbsp;objects,&amp;nbsp;while&amp;nbsp;in&amp;nbsp;other&amp;nbsp;scenarious&amp;nbsp;you&amp;nbsp;can&amp;nbsp;specify&amp;nbsp;to&amp;nbsp;load&amp;nbsp;a&amp;nbsp;PO,&lt;br&gt;
with&amp;nbsp;all&amp;nbsp;it's&amp;nbsp;child&amp;nbsp;LineItems,&amp;nbsp;etc.&lt;br&gt;
&lt;br&gt;
7.&amp;nbsp;Concurrency&amp;nbsp;support.&amp;nbsp;Support&amp;nbsp;for&amp;nbsp;multiple&amp;nbsp;users&amp;nbsp;updating&amp;nbsp;the&amp;nbsp;same&amp;nbsp;data&amp;nbsp;simultaneously.&lt;br&gt;
&lt;br&gt;
8.&amp;nbsp;Cache&amp;nbsp;managment.&amp;nbsp;Entities&amp;nbsp;are&amp;nbsp;cached&amp;nbsp;in&amp;nbsp;memory&amp;nbsp;thereby&amp;nbsp;reducing&amp;nbsp;load&amp;nbsp;on&amp;nbsp;the&amp;nbsp;database.&lt;br&gt;
&lt;br&gt;
9.&amp;nbsp;Transaction&amp;nbsp;management&amp;nbsp;and&amp;nbsp;Isolation.&amp;nbsp;All&amp;nbsp;object&amp;nbsp;changes&amp;nbsp;occur&amp;nbsp;scoped&amp;nbsp;to&amp;nbsp;a&lt;br&gt;
transaction.&amp;nbsp;The&amp;nbsp;entire&amp;nbsp;transaction&amp;nbsp;can&amp;nbsp;either&amp;nbsp;be&amp;nbsp;committed&amp;nbsp;or&amp;nbsp;rolled&amp;nbsp;back.&amp;nbsp;Multiple&lt;br&gt;
transactions&amp;nbsp;can&amp;nbsp;be&amp;nbsp;active&amp;nbsp;in&amp;nbsp;memory&amp;nbsp;in&amp;nbsp;the&amp;nbsp;same&amp;nbsp;time,&amp;nbsp;and&amp;nbsp;each&amp;nbsp;transactions&amp;nbsp;changes&lt;br&gt;
are&amp;nbsp;isolated&amp;nbsp;form&amp;nbsp;on&amp;nbsp;another.&lt;br&gt;
&lt;br&gt;
10.&amp;nbsp;Key&amp;nbsp;Management.&amp;nbsp;Identifiers&amp;nbsp;and&amp;nbsp;surrogate&amp;nbsp;keys&amp;nbsp;are&amp;nbsp;automatically&amp;nbsp;propogated&amp;nbsp;and&amp;nbsp;managed.&lt;br&gt;
===================================================&lt;br&gt;
http://www.findbestopensource.com/article-detail/orm-advantage-disadvantage&lt;br&gt;
&lt;br&gt;
Advantages&amp;nbsp;and&amp;nbsp;Disadvantages&amp;nbsp;of&amp;nbsp;using&amp;nbsp;Hibernate&amp;nbsp;like&amp;nbsp;ORM&amp;nbsp;libraries:&lt;br&gt;
&lt;br&gt;
There&amp;nbsp;are&amp;nbsp;lots&amp;nbsp;of&amp;nbsp;advantages&amp;nbsp;of&amp;nbsp;using&amp;nbsp;ORM&lt;br&gt;
-&amp;nbsp;Database&amp;nbsp;independent.&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;biggest&amp;nbsp;advantage.&amp;nbsp;No&amp;nbsp;need&amp;nbsp;to&amp;nbsp;write&amp;nbsp;code&amp;nbsp;specific&amp;nbsp;to&lt;br&gt;
database.&amp;nbsp;I&amp;nbsp;have&amp;nbsp;worked&amp;nbsp;in&amp;nbsp;various&amp;nbsp;products&amp;nbsp;where&amp;nbsp;they&amp;nbsp;maintain&amp;nbsp;separate&amp;nbsp;module&amp;nbsp;/&amp;nbsp;code&lt;br&gt;
base&amp;nbsp;for&amp;nbsp;every&amp;nbsp;database&amp;nbsp;and&amp;nbsp;there&amp;nbsp;is&amp;nbsp;lot&amp;nbsp;of&amp;nbsp;effort&amp;nbsp;invested&amp;nbsp;to&amp;nbsp;support&amp;nbsp;multiple&amp;nbsp;database.&lt;br&gt;
ORM&amp;nbsp;is&amp;nbsp;a&amp;nbsp;boon.&lt;br&gt;
-&amp;nbsp;There&amp;nbsp;is&amp;nbsp;no&amp;nbsp;need&amp;nbsp;to&amp;nbsp;write&amp;nbsp;SQL&amp;nbsp;queries.&amp;nbsp;Session.saveOrUpdate(entityObject)&amp;nbsp;takes&amp;nbsp;care&amp;nbsp;of&lt;br&gt;
insertion&amp;nbsp;in&amp;nbsp;case&amp;nbsp;of&amp;nbsp;Hibernate.&lt;br&gt;
-&amp;nbsp;Takes&amp;nbsp;care&amp;nbsp;of&amp;nbsp;dependencies&amp;nbsp;between&amp;nbsp;tables&amp;nbsp;and&amp;nbsp;does&amp;nbsp;join&amp;nbsp;queries.&lt;br&gt;
-&amp;nbsp;Few&amp;nbsp;ORM&amp;nbsp;libraries&amp;nbsp;has&amp;nbsp;support&amp;nbsp;of&amp;nbsp;caching.&amp;nbsp;Hibernate&amp;nbsp;uses&amp;nbsp;ehcache&amp;nbsp;and&amp;nbsp;provides&amp;nbsp;caching&lt;br&gt;
support.&amp;nbsp;This&amp;nbsp;reduces&amp;nbsp;the&amp;nbsp;load&amp;nbsp;from&amp;nbsp;the&amp;nbsp;database&amp;nbsp;and&amp;nbsp;increases&amp;nbsp;the&amp;nbsp;response&amp;nbsp;time.&lt;br&gt;
-&amp;nbsp;Maintains&amp;nbsp;transactions&amp;nbsp;commit&amp;nbsp;and&amp;nbsp;rollback.&lt;br&gt;
-&amp;nbsp;Maintains&amp;nbsp;database&amp;nbsp;connection&amp;nbsp;pool.&lt;br&gt;
-&amp;nbsp;Concurrency&amp;nbsp;support.&lt;br&gt;
-&amp;nbsp;Easy&amp;nbsp;maintenance&amp;nbsp;and&amp;nbsp;increases&amp;nbsp;productivity.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Few&amp;nbsp;disadvantages:&lt;br&gt;
&lt;br&gt;
-&amp;nbsp;ORM&amp;nbsp;makes&amp;nbsp;life&amp;nbsp;easier&amp;nbsp;but&amp;nbsp;developers&amp;nbsp;will&amp;nbsp;eventually&amp;nbsp;skip&amp;nbsp;learning&lt;br&gt;
SQL&amp;nbsp;and&amp;nbsp;database&amp;nbsp;internals.&lt;br&gt;
-&amp;nbsp;There&amp;nbsp;will&amp;nbsp;be&amp;nbsp;some&amp;nbsp;overhead&amp;nbsp;involved&amp;nbsp;using&amp;nbsp;ORM.&amp;nbsp;If&amp;nbsp;the&amp;nbsp;database&amp;nbsp;is&amp;nbsp;accessed&lt;br&gt;
directly&amp;nbsp;then&amp;nbsp;developers&amp;nbsp;are&amp;nbsp;having&amp;nbsp;some&amp;nbsp;control&amp;nbsp;and&amp;nbsp;they&amp;nbsp;could&amp;nbsp;fine&amp;nbsp;tune&amp;nbsp;its&amp;nbsp;performance.&lt;br&gt;
-&amp;nbsp;There&amp;nbsp;is&amp;nbsp;a&amp;nbsp;learning&amp;nbsp;curve&amp;nbsp;involved&amp;nbsp;in&amp;nbsp;understanding&amp;nbsp;ORM&amp;nbsp;library.&amp;nbsp;Java,&amp;nbsp;.NET,&amp;nbsp;PHP&amp;nbsp;has&amp;nbsp;better&lt;br&gt;
ORM&amp;nbsp;libraries.&amp;nbsp;.NET&amp;nbsp;has&amp;nbsp;support&amp;nbsp;of&amp;nbsp;LINQ,&amp;nbsp;which&amp;nbsp;is&amp;nbsp;a&amp;nbsp;Framework&amp;nbsp;that&amp;nbsp;encompass&lt;br&gt;
language-integrated&amp;nbsp;query.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
If&amp;nbsp;your&amp;nbsp;project&amp;nbsp;is&amp;nbsp;using&amp;nbsp;single&amp;nbsp;database&amp;nbsp;and&amp;nbsp;you&amp;nbsp;may&amp;nbsp;need&amp;nbsp;to&amp;nbsp;run&amp;nbsp;some&amp;nbsp;complex&amp;nbsp;queries&amp;nbsp;and&lt;br&gt;
fine&amp;nbsp;tune&amp;nbsp;the&amp;nbsp;performance&amp;nbsp;then&amp;nbsp;choose&amp;nbsp;ODBC,&amp;nbsp;JDBC,&amp;nbsp;ADO&amp;nbsp;or&amp;nbsp;similar&amp;nbsp;kind&amp;nbsp;of&amp;nbsp;Data&amp;nbsp;access&amp;nbsp;layers.&lt;br&gt;
If&amp;nbsp;not&amp;nbsp;choose&amp;nbsp;ORM&amp;nbsp;as&amp;nbsp;it&amp;nbsp;will&amp;nbsp;make&amp;nbsp;your&amp;nbsp;life&amp;nbsp;easier.&amp;nbsp;But&amp;nbsp;spend&amp;nbsp;some&amp;nbsp;time&amp;nbsp;in&amp;nbsp;understanding&lt;br&gt;
the&amp;nbsp;database&amp;nbsp;internals&amp;nbsp;as&amp;nbsp;it&amp;nbsp;will&amp;nbsp;help&amp;nbsp;to&amp;nbsp;take&amp;nbsp;leverage&amp;nbsp;of&amp;nbsp;both&amp;nbsp;ends.&lt;br&gt;</questionanswer>
  </question>
</questions>
