<?xml version="1.0" encoding="UTF-8"?>
<questions id="1_0_0_8_0_0" name="JavaRegex_Vogella" nofquestions="8" nofsubcategories="0" filename="javaregex_vogella1_0_0_8_0_0.xml">
  <question id="1_0_0_8_0_0:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Java&amp;nbsp;Regexp&amp;nbsp;:&amp;nbsp;Common&amp;nbsp;matching&amp;nbsp;symbols,&amp;nbsp;Metacharacters,&amp;nbsp;Quantifiers&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;describe.&lt;br&gt;
Provide&amp;nbsp;examples&amp;nbsp;,&amp;nbsp;using&amp;nbsp;String.matches&amp;nbsp;method&amp;nbsp;.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>1)&amp;nbsp;Common&amp;nbsp;matching&amp;nbsp;symbols&lt;br&gt;
&lt;br&gt;
.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Matches&amp;nbsp;any&amp;nbsp;character&lt;br&gt;
^regex&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Finds&amp;nbsp;regex&amp;nbsp;that&amp;nbsp;must&amp;nbsp;match&amp;nbsp;at&amp;nbsp;the&amp;nbsp;BEGINNING&amp;nbsp;of&amp;nbsp;the&amp;nbsp;line.&lt;br&gt;
regex$&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Finds&amp;nbsp;regex&amp;nbsp;that&amp;nbsp;must&amp;nbsp;match&amp;nbsp;at&amp;nbsp;the&amp;nbsp;end&amp;nbsp;of&amp;nbsp;the&amp;nbsp;line.&lt;br&gt;
[abc]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Set&amp;nbsp;definition,&amp;nbsp;can&amp;nbsp;match&amp;nbsp;the&amp;nbsp;letter&amp;nbsp;a&amp;nbsp;or&amp;nbsp;b&amp;nbsp;or&amp;nbsp;c.&lt;br&gt;
[abc][vz]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Set&amp;nbsp;definition,&amp;nbsp;can&amp;nbsp;match&amp;nbsp;a&amp;nbsp;or&amp;nbsp;b&amp;nbsp;or&amp;nbsp;c&amp;nbsp;followed&amp;nbsp;by&amp;nbsp;either&amp;nbsp;v&amp;nbsp;or&amp;nbsp;z.&lt;br&gt;
[^abc]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;When&amp;nbsp;a&amp;nbsp;caret&amp;nbsp;appears&amp;nbsp;as&amp;nbsp;the&amp;nbsp;first&amp;nbsp;character&amp;nbsp;inside&amp;nbsp;square&amp;nbsp;brackets,&amp;nbsp;it&amp;nbsp;negates&amp;nbsp;the&amp;nbsp;pattern.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;can&amp;nbsp;match&amp;nbsp;any&amp;nbsp;character&amp;nbsp;except&amp;nbsp;a&amp;nbsp;or&amp;nbsp;b&amp;nbsp;or&amp;nbsp;c.&lt;br&gt;
[a-d1-7]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ranges:&amp;nbsp;matches&amp;nbsp;a&amp;nbsp;letter&amp;nbsp;between&amp;nbsp;a&amp;nbsp;and&amp;nbsp;d&amp;nbsp;and&amp;nbsp;figures&amp;nbsp;from&amp;nbsp;1&amp;nbsp;to&amp;nbsp;7,&amp;nbsp;but&amp;nbsp;not&amp;nbsp;d1.&lt;br&gt;
[a-d[m-p]]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a&amp;nbsp;through&amp;nbsp;d,&amp;nbsp;or&amp;nbsp;m&amp;nbsp;through&amp;nbsp;p:&amp;nbsp;[a-dm-p]&amp;nbsp;(union)&lt;br&gt;
[a-z&amp;&amp;[def]]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;d,&amp;nbsp;e,&amp;nbsp;or&amp;nbsp;f&amp;nbsp;(intersection)&lt;br&gt;
[a-z&amp;&amp;[^bc]]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a&amp;nbsp;through&amp;nbsp;z,&amp;nbsp;except&amp;nbsp;for&amp;nbsp;b&amp;nbsp;and&amp;nbsp;c:&amp;nbsp;[ad-z]&amp;nbsp;(subtraction)&lt;br&gt;
&lt;br&gt;
X|Z&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Finds&amp;nbsp;X&amp;nbsp;or&amp;nbsp;Z.&lt;br&gt;
XZ&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Finds&amp;nbsp;X&amp;nbsp;directly&amp;nbsp;followed&amp;nbsp;by&amp;nbsp;Z.&lt;br&gt;
$&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Checks&amp;nbsp;if&amp;nbsp;a&amp;nbsp;line&amp;nbsp;END&amp;nbsp;follows.&lt;br&gt;
&lt;br&gt;
===============================================&lt;br&gt;
2)&amp;nbsp;Metacharacters&lt;br&gt;
&amp;nbsp;\d&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Any&amp;nbsp;digit,&amp;nbsp;short&amp;nbsp;for&amp;nbsp;[0-9]&lt;br&gt;
\D&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A&amp;nbsp;non-digit,&amp;nbsp;short&amp;nbsp;for&amp;nbsp;[^0-9]&lt;br&gt;
\s&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A&amp;nbsp;whitespace&amp;nbsp;character,&amp;nbsp;short&amp;nbsp;for&amp;nbsp;[&amp;nbsp;\t\n\x0b\r\f]&lt;br&gt;
\S&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A&amp;nbsp;non-whitespace&amp;nbsp;character,&amp;nbsp;short&amp;nbsp;for&amp;nbsp;[^\s]&lt;br&gt;
\w&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A&amp;nbsp;word&amp;nbsp;character,&amp;nbsp;short&amp;nbsp;for&amp;nbsp;[a-zA-Z_0-9]&lt;br&gt;
\W&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A&amp;nbsp;non-word&amp;nbsp;character&amp;nbsp;[^\w]&lt;br&gt;
\S+&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Several&amp;nbsp;non-whitespace&amp;nbsp;characters&lt;br&gt;
\b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Matches&amp;nbsp;a&amp;nbsp;word&amp;nbsp;boundary&amp;nbsp;where&amp;nbsp;a&amp;nbsp;word&amp;nbsp;character&amp;nbsp;is&amp;nbsp;[a-zA-Z0-9_].&amp;nbsp;&lt;br&gt;
===============================================&lt;br&gt;
3)&amp;nbsp;&amp;nbsp;&amp;nbsp;Quantifier&lt;br&gt;
*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Occurs&amp;nbsp;zero&amp;nbsp;or&amp;nbsp;more&amp;nbsp;times,&amp;nbsp;is&amp;nbsp;short&amp;nbsp;for&amp;nbsp;{0,}&lt;br&gt;
+&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Occurs&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&amp;nbsp;times,&amp;nbsp;is&amp;nbsp;short&amp;nbsp;for&amp;nbsp;{1,}&lt;br&gt;
?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Occurs&amp;nbsp;no&amp;nbsp;or&amp;nbsp;one&amp;nbsp;times,&amp;nbsp;?&amp;nbsp;is&amp;nbsp;short&amp;nbsp;for&amp;nbsp;{0,1}.&amp;nbsp;&lt;br&gt;
{X}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Occurs&amp;nbsp;X&amp;nbsp;number&amp;nbsp;of&amp;nbsp;times,&amp;nbsp;{}&amp;nbsp;describes&amp;nbsp;the&amp;nbsp;order&amp;nbsp;of&amp;nbsp;the&amp;nbsp;preceding&amp;nbsp;liberal&amp;nbsp;&lt;br&gt;
{X,Y}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Occurs&amp;nbsp;between&amp;nbsp;X&amp;nbsp;and&amp;nbsp;Y&amp;nbsp;times,&amp;nbsp;&lt;br&gt;
*?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;?&amp;nbsp;after&amp;nbsp;a&amp;nbsp;quantifier&amp;nbsp;makes&amp;nbsp;it&amp;nbsp;a&amp;nbsp;reluctant&amp;nbsp;quantifier.&amp;nbsp;It&amp;nbsp;tries&amp;nbsp;to&amp;nbsp;find&amp;nbsp;the&amp;nbsp;smallest&amp;nbsp;match.&amp;nbsp;&lt;br&gt;
&lt;br&gt;
========================================&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;:&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;vogellapack;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;String_matches&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;args&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"";&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&amp;nbsp;1&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"[bcr]at";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"bat";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("1)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&amp;nbsp;2&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"[bcr]at";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"rat";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("2)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////3&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"[bcr]at";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"aat";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("3)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////4&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"[^bcr]at";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"bat";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("4)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////5&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"[a-c]at";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"bat";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("5)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////6&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"[^a-c]at";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"bat";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("6)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////7&amp;nbsp;Intersection&amp;nbsp;!!!!!!!!!!!!!&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"[0-9&amp;&amp;[345]]";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"8";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("7)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////8&amp;nbsp;Substracion&amp;nbsp;!!!!!!!!!!!!!&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"[0-9&amp;&amp;[^345]]";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"8";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("8)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////9&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;".";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"9";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("9)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////10&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"\\d";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"9";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("10)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////11&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"\\s";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"&amp;nbsp;";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("11)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////12&amp;nbsp;=)&amp;nbsp;match&amp;nbsp;slash&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"\\\\";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"\\";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("12)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;str.matches(regex));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////13&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"True";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("13)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;isTrue(str));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////14&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"True";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("14)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;isTrueOrYes(str));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////15&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"True";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("15)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;isThreeLetters(str));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////16&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"295";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("16)&amp;nbsp;"&amp;nbsp;+&amp;nbsp;isLessThenThreeHundret(str));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;////////////////////////&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;boolean&amp;nbsp;isTrue(String&amp;nbsp;s)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;s.matches("[tT]rue");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;boolean&amp;nbsp;isTrueOrYes(String&amp;nbsp;s)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;s.matches("[tT]rue|[yY]es");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;boolean&amp;nbsp;containsTrue(String&amp;nbsp;s)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;s.matches(".*true.*");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;boolean&amp;nbsp;isThreeLetters(String&amp;nbsp;s)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;s.matches("[a-zA-Z]{3}");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;simpler&amp;nbsp;from&amp;nbsp;for&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;return&amp;nbsp;s.matches("[a-Z][a-Z][a-Z]");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;boolean&amp;nbsp;isNoNumberAtBeginning(String&amp;nbsp;s)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;s.matches("^[^\\d].*");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;boolean&amp;nbsp;doesntContainb(String&amp;nbsp;s)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;s.matches("([\\w&amp;&amp;[^b]])*");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;boolean&amp;nbsp;isLessThenThreeHundret(String&amp;nbsp;s)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;s.matches("[12]?[0-9]{1,2}[^0-9]*");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;:&amp;nbsp;&lt;br&gt;
1)&amp;nbsp;true&lt;br&gt;
2)&amp;nbsp;true&lt;br&gt;
3)&amp;nbsp;false&lt;br&gt;
4)&amp;nbsp;false&lt;br&gt;
5)&amp;nbsp;true&lt;br&gt;
6)&amp;nbsp;false&lt;br&gt;
7)&amp;nbsp;false&lt;br&gt;
8)&amp;nbsp;true&lt;br&gt;
9)&amp;nbsp;true&lt;br&gt;
10)&amp;nbsp;true&lt;br&gt;
11)&amp;nbsp;true&lt;br&gt;
12)&amp;nbsp;true&lt;br&gt;
13)&amp;nbsp;true&lt;br&gt;
14)&amp;nbsp;true&lt;br&gt;
15)&amp;nbsp;false&lt;br&gt;
16)&amp;nbsp;true&lt;br&gt;
&lt;br&gt;</questionanswer>
  </question>
  <question id="1_0_0_8_0_0:1" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Java&amp;nbsp;Regex&amp;nbsp;:&amp;nbsp;Grouping&amp;nbsp;,&amp;nbsp;describe&amp;nbsp;.&amp;nbsp;&lt;br&gt;
Describe&amp;nbsp;what&amp;nbsp;this&amp;nbsp;code&amp;nbsp;do&amp;nbsp;&amp;nbsp;:&amp;nbsp;str.replaceAll(pattern,&amp;nbsp;&amp;quot;$1$3&amp;quot;)).&lt;br&gt;
Write&amp;nbsp;code&amp;nbsp;which&amp;nbsp;will&amp;nbsp;replace&amp;nbsp;white&amp;nbsp;spaces&amp;nbsp;after&amp;nbsp;world&amp;nbsp;and&amp;nbsp;dot&amp;nbsp;or&amp;nbsp;comma&amp;nbsp;,&lt;br&gt;
for&amp;nbsp;example&amp;nbsp;:&amp;nbsp;&amp;nbsp;&amp;quot;Hello&amp;nbsp;world&amp;nbsp;,&amp;nbsp;and&amp;nbsp;.&amp;quot;&amp;nbsp;=&gt;&amp;nbsp;&amp;quot;Hello&amp;nbsp;world,&amp;nbsp;and.&amp;quot;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Grouping&amp;nbsp;:&lt;br&gt;
You&amp;nbsp;can&amp;nbsp;group&amp;nbsp;parts&amp;nbsp;of&amp;nbsp;your&amp;nbsp;regular&amp;nbsp;expression.&amp;nbsp;In&amp;nbsp;your&amp;nbsp;pattern&amp;nbsp;you&amp;nbsp;group&amp;nbsp;elements&amp;nbsp;with&lt;br&gt;
round&amp;nbsp;brackets,&amp;nbsp;e.g.,&amp;nbsp;().&amp;nbsp;This&amp;nbsp;allows&amp;nbsp;you&amp;nbsp;to&amp;nbsp;assign&amp;nbsp;a&amp;nbsp;repetition&amp;nbsp;operator&amp;nbsp;to&amp;nbsp;a&amp;nbsp;complete&amp;nbsp;group.&amp;nbsp;&lt;br&gt;
&lt;br&gt;
In&amp;nbsp;addition&amp;nbsp;these&amp;nbsp;groups&amp;nbsp;also&amp;nbsp;create&amp;nbsp;a&amp;nbsp;backreference&amp;nbsp;to&amp;nbsp;the&amp;nbsp;part&amp;nbsp;of&amp;nbsp;the&amp;nbsp;regular&amp;nbsp;expression.&amp;nbsp;This&lt;br&gt;
captures&amp;nbsp;the&amp;nbsp;group.&amp;nbsp;A&amp;nbsp;backreference&amp;nbsp;stores&amp;nbsp;the&amp;nbsp;part&amp;nbsp;of&amp;nbsp;the&amp;nbsp;String&amp;nbsp;which&amp;nbsp;matched&amp;nbsp;the&amp;nbsp;group.&lt;br&gt;
This&amp;nbsp;allows&amp;nbsp;you&amp;nbsp;to&amp;nbsp;use&amp;nbsp;this&amp;nbsp;part&amp;nbsp;in&amp;nbsp;the&amp;nbsp;replacement.&amp;nbsp;&lt;br&gt;
&lt;br&gt;
================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Negative&amp;nbsp;Lookahead&amp;nbsp;:&amp;nbsp;&lt;br&gt;
Negative&amp;nbsp;Lookahead&amp;nbsp;provides&amp;nbsp;the&amp;nbsp;possibility&amp;nbsp;to&amp;nbsp;exclude&amp;nbsp;a&amp;nbsp;pattern.&amp;nbsp;With&amp;nbsp;this&amp;nbsp;you&amp;nbsp;can&amp;nbsp;say&amp;nbsp;that&amp;nbsp;a&lt;br&gt;
string&amp;nbsp;should&amp;nbsp;not&amp;nbsp;be&amp;nbsp;followed&amp;nbsp;by&amp;nbsp;another&amp;nbsp;string.&lt;br&gt;
&lt;br&gt;
Negative&amp;nbsp;Lookaheads&amp;nbsp;are&amp;nbsp;defined&amp;nbsp;via&amp;nbsp;(?!pattern).&amp;nbsp;For&amp;nbsp;example,&amp;nbsp;the&amp;nbsp;following&amp;nbsp;will&lt;br&gt;
match&amp;nbsp;"a"&amp;nbsp;if&amp;nbsp;"a"&amp;nbsp;is&amp;nbsp;not&amp;nbsp;followed&amp;nbsp;by&amp;nbsp;"b".&lt;br&gt;
&lt;br&gt;
a(?!b)&amp;nbsp;&lt;br&gt;
================================================&lt;br&gt;
Backslashes&amp;nbsp;in&amp;nbsp;Java&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;backslash&amp;nbsp;\&amp;nbsp;is&amp;nbsp;an&amp;nbsp;escape&amp;nbsp;character&amp;nbsp;in&amp;nbsp;Java&amp;nbsp;Strings.&amp;nbsp;That&amp;nbsp;means&amp;nbsp;backslash&amp;nbsp;has&amp;nbsp;a&amp;nbsp;predefined&lt;br&gt;
meaning&amp;nbsp;in&amp;nbsp;Java.&amp;nbsp;You&amp;nbsp;have&amp;nbsp;to&amp;nbsp;use&amp;nbsp;double&amp;nbsp;backslash&amp;nbsp;\\&amp;nbsp;to&amp;nbsp;define&amp;nbsp;a&amp;nbsp;single&amp;nbsp;backslash.&amp;nbsp;If&amp;nbsp;you&amp;nbsp;want&amp;nbsp;to&lt;br&gt;
define&amp;nbsp;\w,&amp;nbsp;then&amp;nbsp;you&amp;nbsp;must&amp;nbsp;be&amp;nbsp;using&amp;nbsp;\\w&amp;nbsp;in&amp;nbsp;your&amp;nbsp;regex.&amp;nbsp;If&amp;nbsp;you&amp;nbsp;want&amp;nbsp;to&amp;nbsp;use&amp;nbsp;backslash&amp;nbsp;as&amp;nbsp;a&amp;nbsp;literal,&lt;br&gt;
you&amp;nbsp;have&amp;nbsp;to&amp;nbsp;type&amp;nbsp;\\\\&amp;nbsp;as&amp;nbsp;\&amp;nbsp;is&amp;nbsp;also&amp;nbsp;an&amp;nbsp;escape&amp;nbsp;character&amp;nbsp;in&amp;nbsp;regular&amp;nbsp;expressions.&amp;nbsp;&lt;br&gt;
&lt;br&gt;
================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;Example&amp;nbsp;:&amp;nbsp;&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;vogellapack;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;GroupingandBackreference&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;args&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//remove&amp;nbsp;white&amp;nbsp;spaces&amp;nbsp;between&amp;nbsp;world&amp;nbsp;and&amp;nbsp;following&amp;nbsp;comma&amp;nbsp;,&amp;nbsp;dot&amp;nbsp;or&amp;nbsp;dvikrapky&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;pattern&amp;nbsp;=&amp;nbsp;"(\\w)(\\s+)([\\.,:])";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;str&amp;nbsp;=&amp;nbsp;"&amp;nbsp;Hello&amp;nbsp;world&amp;nbsp;,&amp;nbsp;and&amp;nbsp;once&amp;nbsp;more&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;:&amp;nbsp;Hello&amp;nbsp;world.&amp;nbsp;";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(str);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(str.replaceAll(pattern,&amp;nbsp;"$1$3"));&amp;nbsp;//&amp;nbsp;numeration&amp;nbsp;from&amp;nbsp;1&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/////////////////////////////////////////////////////////////////////&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//This&amp;nbsp;example&amp;nbsp;extracts&amp;nbsp;the&amp;nbsp;text&amp;nbsp;between&amp;nbsp;a&amp;nbsp;title&amp;nbsp;tag.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;EXAMPLE_TEST&amp;nbsp;=&amp;nbsp;"asdfioasdfi&lt;title&gt;TiTlE&lt;/title&gt;asdfasdf";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Extract&amp;nbsp;the&amp;nbsp;text&amp;nbsp;between&amp;nbsp;the&amp;nbsp;two&amp;nbsp;title&amp;nbsp;elements&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pattern&amp;nbsp;=&amp;nbsp;"(.*)(&lt;title.*?&gt;)(.+?)(&lt;/title&gt;)(.*)";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;updated&amp;nbsp;=&amp;nbsp;EXAMPLE_TEST.replaceAll(pattern,&amp;nbsp;"$3");&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(updated);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;:&lt;br&gt;
&amp;nbsp;Hello&amp;nbsp;world&amp;nbsp;,&amp;nbsp;and&amp;nbsp;once&amp;nbsp;more&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;:&amp;nbsp;Hello&amp;nbsp;world.&amp;nbsp;&lt;br&gt;
&amp;nbsp;Hello&amp;nbsp;world,&amp;nbsp;and&amp;nbsp;once&amp;nbsp;more:&amp;nbsp;Hello&amp;nbsp;world.&amp;nbsp;&lt;br&gt;
TiTlE&lt;br&gt;</questionanswer>
  </question>
  <question id="1_0_0_8_0_0:2" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Java&amp;nbsp;regex&amp;nbsp;&amp;nbsp;:&amp;nbsp;write&amp;nbsp;function&amp;nbsp;to&amp;nbsp;validate&amp;nbsp;what&amp;nbsp;string&amp;nbsp;is&amp;nbsp;number&amp;nbsp;less&amp;nbsp;than&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;300.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>package&amp;nbsp;vogellapack;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;RegexLessThan300&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;args&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String[]&amp;nbsp;test&amp;nbsp;=&amp;nbsp;{"150",&amp;nbsp;"340",&amp;nbsp;"230",&amp;nbsp;"95",&amp;nbsp;"aaa230",&amp;nbsp;"230a",&amp;nbsp;""&amp;nbsp;};&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(String&amp;nbsp;item&amp;nbsp;:&amp;nbsp;test)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(String.format("%10s&amp;nbsp;is&amp;nbsp;less&amp;nbsp;than&amp;nbsp;300&amp;nbsp;:&amp;nbsp;%s",&amp;nbsp;item,&amp;nbsp;isLessThan300(item)));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;boolean&amp;nbsp;isLessThan300(String&amp;nbsp;str){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;str.matches("[12]?[0-9]{1,2}");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;:&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;150&amp;nbsp;is&amp;nbsp;less&amp;nbsp;than&amp;nbsp;300&amp;nbsp;:&amp;nbsp;true&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;340&amp;nbsp;is&amp;nbsp;less&amp;nbsp;than&amp;nbsp;300&amp;nbsp;:&amp;nbsp;false&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;230&amp;nbsp;is&amp;nbsp;less&amp;nbsp;than&amp;nbsp;300&amp;nbsp;:&amp;nbsp;true&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;95&amp;nbsp;is&amp;nbsp;less&amp;nbsp;than&amp;nbsp;300&amp;nbsp;:&amp;nbsp;true&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;aaa230&amp;nbsp;is&amp;nbsp;less&amp;nbsp;than&amp;nbsp;300&amp;nbsp;:&amp;nbsp;false&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;230a&amp;nbsp;is&amp;nbsp;less&amp;nbsp;than&amp;nbsp;300&amp;nbsp;:&amp;nbsp;false&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;is&amp;nbsp;less&amp;nbsp;than&amp;nbsp;300&amp;nbsp;:&amp;nbsp;false</questionanswer>
  </question>
  <question id="1_0_0_8_0_0:3" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Java&amp;nbsp;regex&amp;nbsp;:&amp;nbsp;&amp;nbsp;java.util.regex&amp;nbsp;:&amp;nbsp;Pattern&amp;nbsp;and&amp;nbsp;Matcher&amp;nbsp;classes&amp;nbsp;,&amp;nbsp;describe.&lt;br&gt;
Provide&amp;nbsp;examples&amp;nbsp;.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>For&amp;nbsp;advanced&amp;nbsp;regular&amp;nbsp;expressions&amp;nbsp;the&amp;nbsp;java.util.regex.Pattern&amp;nbsp;and&amp;nbsp;java.util.regex.Matcher&amp;nbsp;classes&amp;nbsp;are&amp;nbsp;used.&lt;br&gt;
&lt;br&gt;
You&amp;nbsp;first&amp;nbsp;create&amp;nbsp;a&amp;nbsp;Pattern&amp;nbsp;object&amp;nbsp;which&amp;nbsp;defines&amp;nbsp;the&amp;nbsp;regular&amp;nbsp;expression.&amp;nbsp;This&amp;nbsp;Pattern&amp;nbsp;object&amp;nbsp;allows&lt;br&gt;
you&amp;nbsp;to&amp;nbsp;create&amp;nbsp;a&amp;nbsp;Matcher&amp;nbsp;object&amp;nbsp;for&amp;nbsp;a&amp;nbsp;given&amp;nbsp;string.&amp;nbsp;This&amp;nbsp;Matcher&amp;nbsp;object&amp;nbsp;then&amp;nbsp;allows&amp;nbsp;you&amp;nbsp;to&amp;nbsp;do&amp;nbsp;regex&lt;br&gt;
operations&amp;nbsp;on&amp;nbsp;a&amp;nbsp;String.&amp;nbsp;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;(Simple&amp;nbsp;Hello&amp;nbsp;world&amp;nbsp;)&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;vogellapack;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.regex.Matcher;&lt;br&gt;
import&amp;nbsp;java.util.regex.Pattern;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;PatternAndMatcher&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;EXAMPLE_TEST&amp;nbsp;=&amp;nbsp;"This&amp;nbsp;is&amp;nbsp;my&amp;nbsp;small&amp;nbsp;example&amp;nbsp;string&amp;nbsp;which&amp;nbsp;I'm&amp;nbsp;going&amp;nbsp;to&amp;nbsp;use&amp;nbsp;for&amp;nbsp;pattern&amp;nbsp;Matching.";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Pattern&amp;nbsp;pattern&amp;nbsp;=&amp;nbsp;Pattern.compile("\\w+");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Matcher&amp;nbsp;matcher&amp;nbsp;=&amp;nbsp;pattern.matcher(EXAMPLE_TEST);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(matcher.find())&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(String.format("Start&amp;nbsp;index:&amp;nbsp;%3s&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;%3s&amp;nbsp;,&amp;nbsp;%10s",&amp;nbsp;matcher.start(),&amp;nbsp;matcher.end(),&amp;nbsp;matcher.group()));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;get&amp;nbsp;matcher&amp;nbsp;result&amp;nbsp;count&amp;nbsp;:&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int&amp;nbsp;count&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(matcher.find())&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;count++;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;now&amp;nbsp;create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;pattern&amp;nbsp;and&amp;nbsp;matcher&amp;nbsp;to&amp;nbsp;replace&amp;nbsp;whitespace&amp;nbsp;with&amp;nbsp;tabs&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Pattern&amp;nbsp;replace&amp;nbsp;=&amp;nbsp;Pattern.compile("\\s+");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Matcher&amp;nbsp;matcher2&amp;nbsp;=&amp;nbsp;replace.matcher(EXAMPLE_TEST);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(matcher2.replaceAll("\t$0"));&amp;nbsp;//&amp;nbsp;$0&amp;nbsp;here&amp;nbsp;is&amp;nbsp;a&amp;nbsp;finded&amp;nbsp;group&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;:&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;&amp;nbsp;4&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;&amp;nbsp;5&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;&amp;nbsp;7&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;is&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;&amp;nbsp;8&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;10&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;my&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;11&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;16&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;small&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;17&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;24&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;example&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;25&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;31&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;32&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;37&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;which&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;38&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;39&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;40&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;41&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;42&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;47&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;going&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;48&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;50&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;to&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;51&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;54&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;use&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;55&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;58&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;59&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;66&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pattern&lt;br&gt;
Start&amp;nbsp;index:&amp;nbsp;&amp;nbsp;67&amp;nbsp;,&amp;nbsp;end&amp;nbsp;index&amp;nbsp;&amp;nbsp;75&amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;Matching&lt;br&gt;
This&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;is&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;my&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;small&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;example&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;which&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I'm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;going&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;to&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;use&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pattern&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Matching.&lt;br&gt;
&lt;br&gt;
==========================================================================&lt;br&gt;
&lt;br&gt;
Example&amp;nbsp;&amp;nbsp;(&amp;nbsp;not&amp;nbsp;hello&amp;nbsp;world&amp;nbsp;=)&amp;nbsp;)&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;groups()&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Example&amp;nbsp;from&amp;nbsp;thinking&amp;nbsp;in&amp;nbsp;java&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;poem&amp;nbsp;=&amp;nbsp;"Twas&amp;nbsp;brillig,&amp;nbsp;and&amp;nbsp;the&amp;nbsp;slithy&amp;nbsp;toves\n"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+&amp;nbsp;"Did&amp;nbsp;gyre&amp;nbsp;and&amp;nbsp;gimble&amp;nbsp;in&amp;nbsp;the&amp;nbsp;wabe.\n"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+&amp;nbsp;"All&amp;nbsp;mimsy&amp;nbsp;were&amp;nbsp;the&amp;nbsp;borogoves,\n"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+&amp;nbsp;"And&amp;nbsp;the&amp;nbsp;mome&amp;nbsp;raths&amp;nbsp;outgrabe.\n\n"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+&amp;nbsp;"Beware&amp;nbsp;the&amp;nbsp;Jabberwock,&amp;nbsp;my&amp;nbsp;son,\n"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+&amp;nbsp;"The&amp;nbsp;jaws&amp;nbsp;that&amp;nbsp;bite,&amp;nbsp;the&amp;nbsp;claws&amp;nbsp;that&amp;nbsp;catch.\n"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+&amp;nbsp;"Beware&amp;nbsp;the&amp;nbsp;Jubjub&amp;nbsp;bird,&amp;nbsp;and&amp;nbsp;shun\n"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+&amp;nbsp;"The&amp;nbsp;frumious&amp;nbsp;Bandersnatch.";&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Matcher&amp;nbsp;m&amp;nbsp;=&amp;nbsp;Pattern.compile("(?m)(\\S+)\\s+((\\S+)\\s+(\\S+))$")&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.matcher(poem);&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(m.find())&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(m.groupCount());&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(int&amp;nbsp;j&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;j&amp;nbsp;&lt;=&amp;nbsp;m.groupCount();&amp;nbsp;j++)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.print("["&amp;nbsp;+&amp;nbsp;m.group(j)&amp;nbsp;+&amp;nbsp;"]");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;:&lt;br&gt;
4&lt;br&gt;
[the&amp;nbsp;slithy&amp;nbsp;toves][the][slithy&amp;nbsp;toves][slithy][toves]&lt;br&gt;
4&lt;br&gt;
[in&amp;nbsp;the&amp;nbsp;wabe.][in][the&amp;nbsp;wabe.][the][wabe.]&lt;br&gt;
4&lt;br&gt;
[were&amp;nbsp;the&amp;nbsp;borogoves,][were][the&amp;nbsp;borogoves,][the][borogoves,]&lt;br&gt;
4&lt;br&gt;
[mome&amp;nbsp;raths&amp;nbsp;outgrabe.][mome][raths&amp;nbsp;outgrabe.][raths][outgrabe.]&lt;br&gt;
4&lt;br&gt;
[Jabberwock,&amp;nbsp;my&amp;nbsp;son,][Jabberwock,][my&amp;nbsp;son,][my][son,]&lt;br&gt;
4&lt;br&gt;
[claws&amp;nbsp;that&amp;nbsp;catch.][claws][that&amp;nbsp;catch.][that][catch.]&lt;br&gt;
4&lt;br&gt;
[bird,&amp;nbsp;and&amp;nbsp;shun][bird,][and&amp;nbsp;shun][and][shun]&lt;br&gt;
4&lt;br&gt;
[The&amp;nbsp;frumious&amp;nbsp;Bandersnatch.][The][frumious&amp;nbsp;Bandersnatch.][frumious][Bandersnatch.]&lt;br&gt;
&lt;br&gt;
Look&amp;nbsp;,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;good&amp;nbsp;example&amp;nbsp;of&amp;nbsp;using&amp;nbsp;groups&amp;nbsp;and&amp;nbsp;groupCount.</questionanswer>
  </question>
  <question id="1_0_0_8_0_0:4" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Java&amp;nbsp;regex&amp;nbsp;:&amp;nbsp;Lookups&amp;nbsp;negative&amp;nbsp;and&amp;nbsp;positive,&amp;nbsp;ahead&amp;nbsp;and&amp;nbsp;behind,&amp;nbsp;describe.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Example&amp;nbsp;1&amp;nbsp;:&lt;br&gt;
package&amp;nbsp;vogellapack;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.regex.Matcher;&lt;br&gt;
import&amp;nbsp;java.util.regex.Pattern;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;RegexLookup&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;args&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;here&amp;nbsp;we&amp;nbsp;have&amp;nbsp;negative&amp;nbsp;lookup&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"John&amp;nbsp;(?!Smith)[A-Z]\\w+";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Pattern&amp;nbsp;pattern&amp;nbsp;=&amp;nbsp;Pattern.compile(regex);&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;candidate&amp;nbsp;=&amp;nbsp;"I&amp;nbsp;think&amp;nbsp;that&amp;nbsp;John&amp;nbsp;Smith&amp;nbsp;";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;candidate&amp;nbsp;+=&amp;nbsp;"is&amp;nbsp;a&amp;nbsp;fictional&amp;nbsp;character.&amp;nbsp;His&amp;nbsp;real&amp;nbsp;name&amp;nbsp;";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;candidate&amp;nbsp;+=&amp;nbsp;"might&amp;nbsp;be&amp;nbsp;John&amp;nbsp;Jackson,&amp;nbsp;John&amp;nbsp;Westling,&amp;nbsp;";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;candidate&amp;nbsp;+=&amp;nbsp;"or&amp;nbsp;John&amp;nbsp;Holmes&amp;nbsp;for&amp;nbsp;all&amp;nbsp;we&amp;nbsp;know.";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Matcher&amp;nbsp;matcher&amp;nbsp;=&amp;nbsp;pattern.matcher(candidate);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(matcher.find())&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(matcher.group());&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;:&amp;nbsp;&lt;br&gt;
John&amp;nbsp;Jackson&lt;br&gt;
John&amp;nbsp;Westling&lt;br&gt;
John&amp;nbsp;Holmes&lt;br&gt;
===================================================&lt;br&gt;</questionanswer>
  </question>
  <question id="1_0_0_8_0_0:5" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Java&amp;nbsp;regex&amp;nbsp;:&amp;nbsp;&amp;nbsp;10&amp;nbsp;&amp;nbsp;examples&amp;nbsp;:&amp;nbsp;&lt;br&gt;
Username,&amp;nbsp;Password,&amp;nbsp;Hexadecimal&amp;nbsp;Color&amp;nbsp;Code,&amp;nbsp;Email,&amp;nbsp;Image&amp;nbsp;File&amp;nbsp;Extension,&amp;nbsp;IP&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Address,&lt;br&gt;
Time&amp;nbsp;in&amp;nbsp;12-Hour&amp;nbsp;Format,&amp;nbsp;Date&amp;nbsp;Format&amp;nbsp;(dd/mm/yyyy),&amp;nbsp;HTML&amp;nbsp;tag,&amp;nbsp;HTML&amp;nbsp;links,&amp;nbsp;URL&lt;br&gt;
&lt;br&gt;
Describe&amp;nbsp;TWO&amp;nbsp;of&amp;nbsp;them,&amp;nbsp;provide&amp;nbsp;code&amp;nbsp;examples.&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>&lt;br&gt;
1.&amp;nbsp;Username&lt;br&gt;
&amp;nbsp;^[a-z0-9_-]{3,15}$&lt;br&gt;
&lt;br&gt;
^&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;Start&amp;nbsp;of&amp;nbsp;the&amp;nbsp;line&lt;br&gt;
&amp;nbsp;&amp;nbsp;[a-z0-9_-]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;Match&amp;nbsp;characters&amp;nbsp;and&amp;nbsp;symbols&amp;nbsp;in&amp;nbsp;the&amp;nbsp;list,&amp;nbsp;a-z,&amp;nbsp;0-9&amp;nbsp;,&amp;nbsp;underscore&amp;nbsp;,&amp;nbsp;hyphen&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{3,15}&amp;nbsp;&amp;nbsp;#&amp;nbsp;Length&amp;nbsp;at&amp;nbsp;least&amp;nbsp;3&amp;nbsp;characters&amp;nbsp;and&amp;nbsp;maximum&amp;nbsp;length&amp;nbsp;of&amp;nbsp;15&amp;nbsp;&lt;br&gt;
$&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;End&amp;nbsp;of&amp;nbsp;the&amp;nbsp;line&lt;br&gt;
================================================&lt;br&gt;
2.&amp;nbsp;Password&amp;nbsp;&lt;br&gt;
((?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})&lt;br&gt;
&lt;br&gt;
(&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;Start&amp;nbsp;of&amp;nbsp;group&lt;br&gt;
&amp;nbsp;&amp;nbsp;(?=.*\d)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;must&amp;nbsp;contains&amp;nbsp;one&amp;nbsp;digit&amp;nbsp;from&amp;nbsp;0-9&lt;br&gt;
&amp;nbsp;&amp;nbsp;(?=.*[a-z])&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;must&amp;nbsp;contains&amp;nbsp;one&amp;nbsp;lowercase&amp;nbsp;characters&lt;br&gt;
&amp;nbsp;&amp;nbsp;(?=.*[A-Z])&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;must&amp;nbsp;contains&amp;nbsp;one&amp;nbsp;uppercase&amp;nbsp;characters&lt;br&gt;
&amp;nbsp;&amp;nbsp;(?=.*[@#$%])&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;must&amp;nbsp;contains&amp;nbsp;one&amp;nbsp;special&amp;nbsp;symbols&amp;nbsp;in&amp;nbsp;the&amp;nbsp;list&amp;nbsp;"@#$%"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;match&amp;nbsp;anything&amp;nbsp;with&amp;nbsp;previous&amp;nbsp;condition&amp;nbsp;checking&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{6,20}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;length&amp;nbsp;at&amp;nbsp;least&amp;nbsp;6&amp;nbsp;characters&amp;nbsp;and&amp;nbsp;maximum&amp;nbsp;of&amp;nbsp;20&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;End&amp;nbsp;of&amp;nbsp;group&lt;br&gt;
&lt;br&gt;
================================================&lt;br&gt;
3&amp;nbsp;Hexadecimal&amp;nbsp;Color&amp;nbsp;Code&amp;nbsp;&lt;br&gt;
^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$&lt;br&gt;
&lt;br&gt;
================================================&lt;br&gt;
4&amp;nbsp;Email&amp;nbsp;&lt;br&gt;
^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+&lt;br&gt;
(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$&lt;br&gt;
&lt;br&gt;
^&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#start&amp;nbsp;of&amp;nbsp;the&amp;nbsp;line&lt;br&gt;
&amp;nbsp;&amp;nbsp;[_A-Za-z0-9-]+&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;must&amp;nbsp;start&amp;nbsp;with&amp;nbsp;string&amp;nbsp;in&amp;nbsp;the&amp;nbsp;bracket&amp;nbsp;[&amp;nbsp;],&amp;nbsp;must&amp;nbsp;contains&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&amp;nbsp;(+)&lt;br&gt;
&amp;nbsp;&amp;nbsp;(&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;start&amp;nbsp;of&amp;nbsp;group&amp;nbsp;#1&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\\.[_A-Za-z0-9-]+&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;follow&amp;nbsp;by&amp;nbsp;a&amp;nbsp;dot&amp;nbsp;"."&amp;nbsp;and&amp;nbsp;string&amp;nbsp;in&amp;nbsp;the&amp;nbsp;bracket&amp;nbsp;[&amp;nbsp;],&amp;nbsp;must&amp;nbsp;contains&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&amp;nbsp;(+)&lt;br&gt;
&amp;nbsp;&amp;nbsp;)*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;end&amp;nbsp;of&amp;nbsp;group&amp;nbsp;#1,&amp;nbsp;this&amp;nbsp;group&amp;nbsp;is&amp;nbsp;optional&amp;nbsp;(*)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;must&amp;nbsp;contains&amp;nbsp;a&amp;nbsp;"@"&amp;nbsp;symbol&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[A-Za-z0-9]+&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;follow&amp;nbsp;by&amp;nbsp;string&amp;nbsp;in&amp;nbsp;the&amp;nbsp;bracket&amp;nbsp;[&amp;nbsp;],&amp;nbsp;must&amp;nbsp;contains&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&amp;nbsp;(+)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;start&amp;nbsp;of&amp;nbsp;group&amp;nbsp;#2&amp;nbsp;-&amp;nbsp;first&amp;nbsp;level&amp;nbsp;TLD&amp;nbsp;checking&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\\.[A-Za-z0-9]+&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;follow&amp;nbsp;by&amp;nbsp;a&amp;nbsp;dot&amp;nbsp;"."&amp;nbsp;and&amp;nbsp;string&amp;nbsp;in&amp;nbsp;the&amp;nbsp;bracket&amp;nbsp;[&amp;nbsp;],&amp;nbsp;must&amp;nbsp;contains&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&amp;nbsp;(+)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;)*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;of&amp;nbsp;group&amp;nbsp;#2,&amp;nbsp;this&amp;nbsp;group&amp;nbsp;is&amp;nbsp;optional&amp;nbsp;(*)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;start&amp;nbsp;of&amp;nbsp;group&amp;nbsp;#3&amp;nbsp;-&amp;nbsp;second&amp;nbsp;level&amp;nbsp;TLD&amp;nbsp;checking&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\\.[A-Za-z]{2,}&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;follow&amp;nbsp;by&amp;nbsp;a&amp;nbsp;dot&amp;nbsp;"."&amp;nbsp;and&amp;nbsp;string&amp;nbsp;in&amp;nbsp;the&amp;nbsp;bracket&amp;nbsp;[&amp;nbsp;],&amp;nbsp;with&amp;nbsp;minimum&amp;nbsp;length&amp;nbsp;of&amp;nbsp;2&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;of&amp;nbsp;group&amp;nbsp;#3&lt;br&gt;
$&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#end&amp;nbsp;of&amp;nbsp;the&amp;nbsp;line&lt;br&gt;
&lt;br&gt;
================================================&lt;br&gt;
5&amp;nbsp;Image&amp;nbsp;File&amp;nbsp;Extension&amp;nbsp;&lt;br&gt;
([^\s]+(\.(?i)(jpg|png|gif|bmp))$)&lt;br&gt;
&lt;br&gt;
(&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#Start&amp;nbsp;of&amp;nbsp;the&amp;nbsp;group&amp;nbsp;#1&lt;br&gt;
&amp;nbsp;[^\s]+&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;must&amp;nbsp;contains&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&amp;nbsp;anything&amp;nbsp;(except&amp;nbsp;white&amp;nbsp;space)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;start&amp;nbsp;of&amp;nbsp;the&amp;nbsp;group&amp;nbsp;#2&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;follow&amp;nbsp;by&amp;nbsp;a&amp;nbsp;dot&amp;nbsp;"."&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(?i)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ignore&amp;nbsp;the&amp;nbsp;case&amp;nbsp;sensitive&amp;nbsp;checking&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;start&amp;nbsp;of&amp;nbsp;the&amp;nbsp;group&amp;nbsp;#3&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jpg&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;contains&amp;nbsp;characters&amp;nbsp;"jpg"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;..or&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;png&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;contains&amp;nbsp;characters&amp;nbsp;"png"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;..or&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gif&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;contains&amp;nbsp;characters&amp;nbsp;"gif"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;..or&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bmp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;contains&amp;nbsp;characters&amp;nbsp;"bmp"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;of&amp;nbsp;the&amp;nbsp;group&amp;nbsp;#3&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end&amp;nbsp;of&amp;nbsp;the&amp;nbsp;group&amp;nbsp;#2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;$&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;&amp;nbsp;end&amp;nbsp;of&amp;nbsp;the&amp;nbsp;string&lt;br&gt;
)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#end&amp;nbsp;of&amp;nbsp;the&amp;nbsp;group&amp;nbsp;#1&lt;br&gt;
================================================&lt;br&gt;
6&amp;nbsp;IP&amp;nbsp;Address&amp;nbsp;&lt;br&gt;
^(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}$&lt;br&gt;
&lt;br&gt;
^(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)&amp;nbsp;#&amp;nbsp;first&amp;nbsp;element&lt;br&gt;
(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}$&amp;nbsp;#&amp;nbsp;other&amp;nbsp;3&amp;nbsp;elements&lt;br&gt;
================================================&lt;br&gt;
7&amp;nbsp;Time&amp;nbsp;in&amp;nbsp;24-Hour&amp;nbsp;&lt;br&gt;
([01]?[0-9]|2[0-3]):[0-5][0-9]&lt;br&gt;
&lt;br&gt;
Time&amp;nbsp;in&amp;nbsp;12-Hour&amp;nbsp;format&lt;br&gt;
(1[012]|[1-9]):[0-5][0-9](\\s)?(?i)(am|pm)&lt;br&gt;
&lt;br&gt;
================================================&lt;br&gt;
8&amp;nbsp;Date&amp;nbsp;Format&amp;nbsp;(dd/mm/yyyy)&amp;nbsp;&lt;br&gt;
(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[012])/((19|20)\\d\\d)&lt;br&gt;
&lt;br&gt;
================================================&lt;br&gt;
9&amp;nbsp;HTML&amp;nbsp;tag&amp;nbsp;Regular&amp;nbsp;Expression&lt;br&gt;
&lt;("[^"]*"|'[^']*'|[^'"&gt;])*&gt;&lt;br&gt;
================================================&lt;br&gt;
10&amp;nbsp;HTML&amp;nbsp;A&amp;nbsp;tag&amp;nbsp;&lt;br&gt;
(?i)&lt;a([^&gt;]+)&gt;(.+?)&lt;/a&gt;&lt;br&gt;
&lt;br&gt;
(?i)&amp;nbsp;-&amp;nbsp;case&amp;nbsp;insensitive&amp;nbsp;!!!!&lt;br&gt;
================================================&lt;br&gt;
11&amp;nbsp;URL&lt;br&gt;
String&amp;nbsp;regex&amp;nbsp;=&amp;nbsp;"^(https?|ftp|file)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]";</questionanswer>
  </question>
  <question id="1_0_0_8_0_0:6" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Java&amp;nbsp;Regex&amp;nbsp;:&amp;nbsp;Credit&amp;nbsp;card&amp;nbsp;Number&amp;nbsp;validation,&amp;nbsp;describe.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Nice&amp;nbsp;variant&amp;nbsp;of&amp;nbsp;FULL&amp;nbsp;Credit&amp;nbsp;Card&amp;nbsp;Number&amp;nbsp;validation&amp;nbsp;:&amp;nbsp;&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;vogellapack;&lt;br&gt;
&lt;br&gt;
/*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Licensed&amp;nbsp;to&amp;nbsp;the&amp;nbsp;Apache&amp;nbsp;Software&amp;nbsp;Foundation&amp;nbsp;(ASF)&amp;nbsp;under&amp;nbsp;one&amp;nbsp;or&amp;nbsp;more&lt;br&gt;
&amp;nbsp;*&amp;nbsp;contributor&amp;nbsp;license&amp;nbsp;agreements.&amp;nbsp;&amp;nbsp;See&amp;nbsp;the&amp;nbsp;NOTICE&amp;nbsp;file&amp;nbsp;distributed&amp;nbsp;with&lt;br&gt;
&amp;nbsp;*&amp;nbsp;this&amp;nbsp;work&amp;nbsp;for&amp;nbsp;additional&amp;nbsp;information&amp;nbsp;regarding&amp;nbsp;copyright&amp;nbsp;ownership.&lt;br&gt;
&amp;nbsp;*&amp;nbsp;The&amp;nbsp;ASF&amp;nbsp;licenses&amp;nbsp;this&amp;nbsp;file&amp;nbsp;to&amp;nbsp;You&amp;nbsp;under&amp;nbsp;the&amp;nbsp;Apache&amp;nbsp;License,&amp;nbsp;Version&amp;nbsp;2.0&lt;br&gt;
&amp;nbsp;*&amp;nbsp;(the&amp;nbsp;"License");&amp;nbsp;you&amp;nbsp;may&amp;nbsp;not&amp;nbsp;use&amp;nbsp;this&amp;nbsp;file&amp;nbsp;except&amp;nbsp;in&amp;nbsp;compliance&amp;nbsp;with&lt;br&gt;
&amp;nbsp;*&amp;nbsp;the&amp;nbsp;License.&amp;nbsp;&amp;nbsp;You&amp;nbsp;may&amp;nbsp;obtain&amp;nbsp;a&amp;nbsp;copy&amp;nbsp;of&amp;nbsp;the&amp;nbsp;License&amp;nbsp;at&lt;br&gt;
&amp;nbsp;*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;http://www.apache.org/licenses/LICENSE-2.0&lt;br&gt;
&amp;nbsp;*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Unless&amp;nbsp;required&amp;nbsp;by&amp;nbsp;applicable&amp;nbsp;law&amp;nbsp;or&amp;nbsp;agreed&amp;nbsp;to&amp;nbsp;in&amp;nbsp;writing,&amp;nbsp;software&lt;br&gt;
&amp;nbsp;*&amp;nbsp;distributed&amp;nbsp;under&amp;nbsp;the&amp;nbsp;License&amp;nbsp;is&amp;nbsp;distributed&amp;nbsp;on&amp;nbsp;an&amp;nbsp;"AS&amp;nbsp;IS"&amp;nbsp;BASIS,&lt;br&gt;
&amp;nbsp;*&amp;nbsp;WITHOUT&amp;nbsp;WARRANTIES&amp;nbsp;OR&amp;nbsp;CONDITIONS&amp;nbsp;OF&amp;nbsp;ANY&amp;nbsp;KIND,&amp;nbsp;either&amp;nbsp;express&amp;nbsp;or&amp;nbsp;implied.&lt;br&gt;
&amp;nbsp;*&amp;nbsp;See&amp;nbsp;the&amp;nbsp;License&amp;nbsp;for&amp;nbsp;the&amp;nbsp;specific&amp;nbsp;language&amp;nbsp;governing&amp;nbsp;permissions&amp;nbsp;and&lt;br&gt;
&amp;nbsp;*&amp;nbsp;limitations&amp;nbsp;under&amp;nbsp;the&amp;nbsp;License.&lt;br&gt;
&amp;nbsp;*/&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.io.Serializable;&lt;br&gt;
import&amp;nbsp;java.util.ArrayList;&lt;br&gt;
import&amp;nbsp;java.util.Collection;&lt;br&gt;
import&amp;nbsp;java.util.Iterator;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
/**&lt;br&gt;
&amp;nbsp;*&amp;nbsp;&lt;p&gt;Perform&amp;nbsp;credit&amp;nbsp;card&amp;nbsp;validations.&lt;/p&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;&lt;p&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;By&amp;nbsp;default,&amp;nbsp;all&amp;nbsp;supported&amp;nbsp;card&amp;nbsp;types&amp;nbsp;are&amp;nbsp;allowed.&amp;nbsp;&amp;nbsp;You&amp;nbsp;can&amp;nbsp;specify&amp;nbsp;which&amp;nbsp;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;cards&amp;nbsp;should&amp;nbsp;pass&amp;nbsp;validation&amp;nbsp;by&amp;nbsp;configuring&amp;nbsp;the&amp;nbsp;validation&amp;nbsp;options.&amp;nbsp;&amp;nbsp;For&amp;nbsp;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;example,&lt;br/&gt;&lt;code&gt;CreditCardValidator&amp;nbsp;ccv&amp;nbsp;=&amp;nbsp;new&amp;nbsp;CreditCardValidator(CreditCardValidator.AMEX&amp;nbsp;+&amp;nbsp;CreditCardValidator.VISA);&lt;/code&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;configures&amp;nbsp;the&amp;nbsp;validator&amp;nbsp;to&amp;nbsp;only&amp;nbsp;pass&amp;nbsp;American&amp;nbsp;Express&amp;nbsp;and&amp;nbsp;Visa&amp;nbsp;cards.&lt;br&gt;
&amp;nbsp;*&amp;nbsp;If&amp;nbsp;a&amp;nbsp;card&amp;nbsp;type&amp;nbsp;is&amp;nbsp;not&amp;nbsp;directly&amp;nbsp;supported&amp;nbsp;by&amp;nbsp;this&amp;nbsp;class,&amp;nbsp;you&amp;nbsp;can&amp;nbsp;implement&lt;br&gt;
&amp;nbsp;*&amp;nbsp;the&amp;nbsp;CreditCardType&amp;nbsp;interface&amp;nbsp;and&amp;nbsp;pass&amp;nbsp;an&amp;nbsp;instance&amp;nbsp;into&amp;nbsp;the&amp;nbsp;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;&lt;code&gt;addAllowedCardType&lt;/code&gt;&amp;nbsp;method.&lt;br&gt;
&amp;nbsp;*&amp;nbsp;&lt;/p&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;For&amp;nbsp;a&amp;nbsp;similar&amp;nbsp;implementation&amp;nbsp;in&amp;nbsp;Perl,&amp;nbsp;reference&amp;nbsp;Sean&amp;nbsp;M.&amp;nbsp;Burke's&lt;br&gt;
&amp;nbsp;*&amp;nbsp;&lt;a&amp;nbsp;href="http://www.speech.cs.cmu.edu/~sburke/pub/luhn_lib.html"&gt;script&lt;/a&gt;.&lt;br&gt;
&amp;nbsp;*&amp;nbsp;More&amp;nbsp;information&amp;nbsp;is&amp;nbsp;also&amp;nbsp;available&lt;br&gt;
&amp;nbsp;*&amp;nbsp;&lt;a&amp;nbsp;href="http://www.merriampark.com/anatomycc.htm"&gt;here&lt;/a&gt;.&lt;br&gt;
&amp;nbsp;*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;@version&amp;nbsp;$Revision:&amp;nbsp;478334&amp;nbsp;$&amp;nbsp;$Date:&amp;nbsp;2006-11-22&amp;nbsp;21:31:54&amp;nbsp;+0000&amp;nbsp;(Wed,&amp;nbsp;22&amp;nbsp;Nov&amp;nbsp;2006)&amp;nbsp;$&lt;br&gt;
&amp;nbsp;*&amp;nbsp;@since&amp;nbsp;Validator&amp;nbsp;1.1&lt;br&gt;
&amp;nbsp;*/&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;CreditCardValidate&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CreditCardValidate&amp;nbsp;card&amp;nbsp;=&amp;nbsp;new&amp;nbsp;CreditCardValidate(CreditCardValidate.VISA);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//System.out.println(card.luhnCheck("4067555522221111"));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;card.isValid("4067555522221111");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Option&amp;nbsp;specifying&amp;nbsp;that&amp;nbsp;no&amp;nbsp;cards&amp;nbsp;are&amp;nbsp;allowed.&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;useful&amp;nbsp;if&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;you&amp;nbsp;want&amp;nbsp;only&amp;nbsp;custom&amp;nbsp;card&amp;nbsp;types&amp;nbsp;to&amp;nbsp;validate&amp;nbsp;so&amp;nbsp;you&amp;nbsp;turn&amp;nbsp;off&amp;nbsp;the&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;default&amp;nbsp;cards&amp;nbsp;with&amp;nbsp;this&amp;nbsp;option.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;&lt;br/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;&lt;pre&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;CreditCardValidator&amp;nbsp;v&amp;nbsp;=&amp;nbsp;new&amp;nbsp;CreditCardValidator(CreditCardValidator.NONE);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;v.addAllowedCardType(customType);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;v.isValid(aCardNumber);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;&lt;/pre&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@since&amp;nbsp;Validator&amp;nbsp;1.1.2&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;final&amp;nbsp;int&amp;nbsp;NONE&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Option&amp;nbsp;specifying&amp;nbsp;that&amp;nbsp;American&amp;nbsp;Express&amp;nbsp;cards&amp;nbsp;are&amp;nbsp;allowed.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;final&amp;nbsp;int&amp;nbsp;AMEX&amp;nbsp;=&amp;nbsp;1&amp;nbsp;&lt;&lt;&amp;nbsp;0;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Option&amp;nbsp;specifying&amp;nbsp;that&amp;nbsp;Visa&amp;nbsp;cards&amp;nbsp;are&amp;nbsp;allowed.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;final&amp;nbsp;int&amp;nbsp;VISA&amp;nbsp;=&amp;nbsp;1&amp;nbsp;&lt;&lt;&amp;nbsp;1;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Option&amp;nbsp;specifying&amp;nbsp;that&amp;nbsp;Mastercard&amp;nbsp;cards&amp;nbsp;are&amp;nbsp;allowed.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;final&amp;nbsp;int&amp;nbsp;MASTERCARD&amp;nbsp;=&amp;nbsp;1&amp;nbsp;&lt;&lt;&amp;nbsp;2;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Option&amp;nbsp;specifying&amp;nbsp;that&amp;nbsp;Discover&amp;nbsp;cards&amp;nbsp;are&amp;nbsp;allowed.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;final&amp;nbsp;int&amp;nbsp;DISCOVER&amp;nbsp;=&amp;nbsp;1&amp;nbsp;&lt;&lt;&amp;nbsp;3;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;The&amp;nbsp;CreditCardTypes&amp;nbsp;that&amp;nbsp;are&amp;nbsp;allowed&amp;nbsp;to&amp;nbsp;pass&amp;nbsp;validation.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;Collection&amp;nbsp;cardTypes&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ArrayList();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;CreditCardValidator&amp;nbsp;with&amp;nbsp;default&amp;nbsp;options.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;CreditCardValidate()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this(AMEX&amp;nbsp;+&amp;nbsp;VISA&amp;nbsp;+&amp;nbsp;MASTERCARD&amp;nbsp;+&amp;nbsp;DISCOVER);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;CreditCardValidator&amp;nbsp;with&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;options.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;options&amp;nbsp;Pass&amp;nbsp;in&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;CreditCardValidator.VISA&amp;nbsp;+&amp;nbsp;CreditCardValidator.AMEX&amp;nbsp;to&amp;nbsp;specify&amp;nbsp;that&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;those&amp;nbsp;are&amp;nbsp;the&amp;nbsp;only&amp;nbsp;valid&amp;nbsp;card&amp;nbsp;types.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;CreditCardValidate(int&amp;nbsp;options)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Flags&amp;nbsp;f&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Flags(options);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(f.isOn(VISA))&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.cardTypes.add(new&amp;nbsp;Visa());&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(f.isOn(AMEX))&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.cardTypes.add(new&amp;nbsp;Amex());&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(f.isOn(MASTERCARD))&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.cardTypes.add(new&amp;nbsp;Mastercard());&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(f.isOn(DISCOVER))&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.cardTypes.add(new&amp;nbsp;Discover());&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Checks&amp;nbsp;if&amp;nbsp;the&amp;nbsp;field&amp;nbsp;is&amp;nbsp;a&amp;nbsp;valid&amp;nbsp;credit&amp;nbsp;card&amp;nbsp;number.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;card&amp;nbsp;The&amp;nbsp;card&amp;nbsp;number&amp;nbsp;to&amp;nbsp;validate.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;Whether&amp;nbsp;the&amp;nbsp;card&amp;nbsp;number&amp;nbsp;is&amp;nbsp;valid.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;isValid(String&amp;nbsp;card)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;((card&amp;nbsp;==&amp;nbsp;null)&amp;nbsp;||&amp;nbsp;(card.length()&amp;nbsp;&lt;&amp;nbsp;13)&amp;nbsp;||&amp;nbsp;(card.length()&amp;nbsp;&gt;&amp;nbsp;19))&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;false;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!this.luhnCheck(card))&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;false;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Iterator&amp;nbsp;types&amp;nbsp;=&amp;nbsp;this.cardTypes.iterator();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(types.hasNext())&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CreditCardType&amp;nbsp;type&amp;nbsp;=&amp;nbsp;(CreditCardType)&amp;nbsp;types.next();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(type.matches(card))&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;true;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;false;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Add&amp;nbsp;an&amp;nbsp;allowed&amp;nbsp;CreditCardType&amp;nbsp;that&amp;nbsp;participates&amp;nbsp;in&amp;nbsp;the&amp;nbsp;card&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;validation&amp;nbsp;algorithm.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;type&amp;nbsp;The&amp;nbsp;type&amp;nbsp;that&amp;nbsp;is&amp;nbsp;now&amp;nbsp;allowed&amp;nbsp;to&amp;nbsp;pass&amp;nbsp;validation.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@since&amp;nbsp;Validator&amp;nbsp;1.1.2&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;addAllowedCardType(CreditCardType&amp;nbsp;type){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.cardTypes.add(type);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Checks&amp;nbsp;for&amp;nbsp;a&amp;nbsp;valid&amp;nbsp;credit&amp;nbsp;card&amp;nbsp;number.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;cardNumber&amp;nbsp;Credit&amp;nbsp;Card&amp;nbsp;Number.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;Whether&amp;nbsp;the&amp;nbsp;card&amp;nbsp;number&amp;nbsp;passes&amp;nbsp;the&amp;nbsp;luhnCheck.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;boolean&amp;nbsp;luhnCheck(String&amp;nbsp;cardNumber)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;number&amp;nbsp;must&amp;nbsp;be&amp;nbsp;validated&amp;nbsp;as&amp;nbsp;0..9&amp;nbsp;numeric&amp;nbsp;first!!&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int&amp;nbsp;digits&amp;nbsp;=&amp;nbsp;cardNumber.length();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int&amp;nbsp;oddOrEven&amp;nbsp;=&amp;nbsp;digits&amp;nbsp;&amp;&amp;nbsp;1;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long&amp;nbsp;sum&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(int&amp;nbsp;count&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;count&amp;nbsp;&lt;&amp;nbsp;digits;&amp;nbsp;count++)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int&amp;nbsp;digit&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;digit&amp;nbsp;=&amp;nbsp;Integer.parseInt(cardNumber.charAt(count)&amp;nbsp;+&amp;nbsp;"");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch(NumberFormatException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;false;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(((count&amp;nbsp;&amp;&amp;nbsp;1)&amp;nbsp;^&amp;nbsp;oddOrEven)&amp;nbsp;==&amp;nbsp;0)&amp;nbsp;{&amp;nbsp;//&amp;nbsp;not&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;digit&amp;nbsp;*=&amp;nbsp;2;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(digit&amp;nbsp;&gt;&amp;nbsp;9)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;digit&amp;nbsp;-=&amp;nbsp;9;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum&amp;nbsp;+=&amp;nbsp;digit;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(sum&amp;nbsp;==&amp;nbsp;0)&amp;nbsp;?&amp;nbsp;false&amp;nbsp;:&amp;nbsp;(sum&amp;nbsp;%&amp;nbsp;10&amp;nbsp;==&amp;nbsp;0);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;CreditCardType&amp;nbsp;implementations&amp;nbsp;define&amp;nbsp;how&amp;nbsp;validation&amp;nbsp;is&amp;nbsp;performed&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;for&amp;nbsp;one&amp;nbsp;type/brand&amp;nbsp;of&amp;nbsp;credit&amp;nbsp;card.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@since&amp;nbsp;Validator&amp;nbsp;1.1.2&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;interface&amp;nbsp;CreditCardType&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Returns&amp;nbsp;true&amp;nbsp;if&amp;nbsp;the&amp;nbsp;card&amp;nbsp;number&amp;nbsp;matches&amp;nbsp;this&amp;nbsp;type&amp;nbsp;of&amp;nbsp;credit&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;card.&amp;nbsp;&amp;nbsp;Note&amp;nbsp;that&amp;nbsp;this&amp;nbsp;method&amp;nbsp;is&amp;nbsp;&lt;strong&gt;not&lt;/strong&gt;&amp;nbsp;responsible&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;for&amp;nbsp;analyzing&amp;nbsp;the&amp;nbsp;general&amp;nbsp;form&amp;nbsp;of&amp;nbsp;the&amp;nbsp;card&amp;nbsp;number&amp;nbsp;because&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;&lt;code&gt;CreditCardValidator&lt;/code&gt;&amp;nbsp;performs&amp;nbsp;those&amp;nbsp;checks&amp;nbsp;before&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;calling&amp;nbsp;this&amp;nbsp;method.&amp;nbsp;&amp;nbsp;It&amp;nbsp;is&amp;nbsp;generally&amp;nbsp;only&amp;nbsp;required&amp;nbsp;to&amp;nbsp;valid&amp;nbsp;the&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;length&amp;nbsp;and&amp;nbsp;prefix&amp;nbsp;of&amp;nbsp;the&amp;nbsp;number&amp;nbsp;to&amp;nbsp;determine&amp;nbsp;if&amp;nbsp;it's&amp;nbsp;the&amp;nbsp;correct&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;type.&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;card&amp;nbsp;The&amp;nbsp;card&amp;nbsp;number,&amp;nbsp;never&amp;nbsp;null.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;true&amp;nbsp;if&amp;nbsp;the&amp;nbsp;number&amp;nbsp;matches.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;boolean&amp;nbsp;matches(String&amp;nbsp;card);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;&amp;nbsp;Change&amp;nbsp;to&amp;nbsp;support&amp;nbsp;Visa&amp;nbsp;Carte&amp;nbsp;Blue&amp;nbsp;used&amp;nbsp;in&amp;nbsp;France&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;&amp;nbsp;has&amp;nbsp;been&amp;nbsp;removed&amp;nbsp;-&amp;nbsp;see&amp;nbsp;Bug&amp;nbsp;35926&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;class&amp;nbsp;Visa&amp;nbsp;implements&amp;nbsp;CreditCardType&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;final&amp;nbsp;String&amp;nbsp;PREFIX&amp;nbsp;=&amp;nbsp;"4";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;matches(String&amp;nbsp;card)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;card.substring(0,&amp;nbsp;1).equals(PREFIX)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;&amp;&amp;nbsp;(card.length()&amp;nbsp;==&amp;nbsp;13&amp;nbsp;||&amp;nbsp;card.length()&amp;nbsp;==&amp;nbsp;16));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;class&amp;nbsp;Amex&amp;nbsp;implements&amp;nbsp;CreditCardType&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;final&amp;nbsp;String&amp;nbsp;PREFIX&amp;nbsp;=&amp;nbsp;"34,37,";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;matches(String&amp;nbsp;card)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;prefix2&amp;nbsp;=&amp;nbsp;card.substring(0,&amp;nbsp;2)&amp;nbsp;+&amp;nbsp;",";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;((PREFIX.indexOf(prefix2)&amp;nbsp;!=&amp;nbsp;-1)&amp;nbsp;&amp;&amp;&amp;nbsp;(card.length()&amp;nbsp;==&amp;nbsp;15));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;class&amp;nbsp;Discover&amp;nbsp;implements&amp;nbsp;CreditCardType&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;final&amp;nbsp;String&amp;nbsp;PREFIX&amp;nbsp;=&amp;nbsp;"6011";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;matches(String&amp;nbsp;card)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(card.substring(0,&amp;nbsp;4).equals(PREFIX)&amp;nbsp;&amp;&amp;&amp;nbsp;(card.length()&amp;nbsp;==&amp;nbsp;16));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;class&amp;nbsp;Mastercard&amp;nbsp;implements&amp;nbsp;CreditCardType&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;final&amp;nbsp;String&amp;nbsp;PREFIX&amp;nbsp;=&amp;nbsp;"51,52,53,54,55,";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;matches(String&amp;nbsp;card)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;prefix2&amp;nbsp;=&amp;nbsp;card.substring(0,&amp;nbsp;2)&amp;nbsp;+&amp;nbsp;",";&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;((PREFIX.indexOf(prefix2)&amp;nbsp;!=&amp;nbsp;-1)&amp;nbsp;&amp;&amp;&amp;nbsp;(card.length()&amp;nbsp;==&amp;nbsp;16));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
/**&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Represents&amp;nbsp;a&amp;nbsp;collection&amp;nbsp;of&amp;nbsp;64&amp;nbsp;boolean&amp;nbsp;(on/off)&amp;nbsp;flags.&amp;nbsp;&amp;nbsp;Individual&amp;nbsp;flags&amp;nbsp;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;are&amp;nbsp;represented&amp;nbsp;by&amp;nbsp;powers&amp;nbsp;of&amp;nbsp;2.&amp;nbsp;&amp;nbsp;For&amp;nbsp;example,&lt;br/&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Flag&amp;nbsp;1&amp;nbsp;=&amp;nbsp;1&lt;br/&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Flag&amp;nbsp;2&amp;nbsp;=&amp;nbsp;2&lt;br/&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Flag&amp;nbsp;3&amp;nbsp;=&amp;nbsp;4&lt;br/&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Flag&amp;nbsp;4&amp;nbsp;=&amp;nbsp;8&lt;br/&gt;&lt;br/&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;or&amp;nbsp;using&amp;nbsp;shift&amp;nbsp;operator&amp;nbsp;to&amp;nbsp;make&amp;nbsp;numbering&amp;nbsp;easier:&lt;br/&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Flag&amp;nbsp;1&amp;nbsp;=&amp;nbsp;1&amp;nbsp;&lt;&lt;&amp;nbsp;0&lt;br/&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Flag&amp;nbsp;2&amp;nbsp;=&amp;nbsp;1&amp;nbsp;&lt;&lt;&amp;nbsp;1&lt;br/&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Flag&amp;nbsp;3&amp;nbsp;=&amp;nbsp;1&amp;nbsp;&lt;&lt;&amp;nbsp;2&lt;br/&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Flag&amp;nbsp;4&amp;nbsp;=&amp;nbsp;1&amp;nbsp;&lt;&lt;&amp;nbsp;3&lt;br/&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;&lt;p&gt;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;There&amp;nbsp;cannot&amp;nbsp;be&amp;nbsp;a&amp;nbsp;flag&amp;nbsp;with&amp;nbsp;a&amp;nbsp;value&amp;nbsp;of&amp;nbsp;3&amp;nbsp;because&amp;nbsp;that&amp;nbsp;represents&amp;nbsp;Flag&amp;nbsp;1&amp;nbsp;&lt;br&gt;
&amp;nbsp;*&amp;nbsp;and&amp;nbsp;Flag&amp;nbsp;2&amp;nbsp;both&amp;nbsp;being&amp;nbsp;on/true.&lt;br&gt;
&amp;nbsp;*&amp;nbsp;&lt;/p&gt;&lt;br&gt;
&amp;nbsp;*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;@version&amp;nbsp;$Revision:&amp;nbsp;478334&amp;nbsp;$&amp;nbsp;$Date:&amp;nbsp;2006-11-22&amp;nbsp;21:31:54&amp;nbsp;+0000&amp;nbsp;(Wed,&amp;nbsp;22&amp;nbsp;Nov&amp;nbsp;2006)&amp;nbsp;$&lt;br&gt;
&amp;nbsp;*/&lt;br&gt;
class&amp;nbsp;Flags&amp;nbsp;implements&amp;nbsp;Serializable&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Represents&amp;nbsp;the&amp;nbsp;current&amp;nbsp;flag&amp;nbsp;state.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;long&amp;nbsp;flags&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;Flags&amp;nbsp;object.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Flags()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Initialize&amp;nbsp;a&amp;nbsp;new&amp;nbsp;Flags&amp;nbsp;object&amp;nbsp;with&amp;nbsp;the&amp;nbsp;given&amp;nbsp;flags.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;flags&amp;nbsp;collection&amp;nbsp;of&amp;nbsp;boolean&amp;nbsp;flags&amp;nbsp;to&amp;nbsp;represent.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Flags(long&amp;nbsp;flags)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.flags&amp;nbsp;=&amp;nbsp;flags;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Returns&amp;nbsp;the&amp;nbsp;current&amp;nbsp;flags.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;collection&amp;nbsp;of&amp;nbsp;boolean&amp;nbsp;flags&amp;nbsp;represented.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;long&amp;nbsp;getFlags()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;this.flags;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Tests&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;given&amp;nbsp;flag&amp;nbsp;is&amp;nbsp;on.&amp;nbsp;&amp;nbsp;If&amp;nbsp;the&amp;nbsp;flag&amp;nbsp;is&amp;nbsp;not&amp;nbsp;a&amp;nbsp;power&amp;nbsp;of&amp;nbsp;2&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;(ie.&amp;nbsp;3)&amp;nbsp;this&amp;nbsp;tests&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;combination&amp;nbsp;of&amp;nbsp;flags&amp;nbsp;is&amp;nbsp;on.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;flag&amp;nbsp;Flag&amp;nbsp;value&amp;nbsp;to&amp;nbsp;check.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;flag&amp;nbsp;value&amp;nbsp;is&amp;nbsp;on.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;isOn(long&amp;nbsp;flag)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(this.flags&amp;nbsp;&amp;&amp;nbsp;flag)&amp;nbsp;&gt;&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Tests&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;given&amp;nbsp;flag&amp;nbsp;is&amp;nbsp;off.&amp;nbsp;&amp;nbsp;If&amp;nbsp;the&amp;nbsp;flag&amp;nbsp;is&amp;nbsp;not&amp;nbsp;a&amp;nbsp;power&amp;nbsp;of&amp;nbsp;2&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;(ie.&amp;nbsp;3)&amp;nbsp;this&amp;nbsp;tests&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;combination&amp;nbsp;of&amp;nbsp;flags&amp;nbsp;is&amp;nbsp;off.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;flag&amp;nbsp;Flag&amp;nbsp;value&amp;nbsp;to&amp;nbsp;check.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;flag&amp;nbsp;value&amp;nbsp;is&amp;nbsp;off.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;isOff(long&amp;nbsp;flag)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(this.flags&amp;nbsp;&amp;&amp;nbsp;flag)&amp;nbsp;==&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Turns&amp;nbsp;on&amp;nbsp;the&amp;nbsp;given&amp;nbsp;flag.&amp;nbsp;&amp;nbsp;If&amp;nbsp;the&amp;nbsp;flag&amp;nbsp;is&amp;nbsp;not&amp;nbsp;a&amp;nbsp;power&amp;nbsp;of&amp;nbsp;2&amp;nbsp;(ie.&amp;nbsp;3)&amp;nbsp;this&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;turns&amp;nbsp;on&amp;nbsp;multiple&amp;nbsp;flags.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;flag&amp;nbsp;Flag&amp;nbsp;value&amp;nbsp;to&amp;nbsp;turn&amp;nbsp;on.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;turnOn(long&amp;nbsp;flag)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.flags&amp;nbsp;|=&amp;nbsp;flag;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Turns&amp;nbsp;off&amp;nbsp;the&amp;nbsp;given&amp;nbsp;flag.&amp;nbsp;&amp;nbsp;If&amp;nbsp;the&amp;nbsp;flag&amp;nbsp;is&amp;nbsp;not&amp;nbsp;a&amp;nbsp;power&amp;nbsp;of&amp;nbsp;2&amp;nbsp;(ie.&amp;nbsp;3)&amp;nbsp;this&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;turns&amp;nbsp;off&amp;nbsp;multiple&amp;nbsp;flags.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;flag&amp;nbsp;Flag&amp;nbsp;value&amp;nbsp;to&amp;nbsp;turn&amp;nbsp;off.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;turnOff(long&amp;nbsp;flag)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.flags&amp;nbsp;&amp;=&amp;nbsp;~flag;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Turn&amp;nbsp;off&amp;nbsp;all&amp;nbsp;flags.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;turnOffAll()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.flags&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Turn&amp;nbsp;off&amp;nbsp;all&amp;nbsp;flags.&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;synonym&amp;nbsp;for&amp;nbsp;&lt;code&gt;turnOffAll()&lt;/code&gt;.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@since&amp;nbsp;Validator&amp;nbsp;1.1.1&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;clear()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.flags&amp;nbsp;=&amp;nbsp;0;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Turn&amp;nbsp;on&amp;nbsp;all&amp;nbsp;64&amp;nbsp;flags.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;turnOnAll()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.flags&amp;nbsp;=&amp;nbsp;Long.MAX_VALUE;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Clone&amp;nbsp;this&amp;nbsp;Flags&amp;nbsp;object.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;a&amp;nbsp;copy&amp;nbsp;of&amp;nbsp;this&amp;nbsp;object.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@see&amp;nbsp;java.lang.Object#clone()&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Object&amp;nbsp;clone()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;super.clone();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch(CloneNotSupportedException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;RuntimeException("Couldn't&amp;nbsp;clone&amp;nbsp;Flags&amp;nbsp;object.");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Tests&amp;nbsp;if&amp;nbsp;two&amp;nbsp;Flags&amp;nbsp;objects&amp;nbsp;are&amp;nbsp;in&amp;nbsp;the&amp;nbsp;same&amp;nbsp;state.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;obj&amp;nbsp;object&amp;nbsp;being&amp;nbsp;tested&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@see&amp;nbsp;java.lang.Object#equals(java.lang.Object)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;objects&amp;nbsp;are&amp;nbsp;equal.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;equals(Object&amp;nbsp;obj)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!(obj&amp;nbsp;instanceof&amp;nbsp;Flags))&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;false;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(obj&amp;nbsp;==&amp;nbsp;this)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;true;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Flags&amp;nbsp;f&amp;nbsp;=&amp;nbsp;(Flags)&amp;nbsp;obj;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;this.flags&amp;nbsp;==&amp;nbsp;f.flags;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;The&amp;nbsp;hash&amp;nbsp;code&amp;nbsp;is&amp;nbsp;based&amp;nbsp;on&amp;nbsp;the&amp;nbsp;current&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the&amp;nbsp;flags.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@see&amp;nbsp;java.lang.Object#hashCode()&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;the&amp;nbsp;hash&amp;nbsp;code&amp;nbsp;for&amp;nbsp;this&amp;nbsp;object.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;int&amp;nbsp;hashCode()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(int)&amp;nbsp;this.flags;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Returns&amp;nbsp;a&amp;nbsp;64&amp;nbsp;length&amp;nbsp;String&amp;nbsp;with&amp;nbsp;the&amp;nbsp;first&amp;nbsp;flag&amp;nbsp;on&amp;nbsp;the&amp;nbsp;right&amp;nbsp;and&amp;nbsp;the&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;64th&amp;nbsp;flag&amp;nbsp;on&amp;nbsp;the&amp;nbsp;left.&amp;nbsp;&amp;nbsp;A&amp;nbsp;1&amp;nbsp;indicates&amp;nbsp;the&amp;nbsp;flag&amp;nbsp;is&amp;nbsp;on,&amp;nbsp;a&amp;nbsp;0&amp;nbsp;means&amp;nbsp;it's&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;off.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;string&amp;nbsp;representation&amp;nbsp;of&amp;nbsp;this&amp;nbsp;object.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;toString()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;StringBuffer&amp;nbsp;bin&amp;nbsp;=&amp;nbsp;new&amp;nbsp;StringBuffer(Long.toBinaryString(this.flags));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(int&amp;nbsp;i&amp;nbsp;=&amp;nbsp;64&amp;nbsp;-&amp;nbsp;bin.length();&amp;nbsp;i&amp;nbsp;&gt;&amp;nbsp;0;&amp;nbsp;i--)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bin.insert(0,&amp;nbsp;"0");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;bin.toString();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
}&lt;br&gt;</questionanswer>
  </question>
  <question id="1_0_0_8_0_0:7" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Java&amp;nbsp;regex&amp;nbsp;:&amp;nbsp;what&amp;nbsp;are&amp;nbsp;named&amp;nbsp;groups?&amp;nbsp;Provide&amp;nbsp;examples.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>https://blogs.oracle.com/xuemingshen/entry/named_capturing_group_in_jdk7&lt;br&gt;
&lt;br&gt;
Named&amp;nbsp;groups&amp;nbsp;in&amp;nbsp;Regex&amp;nbsp;are&amp;nbsp;available&amp;nbsp;from&amp;nbsp;Java&amp;nbsp;7.&lt;br&gt;
&amp;nbsp;Example&amp;nbsp;of&amp;nbsp;group&amp;nbsp;names&amp;nbsp;'row'&amp;nbsp;which&amp;nbsp;contains&amp;nbsp;one&amp;nbsp;letter:&amp;nbsp;(?&lt;row&gt;[a-zA-Z]{1})&lt;br&gt;
==============================================&lt;br&gt;
Example&amp;nbsp;:&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;com.ap;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.regex.Matcher;&lt;br&gt;
import&amp;nbsp;java.util.regex.Pattern;&lt;br&gt;
&lt;br&gt;
/**&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Created&amp;nbsp;by&amp;nbsp;andrii&amp;nbsp;on&amp;nbsp;07.08.16.&lt;br&gt;
&amp;nbsp;*/&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;DemoAP&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;throws&amp;nbsp;InvalidLocationException{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Pattern&amp;nbsp;pattern&amp;nbsp;=&amp;nbsp;Pattern.compile("^(?&lt;row&gt;[a-zA-Z]{1})(?&lt;column&gt;[0-9]+)(?&lt;anotherval&gt;[a-z]{2})$");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Matcher&amp;nbsp;matcher&amp;nbsp;=&amp;nbsp;pattern.matcher("B2dd");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!matcher.matches())&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;Exception("Invalid&amp;nbsp;buttons");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;display&amp;nbsp;captured&amp;nbsp;groups&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(matcher.group("row"));&amp;nbsp;//&amp;nbsp;B&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(matcher.group("column"));&amp;nbsp;//&amp;nbsp;2&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(matcher.group("anotherval"));&amp;nbsp;//&amp;nbsp;dd&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}</questionanswer>
  </question>
</questions>
