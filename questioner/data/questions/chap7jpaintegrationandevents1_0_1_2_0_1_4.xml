<?xml version="1.0" encoding="UTF-8"?>
<questions id="1_0_1_2_0_1_4" name="chap7JPAIntegrationandEvents" nofquestions="4" nofsubcategories="0" filename="chap7jpaintegrationandevents1_0_1_2_0_1_4.xml">
  <question id="1_0_1_2_0_1_4:0" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JPA&amp;nbsp;vs&amp;nbsp;Hibernate,&amp;nbsp;which&amp;nbsp;one&amp;nbsp;use.&lt;br&gt;
How&amp;nbsp;to&amp;nbsp;set&amp;nbsp;up&amp;nbsp;Hello&amp;nbsp;world&amp;nbsp;JPA&amp;nbsp;application&amp;nbsp;(using&amp;nbsp;Hibernate&amp;nbsp;implementation&amp;nbsp;of&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JPA)&amp;nbsp;and&amp;nbsp;save&amp;nbsp;some&amp;nbsp;data.&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>As&amp;nbsp;you&amp;nbsp;state&amp;nbsp;JPA&amp;nbsp;is&amp;nbsp;just&amp;nbsp;a&amp;nbsp;specification,&amp;nbsp;meaning&amp;nbsp;there&amp;nbsp;is&amp;nbsp;no&amp;nbsp;implementation.&amp;nbsp;You&amp;nbsp;can&amp;nbsp;annotate&amp;nbsp;your&amp;nbsp;classes&lt;br&gt;
as&amp;nbsp;much&amp;nbsp;as&amp;nbsp;you&amp;nbsp;would&amp;nbsp;like&amp;nbsp;with&amp;nbsp;JPA&amp;nbsp;annotations,&amp;nbsp;however&amp;nbsp;without&amp;nbsp;an&amp;nbsp;implementation&amp;nbsp;nothing&amp;nbsp;will&amp;nbsp;happen.&lt;br&gt;
Think&amp;nbsp;of&amp;nbsp;JPA&amp;nbsp;as&amp;nbsp;the&amp;nbsp;guidelines&amp;nbsp;that&amp;nbsp;must&amp;nbsp;be&amp;nbsp;followed&amp;nbsp;or&amp;nbsp;an&amp;nbsp;interface,&amp;nbsp;while&amp;nbsp;Hibernate's&amp;nbsp;JPA&amp;nbsp;implementation&amp;nbsp;is&lt;br&gt;
code&amp;nbsp;that&amp;nbsp;meets&amp;nbsp;the&amp;nbsp;API&amp;nbsp;as&amp;nbsp;defined&amp;nbsp;by&amp;nbsp;the&amp;nbsp;JPA&amp;nbsp;specification&amp;nbsp;and&amp;nbsp;provides&amp;nbsp;the&amp;nbsp;under&amp;nbsp;the&amp;nbsp;hood&amp;nbsp;functionality.&lt;br&gt;
&lt;br&gt;
When&amp;nbsp;you&amp;nbsp;use&amp;nbsp;Hibernate&amp;nbsp;with&amp;nbsp;JPA&amp;nbsp;you&amp;nbsp;are&amp;nbsp;actually&amp;nbsp;using&amp;nbsp;the&amp;nbsp;Hibernate&amp;nbsp;JPA&amp;nbsp;implementation.&amp;nbsp;The&amp;nbsp;benefit&amp;nbsp;of&amp;nbsp;this&lt;br&gt;
is&amp;nbsp;that&amp;nbsp;you&amp;nbsp;can&amp;nbsp;swap&amp;nbsp;out&amp;nbsp;Hibernate's&amp;nbsp;implementation&amp;nbsp;of&amp;nbsp;JPA&amp;nbsp;for&amp;nbsp;another&amp;nbsp;implementation&amp;nbsp;of&amp;nbsp;the&amp;nbsp;JPA&amp;nbsp;specification.&lt;br&gt;
When&amp;nbsp;you&amp;nbsp;use&amp;nbsp;straight&amp;nbsp;Hibernate&amp;nbsp;you&amp;nbsp;are&amp;nbsp;locking&amp;nbsp;into&amp;nbsp;the&amp;nbsp;implementation&amp;nbsp;because&amp;nbsp;other&amp;nbsp;ORMs&amp;nbsp;may&amp;nbsp;use&lt;br&gt;
different&amp;nbsp;methods/configurations&amp;nbsp;and&amp;nbsp;annotations,&amp;nbsp;therefore&amp;nbsp;you&amp;nbsp;cannot&amp;nbsp;just&amp;nbsp;switch&amp;nbsp;over&amp;nbsp;to&amp;nbsp;another&amp;nbsp;ORM.&lt;br&gt;
&lt;br&gt;
=================================================&lt;br&gt;
1)&amp;nbsp;We&amp;nbsp;need&amp;nbsp;persistence.xml&amp;nbsp;file&amp;nbsp;(it&amp;nbsp;should&amp;nbsp;be&amp;nbsp;located&amp;nbsp;in&amp;nbsp;classpath&amp;nbsp;and&amp;nbsp;in&amp;nbsp;META-INF&amp;nbsp;folder,&lt;br&gt;
i&amp;nbsp;put&amp;nbsp;it&amp;nbsp;to&amp;nbsp;&lt;project&gt;/main/resources/META-INF/persistence.xml)&lt;br&gt;
&lt;br&gt;
?xml&amp;nbsp;version="1.0"?&gt;&lt;br&gt;
persistence&amp;nbsp;xmlns="http://java.sun.com/xml/ns/persistence"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xsi:schemaLocation="http://java.sun.com/xml/ns/persistence&lt;br&gt;
http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;version="2.0"&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;persistence-unit&amp;nbsp;name="chapter12-mongo"&amp;nbsp;transaction-type="RESOURCE_LOCAL"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--&amp;nbsp;Use&amp;nbsp;Hibernate&amp;nbsp;OGM&amp;nbsp;provider:&amp;nbsp;configuration&amp;nbsp;will&amp;nbsp;be&amp;nbsp;transparent&amp;nbsp;--&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;provider&gt;org.hibernate.ogm.jpa.HibernateOgmPersistence&lt;/provider&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;class&gt;ch12.PersonNoSQL&lt;/class&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;properties&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.ogm.datastore.provider"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value="org.hibernate.ogm.datastore.mongodb.impl.MongoDBDatastoreProvider"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.ogm.mongodb.database"&amp;nbsp;value="chapter12"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.transaction.jta.platform"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value="org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.ogm.datastore.database"&amp;nbsp;value="chapter12"&amp;nbsp;/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.ogm.datastore.create_database"&amp;nbsp;value="true"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/properties&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/persistence-unit&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;persistence-unit&amp;nbsp;name="utiljpa"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--&amp;nbsp;This&amp;nbsp;next&amp;nbsp;node&amp;nbsp;should&amp;nbsp;be&amp;nbsp;included&amp;nbsp;for&amp;nbsp;use&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Hibernate&amp;nbsp;provider&amp;nbsp;in&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A&amp;nbsp;Java&amp;nbsp;EE&amp;nbsp;environment&amp;nbsp;in&amp;nbsp;which&amp;nbsp;Hibernate&amp;nbsp;is&amp;nbsp;not&amp;nbsp;the&amp;nbsp;default.&amp;nbsp;--&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;provider&gt;org.hibernate.ejb.HibernatePersistence&lt;/provider&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;properties&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--&amp;nbsp;Properties&amp;nbsp;prefixed&amp;nbsp;with&amp;nbsp;“javax”&amp;nbsp;are&amp;nbsp;part&amp;nbsp;of&amp;nbsp;the&amp;nbsp;JPA&amp;nbsp;specification.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hibernate&amp;nbsp;will&amp;nbsp;use&amp;nbsp;them&amp;nbsp;as&amp;nbsp;it&amp;nbsp;can.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Properties&amp;nbsp;prefixed&amp;nbsp;with&amp;nbsp;“hibernate”&amp;nbsp;are&amp;nbsp;passed&amp;nbsp;to&amp;nbsp;the&amp;nbsp;Hibernate&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;provider,&amp;nbsp;and&amp;nbsp;map&amp;nbsp;to&amp;nbsp;the&amp;nbsp;standard&amp;nbsp;hibernate&amp;nbsp;properties.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="javax.persistence.jdbc.driver"&amp;nbsp;value="com.mysql.jdbc.Driver"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="javax.persistence.jdbc.url"&amp;nbsp;value="jdbc:mysql://localhost:3306/beginningHibernate2014"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="javax.persistence.jdbc.user"&amp;nbsp;value="dev"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="javax.persistence.jdbc.password"&amp;nbsp;value="dev"/&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.dialect"&amp;nbsp;value="org.hibernate.dialect.MySQLDialect"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.hbm2ddl.auto"&amp;nbsp;value="create"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.show_sql"&amp;nbsp;value="true"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/properties&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/persistence-unit&gt;&lt;br&gt;
&lt;/persistence&gt;&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;Also&amp;nbsp;we&amp;nbsp;need&amp;nbsp;some&amp;nbsp;entity&lt;br&gt;
package&amp;nbsp;ch7;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.persistence.*;&lt;br&gt;
&lt;br&gt;
@Entity&lt;br&gt;
@EntityListeners(value&amp;nbsp;=&amp;nbsp;{ThingEntityListenerExternal.class})&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;Thing&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Id&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@GeneratedValue(strategy&amp;nbsp;=&amp;nbsp;GenerationType.AUTO)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;Integer&amp;nbsp;id;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;String&amp;nbsp;name;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@PrePersist&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;beforePersist(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Before&amp;nbsp;persist...");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@PostPersist&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;afterPersist(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Persisted&amp;nbsp;!!!");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getName()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setName(String&amp;nbsp;name)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.name&amp;nbsp;=&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Integer&amp;nbsp;getId()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;id;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setId(Integer&amp;nbsp;id)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.id&amp;nbsp;=&amp;nbsp;id;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
3)&amp;nbsp;ANd&amp;nbsp;example&amp;nbsp;java&amp;nbsp;program&amp;nbsp;(REMEMBER&amp;nbsp;TO&amp;nbsp;CLOSE&amp;nbsp;EntityManagerFactory&amp;nbsp;to&amp;nbsp;avoid&amp;nbsp;hang&amp;nbsp;on)&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;ch7;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;ch3.Person;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityManager;&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityManagerFactory;&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityTransaction;&lt;br&gt;
import&amp;nbsp;javax.persistence.Persistence;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;ch7FirstExampleWIthEManagerProgram&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Using&amp;nbsp;ENtity&amp;nbsp;Manager");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityManagerFactory&amp;nbsp;emf&amp;nbsp;=&amp;nbsp;Persistence.createEntityManagerFactory("utiljpa");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityManager&amp;nbsp;em&amp;nbsp;=&amp;nbsp;emf.createEntityManager();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityTransaction&amp;nbsp;transaction&amp;nbsp;=&amp;nbsp;em.getTransaction();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.begin();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Person&amp;nbsp;p1&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Person();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;p1.setName("From&amp;nbsp;em");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;em.persist(p1);&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.commit();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(em.getClass());&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;em.close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;emf.close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;</questionanswer>
  </question>
  <question id="1_0_1_2_0_1_4:1" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;What&amp;nbsp;is&amp;nbsp;Hibernate&amp;nbsp;Validator&amp;nbsp;?&amp;nbsp;Provide&amp;nbsp;example&amp;nbsp;of&amp;nbsp;using&amp;nbsp;it.&lt;br&gt;
What&amp;nbsp;constraints&amp;nbsp;are&amp;nbsp;available&amp;nbsp;in&amp;nbsp;Hibernate&amp;nbsp;Validator&amp;nbsp;?&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>Java&amp;nbsp;Bean&amp;nbsp;Validation&amp;nbsp;(JSR&amp;nbsp;303)&amp;nbsp;is&amp;nbsp;a&amp;nbsp;framework&amp;nbsp;that&amp;nbsp;has&amp;nbsp;been&amp;nbsp;approved&amp;nbsp;by&amp;nbsp;the&amp;nbsp;JCP&amp;nbsp;as&amp;nbsp;of&amp;nbsp;16&amp;nbsp;November&amp;nbsp;2009&amp;nbsp;and&amp;nbsp;is&amp;nbsp;accepted&amp;nbsp;as&lt;br&gt;
part&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Java&amp;nbsp;EE&amp;nbsp;6&amp;nbsp;specification.&amp;nbsp;Bean&amp;nbsp;Validation&amp;nbsp;defines&amp;nbsp;a&amp;nbsp;metadata&amp;nbsp;model&amp;nbsp;and&amp;nbsp;API&amp;nbsp;for&amp;nbsp;JavaBean&amp;nbsp;validation.&amp;nbsp;The&amp;nbsp;metadata&lt;br&gt;
source&amp;nbsp;is&amp;nbsp;annotations,&amp;nbsp;with&amp;nbsp;the&amp;nbsp;ability&amp;nbsp;to&amp;nbsp;override&amp;nbsp;and&amp;nbsp;extend&amp;nbsp;the&amp;nbsp;meta-data&amp;nbsp;through&amp;nbsp;the&amp;nbsp;use&amp;nbsp;of&amp;nbsp;XML&amp;nbsp;validation&amp;nbsp;descriptors.&lt;br&gt;
The&amp;nbsp;Hibernate&amp;nbsp;team&amp;nbsp;provides&amp;nbsp;with&amp;nbsp;Hibernate&amp;nbsp;Validator&amp;nbsp;&lt;&lt;---&amp;nbsp;the&amp;nbsp;reference&amp;nbsp;implementation&amp;nbsp;of&amp;nbsp;Bean&amp;nbsp;Validation&amp;nbsp;and&amp;nbsp;also&amp;nbsp;created&lt;br&gt;
the&amp;nbsp;Bean&amp;nbsp;Validation&amp;nbsp;TCK&amp;nbsp;any&amp;nbsp;implementation&amp;nbsp;of&amp;nbsp;JSR&amp;nbsp;303&amp;nbsp;needs&amp;nbsp;to&amp;nbsp;pass.&lt;br&gt;
===================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Bean&amp;nbsp;validation&amp;nbsp;1.1&amp;nbsp;includes&amp;nbsp;such&amp;nbsp;annotations&amp;nbsp;(javax.validation&amp;nbsp;package)&lt;br&gt;
AssertFalse.class&lt;br&gt;
AssertTrue.class&lt;br&gt;
DecimalMax.class&lt;br&gt;
DecimalMin.class&lt;br&gt;
Digits.class&lt;br&gt;
Future.class&lt;br&gt;
Max.class&lt;br&gt;
Min.class&lt;br&gt;
NotNull.class&lt;br&gt;
Null.class&lt;br&gt;
Past.class&lt;br&gt;
Pattern.class&lt;br&gt;
Size.class&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hibernate&amp;nbsp;validator&amp;nbsp;additionally&amp;nbsp;adds&amp;nbsp;such&amp;nbsp;annotations&amp;nbsp;&lt;br&gt;
CompositionType.class&lt;br&gt;
ConstraintComposition.class&lt;br&gt;
CreditCardNumber.class&lt;br&gt;
EAN.class&lt;br&gt;
Email.class&lt;br&gt;
Length.class&lt;br&gt;
LuhnCheck.class&lt;br&gt;
Mod10Check.class&lt;br&gt;
Mod11Check.class&lt;br&gt;
ModCheck.class&lt;br&gt;
NotBlank.class&lt;br&gt;
NotEmpty.class&lt;br&gt;
ParameterScriptAssert.class&lt;br&gt;
Range.class&lt;br&gt;
SafeHtml.class&lt;br&gt;
ScriptAssert.class&lt;br&gt;
URL.class&lt;br&gt;
&lt;br&gt;
===================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example&amp;nbsp;of&amp;nbsp;using&amp;nbsp;Hibernate&amp;nbsp;validator&lt;br&gt;
1)&amp;nbsp;Setup&amp;nbsp;maven&amp;nbsp;dependencies&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;dependency&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;groupId&gt;org.hibernate&lt;/groupId&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;version&gt;4.3.11.Final&lt;/version&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/dependency&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--&amp;nbsp;Hibernate&amp;nbsp;validator&amp;nbsp;--&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;dependency&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;groupId&gt;org.hibernate&lt;/groupId&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;version&gt;5.2.2.Final&lt;/version&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/dependency&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;dependency&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;groupId&gt;javax.el&lt;/groupId&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;artifactId&gt;javax.el-api&lt;/artifactId&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;version&gt;2.2.4&lt;/version&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/dependency&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;dependency&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;artifactId&gt;javax.el&lt;/artifactId&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;version&gt;2.2.4&lt;/version&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/dependency&gt;&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;Entity&amp;nbsp;we'll&amp;nbsp;validate&lt;br&gt;
package&amp;nbsp;ch7;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.persistence.Entity;&lt;br&gt;
import&amp;nbsp;javax.persistence.GeneratedValue;&lt;br&gt;
import&amp;nbsp;javax.persistence.GenerationType;&lt;br&gt;
import&amp;nbsp;javax.persistence.Id;&lt;br&gt;
import&amp;nbsp;javax.validation.constraints.Min;&lt;br&gt;
import&amp;nbsp;javax.validation.constraints.NotNull;&lt;br&gt;
import&amp;nbsp;javax.validation.constraints.Pattern;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;org.hibernate.validator.constraints.Email;&lt;br&gt;
&lt;br&gt;
@Entity&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;ValidatedSimplePerson&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Id&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@GeneratedValue(strategy&amp;nbsp;=&amp;nbsp;GenerationType.AUTO)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Long&amp;nbsp;id;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;lname;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Min(16)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Integer&amp;nbsp;age;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Email&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;email;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Pattern(regexp=".*12.*")&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@NotNull&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;mustContains12;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Long&amp;nbsp;getId()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;id;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setId(Long&amp;nbsp;id)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.id&amp;nbsp;=&amp;nbsp;id;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getName()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setName(String&amp;nbsp;name)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.name&amp;nbsp;=&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getLname()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;lname;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setLname(String&amp;nbsp;lname)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.lname&amp;nbsp;=&amp;nbsp;lname;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Integer&amp;nbsp;getAge()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;age;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setAge(Integer&amp;nbsp;age)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.age&amp;nbsp;=&amp;nbsp;age;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getEmail()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;email;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setEmail(String&amp;nbsp;email)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.email&amp;nbsp;=&amp;nbsp;email;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getMustContains12()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;mustContains12;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setMustContains12(String&amp;nbsp;mustContains12)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.mustContains12&amp;nbsp;=&amp;nbsp;mustContains12;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
3)&amp;nbsp;Program&amp;nbsp;&lt;br&gt;
package&amp;nbsp;ch7;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityManager;&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityTransaction;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;org.hibernate.Session;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;ch7DataValidationExample&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Data&amp;nbsp;Validation&amp;nbsp;EXAMPLE");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;saveValidatedPerson();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;savePersonWithInvalidDataAndGetException();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JPASessionUtil.closeAllEntityManagerFactories();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;saveValidatedPerson(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityManager&amp;nbsp;em&amp;nbsp;=&amp;nbsp;JPASessionUtil.getEntityManager("utiljpa");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityTransaction&amp;nbsp;transaction&amp;nbsp;=&amp;nbsp;em.getTransaction();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.begin();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ValidatedSimplePerson&amp;nbsp;v1&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ValidatedSimplePerson();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v1.setName("rob");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v1.setAge(24);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v1.setLname("mor");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v1.setEmail("test@gmail.com");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v1.setMustContains12("12");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;em.persist(v1);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.commit();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;em.close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;savePersonWithInvalidDataAndGetException(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityManager&amp;nbsp;em&amp;nbsp;=&amp;nbsp;JPASessionUtil.getEntityManager("utiljpa");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityTransaction&amp;nbsp;transaction&amp;nbsp;=&amp;nbsp;em.getTransaction();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.begin();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ValidatedSimplePerson&amp;nbsp;v1&amp;nbsp;=&amp;nbsp;new&amp;nbsp;ValidatedSimplePerson();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v1.setName("rob");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v1.setAge(15);&amp;nbsp;//&amp;nbsp;wrong&amp;nbsp;value&amp;nbsp;will&amp;nbsp;get&amp;nbsp;exception&amp;nbsp;during&amp;nbsp;persist&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v1.setLname("mor");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v1.setEmail("wrongemail@");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v1.setMustContains12("thisstringdoesntcontains");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;em.persist(v1);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.commit();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;em.close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch&amp;nbsp;(Exception&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.err.println(e.getMessage());&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
}&lt;br&gt;
OUTPUT&amp;nbsp;is&amp;nbsp;:&lt;br&gt;
List&amp;nbsp;of&amp;nbsp;constraint&amp;nbsp;violations:[&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ConstraintViolationImpl{interpolatedMessage='must&amp;nbsp;match&amp;nbsp;".*12.*"',&amp;nbsp;propertyPath=mustContains12,&amp;nbsp;rootBeanClass=class&amp;nbsp;ch7.ValidatedSimplePerson,&amp;nbsp;messageTemplate='{javax.validation.constraints.Pattern.message}'}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ConstraintViolationImpl{interpolatedMessage='must&amp;nbsp;be&amp;nbsp;greater&amp;nbsp;than&amp;nbsp;or&amp;nbsp;equal&amp;nbsp;to&amp;nbsp;16',&amp;nbsp;propertyPath=age,&amp;nbsp;rootBeanClass=class&amp;nbsp;ch7.ValidatedSimplePerson,&amp;nbsp;messageTemplate='{javax.validation.constraints.Min.message}'}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ConstraintViolationImpl{interpolatedMessage='not&amp;nbsp;a&amp;nbsp;well-formed&amp;nbsp;email&amp;nbsp;address',&amp;nbsp;propertyPath=email,&amp;nbsp;rootBeanClass=class&amp;nbsp;ch7.ValidatedSimplePerson,&amp;nbsp;messageTemplate='{org.hibernate.validator.constraints.Email.message}'}&lt;br&gt;
]&lt;br&gt;
===============&lt;br&gt;
4)))))&amp;nbsp;JPASessionUtil&lt;br&gt;
&lt;br&gt;
package&amp;nbsp;ch7;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityManager;&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityManagerFactory;&lt;br&gt;
import&amp;nbsp;javax.persistence.Persistence;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;org.hibernate.Session;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.HashMap;&lt;br&gt;
import&amp;nbsp;java.util.Map;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;JPASessionUtil&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;Map&lt;String,&amp;nbsp;EntityManagerFactory&gt;&amp;nbsp;persistenceUnits&amp;nbsp;=&amp;nbsp;new&amp;nbsp;HashMap&lt;&gt;();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;synchronized&amp;nbsp;EntityManager&amp;nbsp;getEntityManager(String&amp;nbsp;persistenceUnitName){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(!persistenceUnits.containsKey(persistenceUnitName)){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;persistenceUnits.put(persistenceUnitName,&amp;nbsp;Persistence.createEntityManagerFactory(persistenceUnitName));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;persistenceUnits.get(persistenceUnitName).createEntityManager();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;Session&amp;nbsp;getSession(String&amp;nbsp;persistenceUnitName){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;getEntityManager(persistenceUnitName).unwrap(Session.class);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;closeEntityManagerFactory(String&amp;nbsp;persistenceUnitName){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(persistenceUnits.containsKey(persistenceUnitName)){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;persistenceUnits.get(persistenceUnitName).close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;closeAllEntityManagerFactories(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for(String&amp;nbsp;item&amp;nbsp;:&amp;nbsp;persistenceUnits.keySet()){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;persistenceUnits.get(item).close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;</questionanswer>
  </question>
  <question id="1_0_1_2_0_1_4:2" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JPA&amp;nbsp;Lifecycle&amp;nbsp;Events&amp;nbsp;describe,&amp;nbsp;provide&amp;nbsp;example.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>The&amp;nbsp;Java&amp;nbsp;Persistence&amp;nbsp;Architecture&amp;nbsp;exposes&amp;nbsp;certain&amp;nbsp;events&amp;nbsp;to&amp;nbsp;a&amp;nbsp;data&amp;nbsp;model.&amp;nbsp;These&amp;nbsp;events&lt;br&gt;
allow&amp;nbsp;the&amp;nbsp;developer&amp;nbsp;to&lt;br&gt;
implement&amp;nbsp;additional&amp;nbsp;functionality&amp;nbsp;that&amp;nbsp;the&amp;nbsp;architecture&amp;nbsp;itself&amp;nbsp;might&amp;nbsp;not&amp;nbsp;easily&amp;nbsp;offer.&lt;br&gt;
The&amp;nbsp;events&amp;nbsp;are&amp;nbsp;specified&amp;nbsp;through&lt;br&gt;
the&amp;nbsp;use&amp;nbsp;of&amp;nbsp;annotations,&amp;nbsp;and&amp;nbsp;the&amp;nbsp;event&amp;nbsp;handlers&amp;nbsp;can&amp;nbsp;be&amp;nbsp;embedded&amp;nbsp;in&amp;nbsp;an&amp;nbsp;entity&amp;nbsp;directly,&lt;br&gt;
or&amp;nbsp;can&amp;nbsp;be&amp;nbsp;held&amp;nbsp;in&amp;nbsp;a&amp;nbsp;separate&amp;nbsp;entity&amp;nbsp;listener&amp;nbsp;class.&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The&amp;nbsp;Entity&amp;nbsp;Lifecycle&amp;nbsp;Annotations&lt;br&gt;
@PrePersist&amp;nbsp;Executes&amp;nbsp;before&amp;nbsp;the&amp;nbsp;data&amp;nbsp;is&amp;nbsp;actually&amp;nbsp;inserted&amp;nbsp;into&amp;nbsp;a&amp;nbsp;database&amp;nbsp;table.&amp;nbsp;It&amp;nbsp;is&amp;nbsp;not&amp;nbsp;used&lt;br&gt;
when&amp;nbsp;an&amp;nbsp;object&amp;nbsp;exists&amp;nbsp;in&amp;nbsp;the&amp;nbsp;database&amp;nbsp;and&amp;nbsp;an&amp;nbsp;update&amp;nbsp;occurs.&lt;br&gt;
@PostPersist&amp;nbsp;Executes&amp;nbsp;after&amp;nbsp;the&amp;nbsp;data&amp;nbsp;is&amp;nbsp;written&amp;nbsp;to&amp;nbsp;a&amp;nbsp;database&amp;nbsp;table.&lt;br&gt;
@PreUpdate&amp;nbsp;Executes&amp;nbsp;when&amp;nbsp;a&amp;nbsp;managed&amp;nbsp;object&amp;nbsp;is&amp;nbsp;updated.&amp;nbsp;This&amp;nbsp;annotation&amp;nbsp;is&amp;nbsp;not&amp;nbsp;used&amp;nbsp;when&amp;nbsp;an&lt;br&gt;
object&amp;nbsp;is&amp;nbsp;first&amp;nbsp;persisted&amp;nbsp;to&amp;nbsp;a&amp;nbsp;database.&lt;br&gt;
@PostUpdate&amp;nbsp;Executes&amp;nbsp;after&amp;nbsp;an&amp;nbsp;update&amp;nbsp;for&amp;nbsp;managed&amp;nbsp;objects&amp;nbsp;is&amp;nbsp;written&amp;nbsp;to&amp;nbsp;the&amp;nbsp;database.&lt;br&gt;
@PreRemove&amp;nbsp;Executes&amp;nbsp;before&amp;nbsp;a&amp;nbsp;managed&amp;nbsp;object’s&amp;nbsp;data&amp;nbsp;is&amp;nbsp;removed&amp;nbsp;from&amp;nbsp;the&amp;nbsp;database.&lt;br&gt;
@PostRemove&amp;nbsp;Executes&amp;nbsp;after&amp;nbsp;a&amp;nbsp;managed&amp;nbsp;object’s&amp;nbsp;data&amp;nbsp;is&amp;nbsp;removed&amp;nbsp;from&amp;nbsp;the&amp;nbsp;database.&lt;br&gt;
@PostLoad&amp;nbsp;Executes&amp;nbsp;after&amp;nbsp;a&amp;nbsp;managed&amp;nbsp;object’s&amp;nbsp;data&amp;nbsp;has&amp;nbsp;been&amp;nbsp;loaded&amp;nbsp;from&amp;nbsp;the&amp;nbsp;database&amp;nbsp;and&amp;nbsp;the&lt;br&gt;
object&amp;nbsp;has&amp;nbsp;been&amp;nbsp;initialized.&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Exxample&lt;br&gt;
&lt;br&gt;
1)&lt;br&gt;
package&amp;nbsp;ch7;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.persistence.*;&lt;br&gt;
&lt;br&gt;
@Entity&lt;br&gt;
@EntityListeners(value&amp;nbsp;=&amp;nbsp;{ThingEntityListenerExternal.class})&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;Thing&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Id&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@GeneratedValue(strategy&amp;nbsp;=&amp;nbsp;GenerationType.AUTO)&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;Integer&amp;nbsp;id;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;String&amp;nbsp;name;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@PrePersist&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;beforePersist(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Before&amp;nbsp;persist...");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@PostPersist&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;afterPersist(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Persisted&amp;nbsp;!!!");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getName()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setName(String&amp;nbsp;name)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.name&amp;nbsp;=&amp;nbsp;name;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Integer&amp;nbsp;getId()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;id;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;setId(Integer&amp;nbsp;id)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.id&amp;nbsp;=&amp;nbsp;id;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;Extenral&amp;nbsp;listener&amp;nbsp;&lt;br&gt;
package&amp;nbsp;ch7;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.persistence.PostPersist;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;ThingEntityListenerExternal&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@PostPersist&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;postPersistThing(Object&amp;nbsp;o&amp;nbsp;){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("External&amp;nbsp;LISTENER&amp;nbsp;IN&amp;nbsp;THING&amp;nbsp;ENTITY:&amp;nbsp;postr&amp;nbsp;persist");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
3)&amp;nbsp;package&amp;nbsp;ch7;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityManager;&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityManagerFactory;&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityTransaction;&lt;br&gt;
import&amp;nbsp;javax.persistence.Persistence;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;ch7EntityLifecycleEventsProgram&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;throws&amp;nbsp;InterruptedException&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println("Entity&amp;nbsp;Lifecycle&amp;nbsp;events&amp;nbsp;Example");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*EntityManagerFactory&amp;nbsp;emf&amp;nbsp;=&amp;nbsp;Persistence.createEntityManagerFactory("utiljpa");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityManager&amp;nbsp;em&amp;nbsp;=&amp;nbsp;emf.createEntityManager();*/&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityManager&amp;nbsp;em&amp;nbsp;=&amp;nbsp;JPASessionUtil.getEntityManager("utiljpa");&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityTransaction&amp;nbsp;transaction&amp;nbsp;=&amp;nbsp;em.getTransaction();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.begin();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Thing&amp;nbsp;t1&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Thing();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t1.setName("abc");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;em.persist(t1);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(em.getClass());&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;transaction.commit();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;em.close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JPASessionUtil.closeAllEntityManagerFactories();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//emf.close();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
OUTPUT&amp;nbsp;&amp;nbsp;:&lt;br&gt;
Before&amp;nbsp;persist...&lt;br&gt;
Hibernate:&amp;nbsp;insert&amp;nbsp;into&amp;nbsp;Thing&amp;nbsp;(name)&amp;nbsp;values&amp;nbsp;(?)&lt;br&gt;
External&amp;nbsp;LISTENER&amp;nbsp;IN&amp;nbsp;THING&amp;nbsp;ENTITY:&amp;nbsp;postr&amp;nbsp;persist&lt;br&gt;
Persisted&amp;nbsp;!!!&lt;br&gt;
class&amp;nbsp;org.hibernate.jpa.internal.EntityManagerImpl</questionanswer>
  </question>
  <question id="1_0_1_2_0_1_4:3" type="2">
    <questiontext>&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;How&amp;nbsp;to&amp;nbsp;create&amp;nbsp;EntityManager&amp;nbsp;instance&amp;nbsp;?&amp;nbsp;Provide&amp;nbsp;simple&amp;nbsp;JPASessionUtils&amp;nbsp;&lt;br&gt;
class,&amp;nbsp;which&amp;nbsp;can&amp;nbsp;create&amp;nbsp;EntityManager&amp;nbsp;instances&amp;nbsp;and&amp;nbsp;hibernate&amp;nbsp;Session&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;instances.&lt;br&gt;
&lt;br&gt;
What&amp;nbsp;is&amp;nbsp;Persistance&amp;nbsp;context&amp;nbsp;???&amp;nbsp;EntityManager&amp;nbsp;interface,&amp;nbsp;describe.&lt;br&gt;
&lt;br&gt;
What&amp;nbsp;is&amp;nbsp;output&amp;nbsp;of&amp;nbsp;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityManager&amp;nbsp;em&amp;nbsp;=&amp;nbsp;JPASessionUtil.getEntityManager(&amp;quot;utiljpa&amp;quot;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(em.getClass());&lt;br&gt;
&amp;nbsp;&amp;nbsp;</questiontext>
    <questionanswer>&lt;br&gt;
1)&amp;nbsp;Create&amp;nbsp;Entity&amp;nbsp;Manager&amp;nbsp;instance&lt;br&gt;
-&amp;nbsp;persistence.xml&amp;nbsp;in&amp;nbsp;&lt;classpath&gt;/META-INF/persistence.xml&lt;br&gt;
?xml&amp;nbsp;version="1.0"?&gt;&lt;br&gt;
&lt;persistence&amp;nbsp;xmlns="http://java.sun.com/xml/ns/persistence"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xsi:schemaLocation="http://java.sun.com/xml/ns/persistence&lt;br&gt;
http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;version="2.0"&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;persistence-unit&amp;nbsp;name="utiljpa"&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--&amp;nbsp;This&amp;nbsp;next&amp;nbsp;node&amp;nbsp;should&amp;nbsp;be&amp;nbsp;included&amp;nbsp;for&amp;nbsp;use&amp;nbsp;of&amp;nbsp;the&amp;nbsp;Hibernate&amp;nbsp;provider&amp;nbsp;in&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A&amp;nbsp;Java&amp;nbsp;EE&amp;nbsp;environment&amp;nbsp;in&amp;nbsp;which&amp;nbsp;Hibernate&amp;nbsp;is&amp;nbsp;not&amp;nbsp;the&amp;nbsp;default.&amp;nbsp;--&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;provider&gt;org.hibernate.ejb.HibernatePersistence&lt;/provider&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;properties&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--&amp;nbsp;Properties&amp;nbsp;prefixed&amp;nbsp;with&amp;nbsp;“javax”&amp;nbsp;are&amp;nbsp;part&amp;nbsp;of&amp;nbsp;the&amp;nbsp;JPA&amp;nbsp;specification.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hibernate&amp;nbsp;will&amp;nbsp;use&amp;nbsp;them&amp;nbsp;as&amp;nbsp;it&amp;nbsp;can.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Properties&amp;nbsp;prefixed&amp;nbsp;with&amp;nbsp;“hibernate”&amp;nbsp;are&amp;nbsp;passed&amp;nbsp;to&amp;nbsp;the&amp;nbsp;Hibernate&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;provider,&amp;nbsp;and&amp;nbsp;map&amp;nbsp;to&amp;nbsp;the&amp;nbsp;standard&amp;nbsp;hibernate&amp;nbsp;properties.&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="javax.persistence.jdbc.driver"&amp;nbsp;value="com.mysql.jdbc.Driver"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="javax.persistence.jdbc.url"&amp;nbsp;value="jdbc:mysql://localhost:3306/beginningHibernate2014"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="javax.persistence.jdbc.user"&amp;nbsp;value="dev"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="javax.persistence.jdbc.password"&amp;nbsp;value="dev"/&gt;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.dialect"&amp;nbsp;value="org.hibernate.dialect.MySQLDialect"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.hbm2ddl.auto"&amp;nbsp;value="create"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;property&amp;nbsp;name="hibernate.show_sql"&amp;nbsp;value="true"/&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/properties&gt;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/persistence-unit&gt;&lt;br&gt;
&lt;/persistence&gt;&lt;br&gt;
&lt;br&gt;
-&amp;nbsp;than&amp;nbsp;creating&amp;nbsp;EntityManager&lt;br&gt;
EntityManagerFactory&amp;nbsp;emf&amp;nbsp;=&amp;nbsp;Persistence.createEntityManagerFactory("utiljpa");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityManager&amp;nbsp;em&amp;nbsp;=&amp;nbsp;emf.createEntityManager();&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
--------------&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Possible&amp;nbsp;JPASessionUtils&amp;nbsp;implementation&lt;br&gt;
package&amp;nbsp;ch7;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityManager;&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityManagerFactory;&lt;br&gt;
import&amp;nbsp;javax.persistence.Persistence;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;org.hibernate.Session;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.HashMap;&lt;br&gt;
import&amp;nbsp;java.util.Map;&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;JPASessionUtil&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;static&amp;nbsp;Map&lt;String,&amp;nbsp;EntityManagerFactory&gt;&amp;nbsp;persistenceUnits&amp;nbsp;=&amp;nbsp;new&amp;nbsp;HashMap&lt;&gt;();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;synchronized&amp;nbsp;EntityManager&amp;nbsp;getEntityManager(String&amp;nbsp;persistenceUnitName){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(!persistenceUnits.containsKey(persistenceUnitName)){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;persistenceUnits.put(persistenceUnitName,&amp;nbsp;Persistence.createEntityManagerFactory(persistenceUnitName));&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;persistenceUnits.get(persistenceUnitName).createEntityManager();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;Session&amp;nbsp;getSession(String&amp;nbsp;persistenceUnitName){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;getEntityManager(persistenceUnitName).unwrap(Session.class);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;closeEntityManagerFactory(String&amp;nbsp;persistenceUnitName){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(persistenceUnits.containsKey(persistenceUnitName)){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;persistenceUnits.get(persistenceUnitName).close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;closeAllEntityManagerFactories(){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for(String&amp;nbsp;item&amp;nbsp;:&amp;nbsp;persistenceUnits.keySet()){&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;persistenceUnits.get(item).close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;br&gt;
================================================&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Persistancd&amp;nbsp;context&amp;nbsp;&lt;br&gt;
&lt;br&gt;
Entities&amp;nbsp;are&amp;nbsp;managed&amp;nbsp;by&amp;nbsp;javax.persistence.EntityManager&amp;nbsp;instance&amp;nbsp;using&amp;nbsp;persistence&amp;nbsp;context.&lt;br&gt;
&lt;br&gt;
Each&amp;nbsp;EntityManager&amp;nbsp;instance&amp;nbsp;is&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;a&amp;nbsp;persistence&amp;nbsp;context.&lt;br&gt;
&lt;br&gt;
Within&amp;nbsp;the&amp;nbsp;persistence&amp;nbsp;context,&amp;nbsp;the&amp;nbsp;entity&amp;nbsp;instances&amp;nbsp;and&amp;nbsp;their&amp;nbsp;lifecycle&amp;nbsp;are&amp;nbsp;managed.&lt;br&gt;
&lt;br&gt;
Persistence&amp;nbsp;context&amp;nbsp;defines&amp;nbsp;a&amp;nbsp;scope&amp;nbsp;under&amp;nbsp;which&amp;nbsp;particular&amp;nbsp;entity&amp;nbsp;instances&amp;nbsp;are&amp;nbsp;created,&amp;nbsp;persisted,&amp;nbsp;and&amp;nbsp;removed.&lt;br&gt;
&lt;br&gt;
A&amp;nbsp;persistence&amp;nbsp;context&amp;nbsp;is&amp;nbsp;like&amp;nbsp;a&amp;nbsp;cache&amp;nbsp;which&amp;nbsp;contains&amp;nbsp;a&amp;nbsp;set&amp;nbsp;of&amp;nbsp;persistent&amp;nbsp;entities&amp;nbsp;,&amp;nbsp;So&amp;nbsp;once&amp;nbsp;the&amp;nbsp;transaction&lt;br&gt;
is&amp;nbsp;finished,&amp;nbsp;all&amp;nbsp;persistent&amp;nbsp;objects&amp;nbsp;are&amp;nbsp;detached&amp;nbsp;from&amp;nbsp;the&amp;nbsp;EntityManager's&amp;nbsp;persistence&amp;nbsp;context&amp;nbsp;and&amp;nbsp;are&amp;nbsp;no&amp;nbsp;longer&amp;nbsp;managed.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
2)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityManager&amp;nbsp;interface&lt;br&gt;
&lt;br&gt;
public&amp;nbsp;interface&amp;nbsp;EntityManager&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Interface&amp;nbsp;used&amp;nbsp;to&amp;nbsp;interact&amp;nbsp;with&amp;nbsp;the&amp;nbsp;persistence&amp;nbsp;context.&lt;br&gt;
An&amp;nbsp;EntityManager&amp;nbsp;instance&amp;nbsp;is&amp;nbsp;associated&amp;nbsp;with&amp;nbsp;a&amp;nbsp;persistence&amp;nbsp;context.&amp;nbsp;A&amp;nbsp;persistence&amp;nbsp;context&amp;nbsp;--------&amp;nbsp;is&amp;nbsp;a&amp;nbsp;set&amp;nbsp;of&amp;nbsp;entity&lt;br&gt;
instances&amp;nbsp;in&amp;nbsp;which&amp;nbsp;for&amp;nbsp;any&amp;nbsp;persistent&amp;nbsp;entity&amp;nbsp;identity&amp;nbsp;there&amp;nbsp;is&amp;nbsp;a&amp;nbsp;unique&amp;nbsp;entity&amp;nbsp;instance.&amp;nbsp;Within&amp;nbsp;the&amp;nbsp;persistence&amp;nbsp;context,&lt;br&gt;
the&amp;nbsp;entity&amp;nbsp;instances&amp;nbsp;and&amp;nbsp;their&amp;nbsp;lifecycle&amp;nbsp;are&amp;nbsp;managed.&amp;nbsp;The&amp;nbsp;EntityManager&amp;nbsp;API&amp;nbsp;is&amp;nbsp;used&amp;nbsp;to&amp;nbsp;create&amp;nbsp;and&amp;nbsp;remove&amp;nbsp;persistent&lt;br&gt;
entity&amp;nbsp;instances,&amp;nbsp;to&amp;nbsp;find&amp;nbsp;entities&amp;nbsp;by&amp;nbsp;their&amp;nbsp;primary&amp;nbsp;key,&amp;nbsp;and&amp;nbsp;to&amp;nbsp;query&amp;nbsp;over&amp;nbsp;entities.&lt;br&gt;
&lt;br&gt;
The&amp;nbsp;set&amp;nbsp;of&amp;nbsp;entities&amp;nbsp;that&amp;nbsp;can&amp;nbsp;be&amp;nbsp;managed&amp;nbsp;by&amp;nbsp;a&amp;nbsp;given&amp;nbsp;EntityManager&amp;nbsp;instance&amp;nbsp;is&amp;nbsp;defined&amp;nbsp;by&amp;nbsp;a&amp;nbsp;persistence&amp;nbsp;unit.&lt;br&gt;
A&amp;nbsp;persistence&amp;nbsp;unit&amp;nbsp;defines&amp;nbsp;the&amp;nbsp;set&amp;nbsp;of&amp;nbsp;all&amp;nbsp;classes&amp;nbsp;that&amp;nbsp;are&amp;nbsp;related&amp;nbsp;or&amp;nbsp;grouped&amp;nbsp;by&amp;nbsp;the&amp;nbsp;application,&lt;br&gt;
and&amp;nbsp;which&amp;nbsp;must&amp;nbsp;be&amp;nbsp;colocated&amp;nbsp;in&amp;nbsp;their&amp;nbsp;mapping&amp;nbsp;to&amp;nbsp;a&amp;nbsp;single&amp;nbsp;database.&lt;br&gt;
Since:&lt;br&gt;
Java&amp;nbsp;Persistence&amp;nbsp;1.0&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Methods&amp;nbsp;in&amp;nbsp;EntityManager&amp;nbsp;interface&lt;br&gt;
javax.persistence.EntityManager&lt;br&gt;
javax.persistence.EntityManager.clear()&amp;nbsp;-&amp;nbsp;Clear&amp;nbsp;the&amp;nbsp;persistence&amp;nbsp;context,&amp;nbsp;causing&amp;nbsp;all&amp;nbsp;managed&amp;nbsp;entities&amp;nbsp;to&amp;nbsp;become&amp;nbsp;detached.&lt;br&gt;
javax.persistence.EntityManager.close()&amp;nbsp;-Close&amp;nbsp;an&amp;nbsp;application-managed&amp;nbsp;entity&amp;nbsp;manager&lt;br&gt;
javax.persistence.EntityManager.contains(Object)&lt;br&gt;
javax.persistence.EntityManager.createEntityGraph(Class&lt;T&gt;)&lt;br&gt;
javax.persistence.EntityManager.createEntityGraph(String)&lt;br&gt;
javax.persistence.EntityManager.createNamedQuery(String)&lt;br&gt;
javax.persistence.EntityManager.createNamedQuery(String,&amp;nbsp;Class&lt;T&gt;)&lt;br&gt;
javax.persistence.EntityManager.createNamedStoredProcedureQuery(String)&lt;br&gt;
javax.persistence.EntityManager.createNativeQuery(String)&lt;br&gt;
javax.persistence.EntityManager.createNativeQuery(String,&amp;nbsp;Class)&lt;br&gt;
javax.persistence.EntityManager.createNativeQuery(String,&amp;nbsp;String)&lt;br&gt;
javax.persistence.EntityManager.createQuery(String)&lt;br&gt;
javax.persistence.EntityManager.createQuery(String,&amp;nbsp;Class&lt;T&gt;)&lt;br&gt;
javax.persistence.EntityManager.createQuery(CriteriaDelete)&lt;br&gt;
javax.persistence.EntityManager.createQuery(CriteriaQuery&lt;T&gt;)&lt;br&gt;
javax.persistence.EntityManager.createQuery(CriteriaUpdate)&lt;br&gt;
javax.persistence.EntityManager.createStoredProcedureQuery(String)&lt;br&gt;
javax.persistence.EntityManager.createStoredProcedureQuery(String,&amp;nbsp;Class...)&lt;br&gt;
javax.persistence.EntityManager.createStoredProcedureQuery(String,&amp;nbsp;String...)&lt;br&gt;
javax.persistence.EntityManager.detach(Object)&lt;br&gt;
javax.persistence.EntityManager.find(Class&lt;T&gt;,&amp;nbsp;Object)&lt;br&gt;
javax.persistence.EntityManager.find(Class&lt;T&gt;,&amp;nbsp;Object,&amp;nbsp;Map&lt;String,&amp;nbsp;Object&gt;)&lt;br&gt;
javax.persistence.EntityManager.find(Class&lt;T&gt;,&amp;nbsp;Object,&amp;nbsp;LockModeType)&lt;br&gt;
javax.persistence.EntityManager.find(Class&lt;T&gt;,&amp;nbsp;Object,&amp;nbsp;LockModeType,&amp;nbsp;Map&lt;String,&amp;nbsp;Object&gt;)&lt;br&gt;
javax.persistence.EntityManager.flush()&lt;br&gt;
javax.persistence.EntityManager.getCriteriaBuilder()&lt;br&gt;
javax.persistence.EntityManager.getDelegate()&lt;br&gt;
javax.persistence.EntityManager.getEntityGraph(String)&lt;br&gt;
javax.persistence.EntityManager.getEntityGraphs(Class&lt;T&gt;)&lt;br&gt;
javax.persistence.EntityManager.getEntityManagerFactory()&lt;br&gt;
javax.persistence.EntityManager.getFlushMode()&lt;br&gt;
javax.persistence.EntityManager.getLockMode(Object)&lt;br&gt;
javax.persistence.EntityManager.getMetamodel()&lt;br&gt;
javax.persistence.EntityManager.getProperties()&lt;br&gt;
javax.persistence.EntityManager.getReference(Class&lt;T&gt;,&amp;nbsp;Object)&lt;br&gt;
javax.persistence.EntityManager.getTransaction()&lt;br&gt;
javax.persistence.EntityManager.isJoinedToTransaction()&lt;br&gt;
javax.persistence.EntityManager.isOpen()&lt;br&gt;
javax.persistence.EntityManager.joinTransaction()&lt;br&gt;
javax.persistence.EntityManager.lock(Object,&amp;nbsp;LockModeType)&lt;br&gt;
javax.persistence.EntityManager.lock(Object,&amp;nbsp;LockModeType,&amp;nbsp;Map&lt;String,&amp;nbsp;Object&gt;)&lt;br&gt;
javax.persistence.EntityManager.merge(T)&lt;br&gt;
javax.persistence.EntityManager.persist(Object)&lt;br&gt;
javax.persistence.EntityManager.refresh(Object)&lt;br&gt;
javax.persistence.EntityManager.refresh(Object,&amp;nbsp;Map&lt;String,&amp;nbsp;Object&gt;)&lt;br&gt;
javax.persistence.EntityManager.refresh(Object,&amp;nbsp;LockModeType)&lt;br&gt;
javax.persistence.EntityManager.refresh(Object,&amp;nbsp;LockModeType,&amp;nbsp;Map&lt;String,&amp;nbsp;Object&gt;)&lt;br&gt;
javax.persistence.EntityManager.remove(Object)&lt;br&gt;
javax.persistence.EntityManager.setFlushMode(FlushModeType)&lt;br&gt;
javax.persistence.EntityManager.setProperty(String,&amp;nbsp;Object)&lt;br&gt;
javax.persistence.EntityManager.unwrap(Class&lt;T&gt;)&amp;nbsp;&amp;nbsp;-&amp;nbsp;Return&amp;nbsp;an&amp;nbsp;object&amp;nbsp;of&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;type&amp;nbsp;to&amp;nbsp;allow&amp;nbsp;access&amp;nbsp;to&amp;nbsp;the&amp;nbsp;provider-specific&amp;nbsp;API&lt;br&gt;
=================================================&lt;br&gt;
3)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;What&amp;nbsp;is&amp;nbsp;output&amp;nbsp;?&amp;nbsp;&lt;br&gt;
&amp;nbsp;EntityManager&amp;nbsp;em&amp;nbsp;=&amp;nbsp;JPASessionUtil.getEntityManager("utiljpa");&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(em.getClass());&lt;br&gt;
&lt;br&gt;
Using&amp;nbsp;Hibernate&amp;nbsp;Output&amp;nbsp;is&amp;nbsp;:&amp;nbsp;&lt;br&gt;
class&amp;nbsp;org.hibernate.jpa.internal.EntityManagerImpl&lt;br&gt;
&lt;br&gt;
P.S&amp;nbsp;source&amp;nbsp;code&amp;nbsp;&amp;nbsp;of&amp;nbsp;org.hibernate.jpa.internal.EntityManagerImpl&lt;br&gt;
&lt;br&gt;
/*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Hibernate,&amp;nbsp;Relational&amp;nbsp;Persistence&amp;nbsp;for&amp;nbsp;Idiomatic&amp;nbsp;Java&lt;br&gt;
&amp;nbsp;*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Copyright&amp;nbsp;(c)&amp;nbsp;2009,&amp;nbsp;2011,&amp;nbsp;Red&amp;nbsp;Hat&amp;nbsp;Inc.&amp;nbsp;or&amp;nbsp;third-party&amp;nbsp;contributors&amp;nbsp;as&lt;br&gt;
&amp;nbsp;*&amp;nbsp;indicated&amp;nbsp;by&amp;nbsp;the&amp;nbsp;@author&amp;nbsp;tags&amp;nbsp;or&amp;nbsp;express&amp;nbsp;copyright&amp;nbsp;attribution&lt;br&gt;
&amp;nbsp;*&amp;nbsp;statements&amp;nbsp;applied&amp;nbsp;by&amp;nbsp;the&amp;nbsp;authors.&amp;nbsp;&amp;nbsp;All&amp;nbsp;third-party&amp;nbsp;contributions&amp;nbsp;are&lt;br&gt;
&amp;nbsp;*&amp;nbsp;distributed&amp;nbsp;under&amp;nbsp;license&amp;nbsp;by&amp;nbsp;Red&amp;nbsp;Hat&amp;nbsp;Inc.&lt;br&gt;
&amp;nbsp;*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;This&amp;nbsp;copyrighted&amp;nbsp;material&amp;nbsp;is&amp;nbsp;made&amp;nbsp;available&amp;nbsp;to&amp;nbsp;anyone&amp;nbsp;wishing&amp;nbsp;to&amp;nbsp;use,&amp;nbsp;modify,&lt;br&gt;
&amp;nbsp;*&amp;nbsp;copy,&amp;nbsp;or&amp;nbsp;redistribute&amp;nbsp;it&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;the&amp;nbsp;terms&amp;nbsp;and&amp;nbsp;conditions&amp;nbsp;of&amp;nbsp;the&amp;nbsp;GNU&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Lesser&amp;nbsp;General&amp;nbsp;Public&amp;nbsp;License,&amp;nbsp;as&amp;nbsp;published&amp;nbsp;by&amp;nbsp;the&amp;nbsp;Free&amp;nbsp;Software&amp;nbsp;Foundation.&lt;br&gt;
&amp;nbsp;*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;This&amp;nbsp;program&amp;nbsp;is&amp;nbsp;distributed&amp;nbsp;in&amp;nbsp;the&amp;nbsp;hope&amp;nbsp;that&amp;nbsp;it&amp;nbsp;will&amp;nbsp;be&amp;nbsp;useful,&lt;br&gt;
&amp;nbsp;*&amp;nbsp;but&amp;nbsp;WITHOUT&amp;nbsp;ANY&amp;nbsp;WARRANTY;&amp;nbsp;without&amp;nbsp;even&amp;nbsp;the&amp;nbsp;implied&amp;nbsp;warranty&amp;nbsp;of&amp;nbsp;MERCHANTABILITY&lt;br&gt;
&amp;nbsp;*&amp;nbsp;or&amp;nbsp;FITNESS&amp;nbsp;FOR&amp;nbsp;A&amp;nbsp;PARTICULAR&amp;nbsp;PURPOSE.&amp;nbsp;&amp;nbsp;See&amp;nbsp;the&amp;nbsp;GNU&amp;nbsp;Lesser&amp;nbsp;General&amp;nbsp;Public&amp;nbsp;License&lt;br&gt;
&amp;nbsp;*&amp;nbsp;for&amp;nbsp;more&amp;nbsp;details.&lt;br&gt;
&amp;nbsp;*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;You&amp;nbsp;should&amp;nbsp;have&amp;nbsp;received&amp;nbsp;a&amp;nbsp;copy&amp;nbsp;of&amp;nbsp;the&amp;nbsp;GNU&amp;nbsp;Lesser&amp;nbsp;General&amp;nbsp;Public&amp;nbsp;License&lt;br&gt;
&amp;nbsp;*&amp;nbsp;along&amp;nbsp;with&amp;nbsp;this&amp;nbsp;distribution;&amp;nbsp;if&amp;nbsp;not,&amp;nbsp;write&amp;nbsp;to:&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Free&amp;nbsp;Software&amp;nbsp;Foundation,&amp;nbsp;Inc.&lt;br&gt;
&amp;nbsp;*&amp;nbsp;51&amp;nbsp;Franklin&amp;nbsp;Street,&amp;nbsp;Fifth&amp;nbsp;Floor&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Boston,&amp;nbsp;MA&amp;nbsp;&amp;nbsp;02110-1301&amp;nbsp;&amp;nbsp;USA&lt;br&gt;
&amp;nbsp;*/&lt;br&gt;
package&amp;nbsp;org.hibernate.jpa.internal;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;java.util.List;&lt;br&gt;
import&amp;nbsp;java.util.Map;&lt;br&gt;
import&amp;nbsp;javax.persistence.EntityGraph;&lt;br&gt;
import&amp;nbsp;javax.persistence.PersistenceContextType;&lt;br&gt;
import&amp;nbsp;javax.persistence.PersistenceException;&lt;br&gt;
import&amp;nbsp;javax.persistence.SynchronizationType;&lt;br&gt;
import&amp;nbsp;javax.persistence.spi.PersistenceUnitTransactionType;&lt;br&gt;
&lt;br&gt;
import&amp;nbsp;org.hibernate.HibernateException;&lt;br&gt;
import&amp;nbsp;org.hibernate.Interceptor;&lt;br&gt;
import&amp;nbsp;org.hibernate.Session;&lt;br&gt;
import&amp;nbsp;org.hibernate.annotations.common.util.ReflectHelper;&lt;br&gt;
import&amp;nbsp;org.hibernate.ejb.AbstractEntityManagerImpl;&lt;br&gt;
import&amp;nbsp;org.hibernate.engine.spi.SessionBuilderImplementor;&lt;br&gt;
import&amp;nbsp;org.hibernate.engine.spi.SessionOwner;&lt;br&gt;
import&amp;nbsp;org.hibernate.jpa.AvailableSettings;&lt;br&gt;
import&amp;nbsp;org.hibernate.jpa.graph.internal.EntityGraphImpl;&lt;br&gt;
&lt;br&gt;
/**&lt;br&gt;
&amp;nbsp;*&amp;nbsp;Hibernate&amp;nbsp;implementation&amp;nbsp;of&amp;nbsp;{@link&amp;nbsp;javax.persistence.EntityManager}.&lt;br&gt;
&amp;nbsp;*&lt;br&gt;
&amp;nbsp;*&amp;nbsp;@author&amp;nbsp;Gavin&amp;nbsp;King&lt;br&gt;
&amp;nbsp;*/&lt;br&gt;
public&amp;nbsp;class&amp;nbsp;EntityManagerImpl&amp;nbsp;extends&amp;nbsp;AbstractEntityManagerImpl&amp;nbsp;implements&amp;nbsp;SessionOwner&amp;nbsp;{&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;final&amp;nbsp;EntityManagerMessageLogger&amp;nbsp;LOG&amp;nbsp;=&amp;nbsp;HEMLogging.messageLogger(&amp;nbsp;EntityManagerImpl.class.getName()&amp;nbsp;);&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;Session&amp;nbsp;session;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;boolean&amp;nbsp;open;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;boolean&amp;nbsp;discardOnClose;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;Class&amp;nbsp;sessionInterceptorClass;&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;EntityManagerImpl(&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EntityManagerFactoryImpl&amp;nbsp;entityManagerFactory,&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PersistenceContextType&amp;nbsp;pcType,&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SynchronizationType&amp;nbsp;synchronizationType,&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PersistenceUnitTransactionType&amp;nbsp;transactionType,&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;boolean&amp;nbsp;discardOnClose,&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Class&amp;nbsp;sessionInterceptorClass,&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Map&amp;nbsp;properties)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super(&amp;nbsp;entityManagerFactory,&amp;nbsp;pcType,&amp;nbsp;synchronizationType,&amp;nbsp;transactionType,&amp;nbsp;properties&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.open&amp;nbsp;=&amp;nbsp;true;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.discardOnClose&amp;nbsp;=&amp;nbsp;discardOnClose;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object&amp;nbsp;localSessionInterceptor&amp;nbsp;=&amp;nbsp;null;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(properties&amp;nbsp;!=&amp;nbsp;null)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;localSessionInterceptor&amp;nbsp;=&amp;nbsp;properties.get(&amp;nbsp;AvailableSettings.SESSION_INTERCEPTOR&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;nbsp;localSessionInterceptor&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(localSessionInterceptor&amp;nbsp;instanceof&amp;nbsp;Class)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sessionInterceptorClass&amp;nbsp;=&amp;nbsp;(Class)&amp;nbsp;localSessionInterceptor;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else&amp;nbsp;if&amp;nbsp;(localSessionInterceptor&amp;nbsp;instanceof&amp;nbsp;String)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sessionInterceptorClass&amp;nbsp;=&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ReflectHelper.classForName(&amp;nbsp;(String)&amp;nbsp;localSessionInterceptor,&amp;nbsp;EntityManagerImpl.class&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(ClassNotFoundException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;PersistenceException("Unable&amp;nbsp;to&amp;nbsp;instanciate&amp;nbsp;interceptor:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;localSessionInterceptor,&amp;nbsp;e);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;PersistenceException("Unable&amp;nbsp;to&amp;nbsp;instanciate&amp;nbsp;interceptor:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;localSessionInterceptor);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.sessionInterceptorClass&amp;nbsp;=&amp;nbsp;sessionInterceptorClass;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;postInit();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;void&amp;nbsp;checkOpen()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkOpen(&amp;nbsp;true&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;checkOpen(boolean&amp;nbsp;markForRollbackIfClosed)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(&amp;nbsp;!&amp;nbsp;isOpen()&amp;nbsp;)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;nbsp;markForRollbackIfClosed&amp;nbsp;)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;markForRollbackOnly();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;IllegalStateException(&amp;nbsp;"EntityManager&amp;nbsp;is&amp;nbsp;closed"&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Session&amp;nbsp;getSession()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkOpen();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;internalGetSession();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;Session&amp;nbsp;getRawSession()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;internalGetSession();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;Session&amp;nbsp;internalGetSession()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;nbsp;session&amp;nbsp;==&amp;nbsp;null&amp;nbsp;)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SessionBuilderImplementor&amp;nbsp;sessionBuilder&amp;nbsp;=&amp;nbsp;internalGetEntityManagerFactory().getSessionFactory().withOptions();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sessionBuilder.owner(&amp;nbsp;this&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(sessionInterceptorClass&amp;nbsp;!=&amp;nbsp;null)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Interceptor&amp;nbsp;interceptor&amp;nbsp;=&amp;nbsp;(Interceptor)&amp;nbsp;sessionInterceptorClass.newInstance();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sessionBuilder.interceptor(&amp;nbsp;interceptor&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(InstantiationException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;PersistenceException("Unable&amp;nbsp;to&amp;nbsp;instantiate&amp;nbsp;session&amp;nbsp;interceptor:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;sessionInterceptorClass,&amp;nbsp;e);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(IllegalAccessException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;PersistenceException("Unable&amp;nbsp;to&amp;nbsp;instantiate&amp;nbsp;session&amp;nbsp;interceptor:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;sessionInterceptorClass,&amp;nbsp;e);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(ClassCastException&amp;nbsp;e)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;PersistenceException("Session&amp;nbsp;interceptor&amp;nbsp;does&amp;nbsp;not&amp;nbsp;implement&amp;nbsp;Interceptor:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;sessionInterceptorClass,&amp;nbsp;e);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sessionBuilder.autoJoinTransactions(&amp;nbsp;getTransactionType()&amp;nbsp;!=&amp;nbsp;PersistenceUnitTransactionType.JTA&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session&amp;nbsp;=&amp;nbsp;sessionBuilder.openSession();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;session;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;close()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkEntityManagerFactory();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkOpen();&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;nbsp;discardOnClose&amp;nbsp;||&amp;nbsp;!isTransactionInProgress()&amp;nbsp;)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//close&amp;nbsp;right&amp;nbsp;now&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;nbsp;session&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.close();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Otherwise,&amp;nbsp;session&amp;nbsp;auto-close&amp;nbsp;will&amp;nbsp;be&amp;nbsp;enabled&amp;nbsp;by&amp;nbsp;shouldAutoCloseSession().&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;open&amp;nbsp;=&amp;nbsp;false;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;isOpen()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//adjustFlushMode();&amp;nbsp;//don't&amp;nbsp;adjust,&amp;nbsp;can't&amp;nbsp;be&amp;nbsp;done&amp;nbsp;on&amp;nbsp;closed&amp;nbsp;EM&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkEntityManagerFactory();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;nbsp;open&amp;nbsp;)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;internalGetSession().isOpen();&amp;nbsp;//to&amp;nbsp;force&amp;nbsp;enlistment&amp;nbsp;in&amp;nbsp;tx&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;open;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(HibernateException&amp;nbsp;he)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throwPersistenceException(&amp;nbsp;he&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;false;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;&lt;T&gt;&amp;nbsp;EntityGraph&lt;T&gt;&amp;nbsp;createEntityGraph(Class&lt;T&gt;&amp;nbsp;rootType)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkOpen();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;EntityGraphImpl&lt;T&gt;(&amp;nbsp;null,&amp;nbsp;getMetamodel().entity(&amp;nbsp;rootType&amp;nbsp;),&amp;nbsp;getEntityManagerFactory()&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;EntityGraph&lt;?&gt;&amp;nbsp;createEntityGraph(String&amp;nbsp;graphName)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkOpen();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final&amp;nbsp;EntityGraphImpl&amp;nbsp;named&amp;nbsp;=&amp;nbsp;getEntityManagerFactory().findEntityGraphByName(&amp;nbsp;graphName&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;nbsp;named&amp;nbsp;==&amp;nbsp;null&amp;nbsp;)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;null;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;named.makeMutableCopy();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@SuppressWarnings("unchecked")&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;EntityGraph&lt;?&gt;&amp;nbsp;getEntityGraph(String&amp;nbsp;graphName)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkOpen();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final&amp;nbsp;EntityGraphImpl&amp;nbsp;named&amp;nbsp;=&amp;nbsp;getEntityManagerFactory().findEntityGraphByName(&amp;nbsp;graphName&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;nbsp;named&amp;nbsp;==&amp;nbsp;null&amp;nbsp;)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw&amp;nbsp;new&amp;nbsp;IllegalArgumentException(&amp;nbsp;"Could&amp;nbsp;not&amp;nbsp;locate&amp;nbsp;EntityGraph&amp;nbsp;with&amp;nbsp;given&amp;nbsp;name&amp;nbsp;:&amp;nbsp;"&amp;nbsp;+&amp;nbsp;graphName&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;named;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;&lt;T&gt;&amp;nbsp;List&lt;EntityGraph&lt;?&amp;nbsp;super&amp;nbsp;T&gt;&gt;&amp;nbsp;getEntityGraphs(Class&lt;T&gt;&amp;nbsp;entityClass)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkOpen();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;getEntityManagerFactory().findEntityGraphsByType(&amp;nbsp;entityClass&amp;nbsp;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;boolean&amp;nbsp;shouldAutoCloseSession()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;!isOpen();&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;void&amp;nbsp;checkEntityManagerFactory()&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(&amp;nbsp;!&amp;nbsp;internalGetEntityManagerFactory().isOpen()&amp;nbsp;)&amp;nbsp;{&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;open&amp;nbsp;=&amp;nbsp;false;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;</questionanswer>
  </question>
</questions>
